(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["static/development/pages/index.js"],{

/***/ "./components/index/Footer.js":
/*!************************************!*\
  !*** ./components/index/Footer.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _this = undefined,\n    _jsxFileName = \"/Users/joseribeiro/Projects/canifly/components/index/Footer.js\";\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\nvar Footer = function Footer() {\n  return __jsx(\"footer\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/1313labs/can-i-fly\",\n    className: \"text-3l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"Made with \\u2764\\uFE0F by 1313labs \", __jsx(\"i\", {\n    className: \"fab fa-fw mr-1 fa-github\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 32\n    }\n  })));\n};\n\n_c = Footer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Footer);\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2luZGV4L0Zvb3Rlci5qcz8zZjllIl0sIm5hbWVzIjpbIkZvb3RlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxTQUFUQSxNQUFTO0FBQUEsU0FDYjtBQUFRLGFBQVMsRUFBQyxhQUFsQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBRyxRQUFJLEVBQUMsdUNBQVI7QUFBZ0QsYUFBUyxFQUFDLFNBQTFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNENBQzJCO0FBQUcsYUFBUyxFQUFDLDBCQUFiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFEM0IsQ0FERixDQURhO0FBQUEsQ0FBZjs7S0FBTUEsTTtBQVFTQSxxRUFBZiIsImZpbGUiOiIuL2NvbXBvbmVudHMvaW5kZXgvRm9vdGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5jb25zdCBGb290ZXIgPSAoKSA9PiAoXG4gIDxmb290ZXIgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tLzEzMTNsYWJzL2Nhbi1pLWZseVwiIGNsYXNzTmFtZT1cInRleHQtM2xcIj5cbiAgICAgIE1hZGUgd2l0aCDinaTvuI8gYnkgMTMxM2xhYnMgPGkgY2xhc3NOYW1lPVwiZmFiIGZhLWZ3IG1yLTEgZmEtZ2l0aHViXCI+PC9pPlxuICAgIDwvYT5cbiAgPC9mb290ZXI+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBGb290ZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/index/Footer.js\n");

/***/ }),

/***/ "./components/index/Header.js":
/*!************************************!*\
  !*** ./components/index/Header.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _this = undefined,\n    _jsxFileName = \"/Users/joseribeiro/Projects/canifly/components/index/Header.js\";\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\nvar Header = function Header() {\n  return __jsx(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-6xl font-bold tracking-tighter text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"Can I fly? \\u2708\\uFE0F\"), __jsx(\"h2\", {\n    className: \"text-2xl font-medium text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Travel restrictions are abounding during the COVID-19 pandemic.\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), \"Use this simple app to know if you can fly somewhere.\"));\n};\n\n_c = Header;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2luZGV4L0hlYWRlci5qcz83OTA4Il0sIm5hbWVzIjpbIkhlYWRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxTQUFUQSxNQUFTO0FBQUEsU0FDYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBSSxhQUFTLEVBQUMsaURBQWQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFERixFQUdFO0FBQUksYUFBUyxFQUFDLGtDQUFkO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0VBRUU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUZGLDBEQUhGLENBRGE7QUFBQSxDQUFmOztLQUFNQSxNO0FBWVNBLHFFQUFmIiwiZmlsZSI6Ii4vY29tcG9uZW50cy9pbmRleC9IZWFkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmNvbnN0IEhlYWRlciA9ICgpID0+IChcbiAgPGhlYWRlcj5cbiAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC02eGwgZm9udC1ib2xkIHRyYWNraW5nLXRpZ2h0ZXIgdGV4dC1jZW50ZXJcIj5DYW4gSSBmbHk/IOKciO+4jzwvaDE+XG5cbiAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1tZWRpdW0gdGV4dC1jZW50ZXJcIj5cbiAgICAgIFRyYXZlbCByZXN0cmljdGlvbnMgYXJlIGFib3VuZGluZyBkdXJpbmcgdGhlIENPVklELTE5IHBhbmRlbWljLlxuICAgICAgPGJyIC8+XG4gICAgICBVc2UgdGhpcyBzaW1wbGUgYXBwIHRvIGtub3cgaWYgeW91IGNhbiBmbHkgc29tZXdoZXJlLlxuICAgIDwvaDI+XG4gIDwvaGVhZGVyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/index/Header.js\n");

/***/ }),

/***/ "./data/airlineInfo.js":
/*!*****************************!*\
  !*** ./data/airlineInfo.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  GR: [{\n    info: \"Aegean Airlines operations as of 20MAY20\",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291359/aegean-airlines-s20-operations-as-of-20may20/\",\n    airline: \"Aegean\"\n  }, {\n    info: \"Olympic Air week of 26APR20 operations as of 26APR20\",\n    updated_at: \"2020-04-28\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290993/olympic-air-week-of-26apr20-operations-as-of-26apr20/\",\n    airline: \"Olympic Air\"\n  }],\n  IE: [{\n    info: \"Ryanair delays Serbia, Bosnia flights until August \",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.exyuaviation.com/2020/05/ryanair-delays-serbia-bosnia-flights.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+Ex-yuAviationNews+(EX-YU+Aviation+News)\\r\",\n    airline: \"Ryanair\"\n  }, {\n    info: \"Ryanair announces plan to restore 40% of flight schedule from July\",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.manchestereveningnews.co.uk/news/greater-manchester-news/ryanair-flight-schedule-july-masks-18236228\",\n    airline: \"Ryanair\"\n  }, {\n    info: \"Ryanair resumes additional London Stansted routes in mid-May 2020 (STN-OTP, STN-OPO, STN-SOF)\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291197/ryanair-resumes-additional-london-stansted-routes-in-mid-may-2020/\",\n    airline: \"Ryanair\"\n  }, {\n    info: \"Ryanair to ground nearly all of its flights until July\",\n    updated_at: \"2020-05-01\",\n    source: \"https://www.reuters.com/article/health-coronavirus-ryanair/ryanair-grounds-virtually-all-planes-until-july-reviews-growth-plans-idUSL8N2CJ0XE\",\n    airline: \"Ryanair\"\n  }, {\n    info: \"AerLingus week of 26APR20 operations\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291022/aerlingus-week-of-26apr20-operations/\",\n    airline: \"Aer Lingus\"\n  }, {\n    info: \"Ryanair extends limited flight schedule to May 14\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.businesstraveller.com/business-travel/2020/04/27/ryanair-extends-limited-flight-schedule-to-may-14/\",\n    airline: \"Ryanair\"\n  }, {\n    info: \"Ryanair extends interim schedule to early-May 2020 (routes from Dublin and London Stansted) \",\n    updated_at: \"2020-04-09\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290711/ryanair-extends-interim-schedule-to-early-may-2020/\",\n    airline: \"Ryanair\"\n  }, {\n    info: \"TUI reveals trips from 30 June set to go ahead as planned\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.coventrytelegraph.net/news/coventry-news/tui-announces-flights-holidays-start-18063024\",\n    airline: \"TUI\"\n  }, {\n    info: \"Aer Lingus Regional operator reduces schedule\",\n    updated_at: \"2020-03-23\",\n    source: \"https://www.rte.ie/news/business/2020/0323/1124759-stobart-air-services/\",\n    airline: \"Aer Lingus\"\n  }],\n  RU: [{\n    info: \"Aurora resumes Khabarovsk \\u2013 Kavalerovo service eff. 02JUN20 to 29SEP20\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291336/aurora-resumes-khabarovsk-kavalerovo-service-in-s20/\",\n    airline: \"Aurora Airlines\"\n  }, {\n    info: \"Aeroflot Mainline (DOMESTIC) May 2020 operations as of 03MAY20\",\n    updated_at: \"2020-05-04\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291080/aeroflot-mainline-may-2020-operations-as-of-03may20/\",\n    airline: \"Aeroflot\"\n  }, {\n    info: \"Aeroflot suspends bookings for international flights until 1 August amid COVID-19 restrictions \",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.panorama.am/en/news/2020/04/17/Aeroflot/2275772\",\n    airline: \"Aeroflot\"\n  }, {\n    info: \"S7 Airlines moves Moscow \\u2013 Beijing launch to July 2020\",\n    updated_at: \"2020-04-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290720/s7-airlines-moves-moscow-beijing-launch-to-july-2020/\",\n    airline: \"S7\"\n  }, {\n    info: \"Ural Airlines plans to expand Kaliningrad service in S20\",\n    updated_at: \"2020-04-10\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290740/ural-airlines-plans-to-expand-kaliningrad-service-in-s20/\",\n    airline: \"Ural Airlines\"\n  }, {\n    info: \"S7 Airlines week of 05APR20 Domestic service reductions\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290705/s7-airlines-week-of-05apr20-domestic-service-reductions/\",\n    airline: \"S7\"\n  }, {\n    info: \"Pobeda to suspend all flights from April 1 to May 31\",\n    updated_at: \"2020-03-31\",\n    source: \"https://worldairlinenews.com/2020/03/30/pobeda-to-suspend-all-flights-from-april-1-to-may-31/\",\n    airline: \"Pobeda\"\n  }, {\n    info: \"Ural Airlines Feb \\u2013 June 2020 International/Regional service cancellations as of 30MAR20\",\n    updated_at: \"2020-03-31\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290560/ural-airlines-feb-june-2020-internationalregional-service-cancellations-as-of-30mar20/\",\n    airline: \"Ural Airlines\"\n  }, {\n    info: \"Azimuth March - May 2020 Regional / International service changes\",\n    updated_at: \"2020-03-28\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290534/azimuth-march-may-2020-regional-international-service-changes/\",\n    airline: \"Azimuth\"\n  }, {\n    info: \"Aeroflot suspends flights to several more destinations: Flights to Delhi will be cancelled from March 22 until 28, to Helsinki from March 23 until April 2, to Stockholm from March 23 until April 17, to Baku from March 29 until April 30, to Zagreb from March 24 until April 19, to Sofia from March 27 until April 17, and to Athens from March 24 until April 18.\",\n    updated_at: \"2020-03-22\",\n    source: \"https://azertag.az/en/xeber/Russia_039s_Aeroflot_suspends_flights_to_Azerbaijan_over_coronavirus-1445745\",\n    airline: \"Aeroflot\"\n  }, {\n    info: \"Rossiya, announced it was suspending its flight from St. Petersburg to London.\",\n    updated_at: \"2020-03-19\",\n    source: \"https://www.ruaviation.com/news/2020/3/19/14848/?h19 \",\n    airline: \"Rossiya\"\n  }],\n  AR: [{\n    info: \"Aerolineas Argentinas June 2020 INTERNATIONAL operations as of 02MAY20\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291067/aerolineas-argentinas-june-2020-international-operations-as-of-1130gmt-02may20/\",\n    airline: \"Aerolineas Argentinas\"\n  }, {\n    info: \"Aerolineas Argentinas 01APR20 \\u2013 10APR20 DOMESTIC operations as of 29MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290537/aerolineas-argentinas-01apr20-10apr20-operations-as-of-29mar20/\",\n    airline: \"Aerolineas Argentinas\"\n  }],\n  MX: [{\n    info: \"AeroMexico June 2020 International operations as of 17MAY20\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291334/aeromexico-june-2020-international-operations-as-of-17may20/\",\n    airline: \"AeroMexico\"\n  }, {\n    info: \"Viva Aerob\\xFAs announces gradual return of flights to and from Cancun starting mid-May\",\n    updated_at: \"2020-05-01\",\n    source: \"https://www.riviera-maya-news.com/viva-aerobus-announces-gradual-return-of-flights-to-and-from-cancun-starting-mid-may/2020.html\",\n    airline: \"Vivaaerobus\"\n  }, {\n    info: \"Interjet April 2020 operations as of 19APR20\",\n    updated_at: \"2020-04-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290908/interjet-april-2020-operations-as-of-19apr20/\",\n    airline: \"Interjet\"\n  }, {\n    info: \"Vivaaerobus 06APR20 \\u2013 10MAY20 Interim operations as of 19APR20\",\n    updated_at: \"2020-04-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290909/vivaaerobus-06apr20-10may20-interim-operations-as-of-19apr20/\",\n    airline: \"Vivaaerobus\"\n  }, {\n    info: \"Volaris airline to reduce capacity during April \",\n    updated_at: \"2020-03-31\",\n    source: \"https://www.reuters.com/article/health-coronavirus-mexico-volaris/mexican-airline-volaris-reduces-capacity-further-amid-coronavirus-idUSL1N2BP07K\",\n    airline: \"Volaris\"\n  }, {\n    info: \"Interjet to suspend international flights from 24 March because of COVID-19 \",\n    updated_at: \"2020-03-21\",\n    source: \"Reuters\",\n    airline: \"Interjet\"\n  }],\n  GH: [{\n    info: \"Africa World Airways resume limited operation from 21APR20\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290862/africa-world-airways-resume-limited-operation-from-21apr20/\",\n    airline: \"Africa World Airways\"\n  }],\n  DZ: [{\n    info: \"Date officielle de la reprise de ses vols : Air Alg\\xE9rie se prononce\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.observalgerie.com/date-officielle-de-la-reprise-de-ses-vols-air-algerie-se-prononce/2020/\",\n    airline: \"Air Algerie\"\n  }],\n  AE: [{\n    info: \"Etihad adds special flights in May and June to and from Abu Dhabi\",\n    updated_at: \"2020-05-19\",\n    source: \"https://gulfbusiness.com/the-complete-list-of-etihad-special-flights-in-may-and-june-to-and-from-abu-dhabi/\\r\",\n    airline: \"Ethiad Airways\"\n  }, {\n    info: \"Flydubai to resume flights from June 4\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.businesstraveller.com/business-travel/2020/05/14/flydubai-to-resume-flights-from-june-4/\\r\",\n    airline: \"Flydubai\"\n  }, {\n    info: \"Emirates resumes 9 passenger routes from 21MAY20 (DXB-ORD, FRA, MAD, MEL, MXP, CDG, SYD, YYZ)\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.emirates.com/ae/english/help/travel-updates/#3524\",\n    airline: \"Emirates\"\n  }, {\n    info: \"Emirates Airline to operate flights to nine destinations from 21 May\",\n    updated_at: \"2020-05-13\",\n    source: \"Reuters\",\n    airline: \"Emirates\"\n  }, {\n    info: \"Etihad resumes flights between Australia and London this week\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.theaureview.com/travel/etihad-resumes-flights-between-australia-and-london-this-week/\",\n    airline: \"Ethiad Airways\"\n  }, {\n    info: \"Etihad announces UAE flights for residents stranded abroad\",\n    updated_at: \"2020-05-09\",\n    source: \"https://www.khaleejtimes.com/coronavirus-pandemic/etihad-announces-uae-flights-for-residents-stranded-abroad\",\n    airline: \"Ethiad Airways\"\n  }, {\n    info: \"Etihad suspends bookings for all passenger flights until June 16\",\n    updated_at: \"2020-04-30\",\n    source: \"https://whatson.ae/2020/04/etihad-suspends-bookings-for-all-flights-until-june-16/\\r\",\n    airline: \"Ethiad Airways\"\n  }, {\n    info: \"Etihad Airways to resume passenger flights on May 16\",\n    updated_at: \"2020-04-25\",\n    source: \"https://www.arabianbusiness.com/transport/445642-etihad-to-resume-passenger-flights-on-may-16\",\n    airline: \"Ethiad Airways\"\n  }, {\n    info: \"Air Arabia Abu Dhabi gets approval to start operations\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.khaleejtimes.com/air-arabia-abu-dhabi-gets-approval-to-start-operations\",\n    airline: \"Air Arabia\"\n  }, {\n    info: \"Etihad May/June 2020 operations as of 0855GMT 23APR20\",\n    updated_at: \"2020-04-23\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290927/etihad-mayjune-2020-operations-as-of-0855gmt-23apr20/\",\n    airline: \"Ethiad Airways\"\n  }, {\n    info: \"Emirates will not resume normal flights until July at earliest because of COVID-19\",\n    updated_at: \"2020-04-22\",\n    source: \"https://samchui.com/2020/04/21/emirates-flights-to-remain-grounded-until-q3/#.XqApWPZuLIV\",\n    airline: \"Emirates\"\n  }, {\n    info: \"Flydubai opens booking for repatriation flights to 13 countries\",\n    updated_at: \"2020-04-13\",\n    source: \"https://www.zawya.com/mena/en/business/story/Flydubai_opens_booking_for_repatriation_flights_to_13_countries-SNG_172211463/\",\n    airline: \"Flydubai\"\n  }, {\n    info: \"Emirates plans to operate limited passenger services to U.S., Asia, North Africa (not defined)\",\n    updated_at: \"2020-04-13\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-emirates-airline/emirates-to-operate-limited-passenger-services-to-u-s-asia-north-africa-idUSKCN21V0T6\",\n    airline: \"Emirates\"\n  }],\n  KZ: [{\n    info: \"Kazakhstan's Air Astana to resume certain flights by end of May\",\n    updated_at: \"2021-05-17\",\n    source: \"https://menafn.com/1100174682/Kazakhstans-Air-Astana-to-resume-certain-flights-by-end-of-May\",\n    airline: \"Air Astana\"\n  }, {\n    info: \"Air Astana restores additional domestic network week of 11MAY20\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291292/air-astana-restores-additional-domestic-network-week-of-11may20/\",\n    airline: \"Air Astana\"\n  }, {\n    info: \"Qazaq Air May 2020 operations as of 14MAY20\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291293/qazaq-air-may-2020-operations-as-of-14may20/\",\n    airline: \"Qazaq Air \"\n  }, {\n    info: \"SCAT 01 \\u2013 15MAY20 Interim operations as of 28APR20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291013/scat-01-15may20-interim-operations-as-of-28apr20/\",\n    airline: \"SCAT Air Company\"\n  }],\n  RE: [{\n    info: \"Air Austral week of 29MAR20 operations\",\n    updated_at: \"2020-03-31\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290566/air-austral-week-of-29mar20-operations/\",\n    airline: \"Air Austral\"\n  }],\n  BE: [{\n    info: \"Brussels Airlines plans to resume its flight operations with a reduced network on June 15\",\n    updated_at: \"2020-05-15\",\n    source: \"https://worldairlinenews.com/2020/05/15/brussels-airlines-plans-to-resume-its-flight-operations-with-a-reduced-network-on-june-15/\",\n    airline: \"Brussels Airlines \"\n  }, {\n    info: \"Air Belgium postpones restart of operations to 24 June \",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.aviation24.be/airlines/air-belgium/air-belgium-expects-to-restart-on-24-june-2020/\",\n    airline: \"Air Belgium\"\n  }, {\n    info: \"Brussels Airlines suspends flights to eight destinations until March 2021 because of COVID-19 crisis\",\n    updated_at: \"2020-04-10\",\n    source: \"https://en.yabiladi.com/articles/details/92021/brussels-airlines-scraps-flights-marrakech.html\",\n    airline: \"Brussels Airlines \"\n  }, {\n    info: \"TUI Airlines Belgium cancels all flights until 10 May \",\n    updated_at: \"2020-04-01\",\n    source: \"https://www.aviation24.be/airlines/tui-belgium-cancels-all-trips-until-may-10-included/\",\n    airline: \"TUI Airlines Belgium\"\n  }, {\n    info: \"Air Antwerp intends to resume service between Antwerp and London City on 4 May\",\n    updated_at: \"2020-03-28\",\n    source: \"https://www.aviation24.be/airlines/air-antwerp/air-antwerp-intends-to-resume-service-between-antwerp-and-london-city-on-4-may/\",\n    airline: \"Air Antwerp\"\n  }],\n  CA: [{\n    info: \"Air Canada International operations as of 21MAY20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291403/air-canada-ns20-international-operations-as-of-21may20/\",\n    airline: \"Air Canada\"\n  }, {\n    info: \"Sunwing Airlines Domestic Canada network eff. late-June 2020\",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291362/sunwing-airlines-s20-domestic-canada-network-as-of-13may20/\",\n    airline: \"Sunwing Airlines\"\n  }, {\n    info: \"Air Canada adds Toronto \\u2013 Vancouver service in June 2020\",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291316/air-canada-adds-a220-toronto-vancouver-service-in-june-2020/\",\n    airline: \"Air Canada\"\n  }, {\n    info: \"Pacific Coastal 01JUN20 \\u2013 27JUN20 interim schedules as of 11MAY20\",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291222/pacific-coastal-01jun20-27jun20-interim-schedules-as-of-11may20/\",\n    airline: \"Pacific Coastal\"\n  }, {\n    info: \"WestJet extends flight cancellations into July after low demand\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.cbc.ca/news/canada/calgary/westjet-flight-cancellations-covid-calgary-1.5564305?cmp=rss\",\n    airline: \"West Jet\"\n  }, {\n    info: \"Canadian North 24APR20 \\u2013 31MAY20 operations\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291038/canadian-north-24apr20-31may20-operations/\",\n    airline: \"Canadian North\"\n  }, {\n    info: \"Porter Airlines extends flight shutdown to June 29\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.cbc.ca/news/business/porter-airline-grounding-1.5546363?cmp=rss\",\n    airline: \"Porter Airlines\"\n  }, {\n    info: \"WestJet 05MAY20 \\u2013 04JUN20 Domestic operations as of 24APR20\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290947/westjet-05may20-04jun20-domestic-operations-as-of-24apr20/\",\n    airline: \"West Jet\"\n  }, {\n    info: \"Air Canada is resuming Tel Aviv-Toronto flights from 1 June with three weekly flights and with daily flights from 23 June. Air Canada is resuming Tel Aviv-Montreal flights from 24 June with two weekly flights and three weekly flights from 6 July. \",\n    updated_at: \"2020-04-22\",\n    source: \"Media\",\n    airline: \"Air Canada\"\n  }, {\n    info: \"Flair Airlines 01APR20 \\u2013 15JUN20 Interim operations\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290858/flair-airlines-01apr20-15jun20-interim-operations/\",\n    airline: \"Flair Airlines\"\n  }, {\n    info: \"Harbour Air suspends all scheduled flights until 4 May.\",\n    updated_at: \"2020-03-27\",\n    source: \"https://www.vicnews.com/news/covid-19-harbour-air-suspends-all-scheduled-flights/\",\n    airline: \"Harbour Air \"\n  }, {\n    info: \"Swoop suspends international flights from 22 March to 31 May \",\n    updated_at: \"2020-03-20\",\n    source: \"https://www.travelweek.ca/news/swoop-to-suspend-international-service-sunday/\",\n    airline: \"Swoop\"\n  }],\n  CN: [{\n    info: \"China Southern June 2020 International/Regional operations as of 21MAY20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291404/china-southern-june-2020-internationalregional-operations-as-of-21may20/\",\n    airline: \"China Southern\"\n  }, {\n    info: \"Juneyao Airlines June 2020 International operations as of 21MAY20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291405/juneyao-airlines-june-2020-international-operations-as-of-21may20/\",\n    airline: \"Juneyao Airlines\"\n  }, {\n    info: \"Xiamen Airlines June 2020 International operations as of 21MAY20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291406/xiamen-airlines-june-2020-international-operations-as-of-21may20/\",\n    airline: \"Xiamen Airlines\"\n  }, {\n    info: \"Air China resumes Madrid service in May 2020 (eff 09MAY20 \\u2013 31MAY20)\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291107/air-china-resumes-madrid-service-in-may-2020/\",\n    airline: \"Air China\"\n  }, {\n    info: \"Beijing Capital Airlines May/June 2020 International operations\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291059/beijing-capital-airlines-mayjune-2020-international-operations/\",\n    airline: \"Beijing Capital Airlines\"\n  }, {\n    info: \"China Southern schedules service 28APR20 \\u2013 27MAY20 as of 27MAY20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290965/china-southern-schedules-a380-vancouver-service-28apr20-27may20/\",\n    airline: \"China Southern\"\n  }, {\n    info: \"Air China May 2020 International operations as of 21APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290903/air-china-may-2020-international-operations-as-of-21apr20/\",\n    airline: \"Air China\"\n  }, {\n    info: \"China Eastern / Shanghai Airlines May 2020 International operations as of 21APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290905/china-eastern-shanghai-airlines-may-2020-international-operations-as-of-21apr20/\",\n    airline: \"China Eastern\"\n  }, {\n    info: \"Hainan Airlines May 2020 International operations as of 21APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290894/hainan-airlines-may-2020-international-operations-as-of-21apr20/\",\n    airline: \"Hainan Airlines\"\n  }, {\n    info: \"Sichuan Airlines plans to resume Los Angeles service from Sep 2020\",\n    updated_at: \"2020-04-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290779/sichuan-airlines-plans-to-resume-los-angeles-service-from-sep-2020/\",\n    airline: \"Sichuan Airlines\"\n  }, {\n    info: \"(Shandong Airlines) Chinese carriers International operation revision 29MAR20 \\u2013 02MAY20 \",\n    updated_at: \"2020-04-01\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290585/chinese-carriers-international-operation-revision-29mar20-02may20-as-of-01apr20/\",\n    airline: \"Shandong Airlines\"\n  }, {\n    info: \"(Shanghai Airlines) Chinese carriers International operation revision 29MAR20 \\u2013 02MAY20 \",\n    updated_at: \"2020-04-01\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290585/chinese-carriers-international-operation-revision-29mar20-02may20-as-of-01apr20/\",\n    airline: \"Shanghai Airlines\"\n  }, {\n    info: \"(Sichuan Airlines)  Chinese carriers International operation revision 29MAR20 \\u2013 02MAY20 \",\n    updated_at: \"2020-04-01\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290585/chinese-carriers-international-operation-revision-29mar20-02may20-as-of-01apr20/\",\n    airline: \"Sichuan Airlines\"\n  }, {\n    info: \"(Spring Airlines) Chinese carriers International operation revision 29MAR20 \\u2013 02MAY20 \",\n    updated_at: \"2020-04-01\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290585/chinese-carriers-international-operation-revision-29mar20-02may20-as-of-01apr20/\",\n    airline: \"Spring Airlines\"\n  }],\n  IT: [{\n    info: \"Air Dolomiti outlines June 2020 operations as of 21MAY20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291398/air-dolomiti-outlines-june-2020-operations-as-of-21may20/\",\n    airline: \"Air Dolomiti\"\n  }, {\n    info: \"Ryanair Italy 3Q20 operations as of 20MAY20\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291384/ryanair-italy-3q20-operations-as-of-20may20/\",\n    airline: \"Ryanair Italy\"\n  }, {\n    info: \"Alitalia will restart New York, Spain flights as Italy's lockdown eases; airline plans to operate 40 percent of its scheduled flights from July \",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.thelocal.it/20200520/alitalia-to-restart-new-york-and-madrid-flights-as-lockdown-eases\",\n    airline: \"Alitalia\"\n  }, {\n    info: \"Blue Panorama schedules A330 East Africa service from July 2020 (eff. 08JUL20)\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291166/blue-panorama-schedules-a330-east-africa-service-from-july-2020/\",\n    airline: \"Blue Panorama\"\n  }, {\n    info: \"Volotea adds Olbia \\u2013 Bologna service from July 2020\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290964/volotea-adds-olbia-bologna-service-from-july-2020/\",\n    airline: \"Volotea\"\n  }, {\n    info: \"Alitalia week of 19APR20 Europe/Domestic operations\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290863/alitalia-week-of-19apr20-europedomestic-operations/\",\n    airline: \"Alitalia\"\n  }, {\n    info: \"Alitalia May 2020 Long-Haul operations as of 16APR20\",\n    updated_at: \"2020-04-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290807/alitalia-may-2020-long-haul-operations-as-of-0330gmt-16apr20/\",\n    airline: \"Alitalia\"\n  }, {\n    info: \"Alitalia resumes additional domestic service from mid-May 2020 (FCO-AHO; FCO-OLB)\",\n    updated_at: \"2020-04-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291206/alitalia-resumes-additional-domestic-service-from-mid-may-2020/\",\n    airline: \"Alitalia\"\n  }, {\n    info: \"Alitalia continue to operate flights on a reduced basis.\\xA0 Alitalia passengers have until 31 May to change a flight reservation or ask for a ticket refund.\\n\\xA0-Flight departures from Italy: before departure, travellers must complete two copies of the self-certification form, specifying the reason for your trip (proven work requirements, situations of necessity or health purposes). This form is also mandatory for all Italian citizens or residents in Italy who travel to a Schengen or non-Schengen foreign country.A copy of the form must be handed over to the Airport Border Police staff at the time of departure, before the security checks.\\nSelf-certification is not necessary for EU or non-EU citizens.If you need to travel from Italy to another country, also see the Coronavirus (COVID-19)\\nTravel Restrictions from Italy to check if there are any travel restrictions on entry your destination country. Please note this document will be updated on a regular basis.\\n\\xA0-Flights arriving to Italy: passengers of any nationality arriving in Rome must also complete the self-certification form.\\xA0 Those who do not have it may request it from the Airport Border Police staff present at the airport or at the information points and check-in desks at the airport terminals.\\xA0\\xA0\\xA0To download the self-certification form copy and paste this link in your browser: https://www.esteri.it/mae/resource/doc/2020/04/modulo_rientro_da_estero_28mar20_eng.pdf \\nFrom 16 March all Alitalia\\xA0domestic flights from and to Milan\\xA0operate from Milan Malpensa airport due to the temporary closure of Milan Linate airport. Flight check-in operations will be carried out at Terminal 2 of Malpensa airport.\\xA0\\xA0\\xA0\\xA0\\xA0Starting from 17 March, check-in operations for all Alitalia's domestic, international and intercontinental flights at Rome Fiumicino airport will be carried out at Terminal 3, following the temporary closure of Terminal 1 decided by the airport Authority.\\xA0\\xA0\\xA0 Alitalia informs passengers that, before boarding, they will be required to have their own protective mask to be worn in case a large number of travelers on board would not allow to respect the 1-meter interpersonal safety distance.Alitalia could deny boarding to passengers who are not be in possession of their own personal protective device. Alitalia recommends travelers to wear a protective mask also while at airports and during boarding and disembarking from the aircraft.\\n\",\n    updated_at: \"2020-03-17\",\n    source: \"https://www.alitalia.com/en_en/fly-alitalia/news-and-activities/news/info-flights.html\",\n    airline: \"Alitalia\"\n  }],\n  ES: [{\n    info: \"Air Nostrum to resume some flights from 24 May after suspension\",\n    updated_at: \"2020-05-16\",\n    source: \"https://www.majorcadailybulletin.com/news/local/2020/05/16/67053/air-nostrum-inter-island-flights-resume-may-24.html\",\n    airline: \"Air Nostrum\"\n  }, {\n    info: \"Iberia plans A330/340 Tenerife North service eff. 01JUN20-24OCT20\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291138/iberia-plans-a330340-tenerife-north-service-in-s20/\",\n    airline: \"Iberia\"\n  }, {\n    info: \"Binter April/May 2020 Operations as of 26APR20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291024/binter-aprilmay-2020-operations-as-of-26apr20/\",\n    airline: \"Binter\"\n  }, {\n    info: \"Iberia week of 19APR20 operations as of 16APR20\",\n    updated_at: \"2020-04-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290820/iberia-week-of-19apr20-operations-as-of-1030gmt-16apr20/\",\n    airline: \"Iberia\"\n  }, {\n    info: \"Air Europa April 2020 operations as of 08APR20\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290700/air-europa-april-2020-operations-as-of-08apr20/\",\n    airline: \"Air Europa\"\n  }, {\n    info: \"Vueling 29MAR20 \\u2013 25APR20 operations as of 29MAR20\",\n    updated_at: \"2020-03-31\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290578/vueling-29mar20-25apr20-operations-as-of-29mar20/\",\n    airline: \"Vueling\"\n  }, {\n    info: \"Spain\\u2019s Volotea grounds fleet until 8 April.\",\n    updated_at: \"2020-03-20\",\n    source: \"https://www.flightglobal.com/airlines/spains-volotea-grounds-fleet-until-8-april/137441.article\",\n    airline: \"Volotea\"\n  }, {\n    info: \"IAG\\u2019s airlines to reduce capacity by 75%\",\n    updated_at: \"2020-03-16\",\n    source: \"https://worldairlinenews.com/2020/03/16/iags-airlines-to-reduce-capacity-by-75/\",\n    airline: \"Iberia, Vueling\"\n  }],\n  FR: [{\n    info: \"Air France is prograssively increasing its flight schedule\",\n    updated_at: \"2020-05-19\",\n    source: \"https://corporate.airfrance.com/en/press-release/air-france-progressively-increasing-its-flight-schedule\",\n    airline: \"Air France\"\n  }, {\n    info: \"Air France week of 17MAY20 European operations as of 10MAY20\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291204/air-france-week-of-17may20-european-operations-as-of-10may20/\",\n    airline: \"Air France\"\n  }, {\n    info: \"Transavia France cancels flights to, from France until 25 June \",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.aviation24.be/airlines/air-france-klm-group/transavia/transavia-cancels-all-flights-in-france-until-25-june/\",\n    airline: \"Transavia France\"\n  }, {\n    info: \"Air France East Asia service changes eff. 06JUL20\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291165/air-france-east-asia-service-changes-from-july-2020/\",\n    airline: \"Air France\"\n  }, {\n    info: \"Air France 01JUN20 \\u2013 05JUL20 Long-Haul operations as of 06MAY20\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291153/air-france-01jun20-05jul20-long-haul-operations-as-of-1150gmt-06may20/\",\n    airline: \"Air France\"\n  }, {\n    info: \"ASL Airlines France expands Algeria network in summer 2020\",\n    updated_at: \"2020-04-28\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290996/asl-airlines-france-expands-algeria-network-in-s20/\",\n    airline: \"ASL Airlines France\"\n  }, {\n    info: \"Air France 20APR20 \\u2013 31MAY20 Intercontinental network as of 17APR20\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290830/air-france-20apr20-31may20-intercontinental-network-as-of-0345gmt-17apr20/\",\n    airline: \"Air France\"\n  }, {\n    info: \"Corsair extends scheduled service suspension to early-June 2020\",\n    updated_at: \"2020-04-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290810/corsair-extends-scheduled-service-suspension-to-early-june-2020/\",\n    airline: \"Corsair\"\n  }, {\n    info: \"Corsair May 2020 operations as of 06APR20\",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290669/corsair-may-2020-operations-as-of-06apr20/\",\n    airline: \"Corsair\"\n  }, {\n    info: \"Air Corsica reduces its schedule\",\n    updated_at: \"2020-03-18\",\n    source: \"https://worldairlinenews.com/2020/03/18/air-corsica-reduces-its-schedule/\",\n    airline: \"Air Corsica\"\n  }, {\n    info: \"Air France-KLM takes exceptional measures due to coronavirus, grounds A380s and 747-400s\",\n    updated_at: \"2020-03-15\",\n    source: \"https://worldairlinenews.com/2020/03/16/air-france-klm-takes-exceptional-measures-due-to-coronavirus-grounds-a380s-and-747-400s/\",\n    airline: \"Air France\"\n  }, {\n    info: \"La Compagnie to suspend all operations\",\n    updated_at: \"2020-03-15\",\n    source: \"Reuters\",\n    airline: \"La Compagnie\"\n  }],\n  GL: [{\n    info: \"Travel between Greenland and Denmark with Air Greenland will begin on 1 June.\",\n    updated_at: \"2020-05-20\",\n    source: \"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",\n    airline: \"Air Greenland\"\n  }, {\n    info: \"Air Greenland halts all flights through 30 April\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.osac.gov/Content/Report/cd04fd74-b2f2-4351-b7ca-18652a10441e\",\n    airline: \"Air Greenland\"\n  }],\n  IS: [{\n    info: \"Icelandair late-May 2020 interim operations: Reykjavik- BOS, LHR, ARN\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291329/icelandair-late-may-2020-interim-operations/\",\n    airline: \"Icelandair\"\n  }, {\n    info: \"Icelandair 3Q20 changes as of 17MAY20\",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291318/icelandair-3q20-inventory-changes-as-of-17may20/\",\n    airline: \"Icelandair\"\n  }, {\n    info: \"Air Iceland Connect week of 26APR20 operations\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291019/air-iceland-connect-week-of-26apr20-operations/\",\n    airline: \"Air Iceland Connect\"\n  }],\n  IN: [{\n    info: \"SpiceJet to resume operations, flights on all UDAN routes from May 25\",\n    updated_at: \"2020-05-22\",\n    source: \"https://zeenews.india.com/markets/spicejet-to-resume-operations-from-may-25-flights-on-all-udan-routes-2285494.html\\r\",\n    airline: \"Spicejet\"\n  }, {\n    info: \"Air India to operate special domestic flights to several Indian cities from 19 May\",\n    updated_at: \"2020-05-13\",\n    source: \"https://timesofindia.indiatimes.com/business/india-business/ai-to-operate-spl-domestic-flights-to-several-indian-cities-from-may-19/articleshow/75705252.cms\",\n    airline: \"Air India\"\n  }, {\n    info: \"Vistara S20 International operations as of 03MAY20 (eff 18MAY20)\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291104/vistara-s20-international-operations-as-of-03may20/\",\n    airline: \"Vistara\"\n  }, {\n    info: \"Air India May 2020 Preliminary International Network as of 03MAY20\",\n    updated_at: \"2020-05-04\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291068/air-india-may-2020-preliminary-international-network-as-of-03may20/\",\n    airline: \"Air India\"\n  }, {\n    info: \"GoAir expected to resume domestic flights from 1 June\",\n    updated_at: \"2020-04-22\",\n    source: \"https://www.goodreturns.in/news/goair-to-resume-flights-on-1-june-instead-of-25-may-1161356.html\",\n    airline: \"GoAir\"\n  }, {\n    info: \"Vistara to resume flights from May 4\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.businesstraveller.com/business-travel/2020/04/16/vistara-to-resume-flights-from-may-4/\",\n    airline: \"Vistara\"\n  }, {\n    info: \"IndiGo will resume flight operations from 4 May \",\n    updated_at: \"2020-04-14\",\n    source: \"https://timesofindia.indiatimes.com/business/india-business/indigo-looks-to-resume-flights-on-may-4/articleshow/75147590.cms\",\n    airline: \"IndiGo\"\n  }, {\n    info: \"Air Deccan ceases operations until further notice \",\n    updated_at: \"2020-04-05\",\n    source: \"https://www.indiatvnews.com/business/news-air-deccan-ceasing-operations-employees-to-go-on-sabbatical-without-pay-covid19-impact-604749\",\n    airline: \"Air Deccan\"\n  }, {\n    info: \"Air India halts flight bookings until 30 April as it awaits government decision on lockdown that ends on 14 April \",\n    updated_at: \"2020-04-04\",\n    source: \"https://punemirror.indiatimes.com/news/india/air-india-stops-bookings-for-domestic-international-flights-till-april-30/articleshow/74979189.cms\",\n    airline: \"Air india\"\n  }, {\n    info: \"AirAsia India to open flight bookings from 15 April \",\n    updated_at: \"2020-04-04\",\n    source: \"https://www.cnbctv18.com/aviation/airasia-india-says-flight-bookings-to-resume-from-april-15-5624391.htm\",\n    airline: \"AirAsia india\"\n  }],\n  MO: [{\n    info: \"Air Macau 16APR20 \\u2013 31MAY20 operations as of 18APR20\",\n    updated_at: \"2020-03-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290850/air-macau-16apr20-31may20-operations-as-of-1000gmt-18apr20/\",\n    airline: \"Air Macau\"\n  }],\n  NA: [{\n    info: \"Air Namibia Resumes Domestic Flight Operations\",\n    updated_at: \"2020-05-03\",\n    source: \"https://aviationtribune.com/airlines/africa/air-namibia-resumes-domestic-flight-operations/\\r\",\n    airline: \"Air Namibia \"\n  }],\n  NZ: [{\n    info: \"Sounds Air outlines reduced initial operation from mid-May 2020\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291291/sounds-air-outlines-reduced-initial-operation-from-mid-may-2020/\",\n    airline: \"Sounds Air\"\n  }, {\n    info: \"Air New Zealand to resume flights to, from Taupo and Timaru in June \",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.stuff.co.nz/business/300013085/coronavirus-air-new-zealand-to-resume-flights-to-taup-timaru-in-june\",\n    airline: \"Air New Zealand\"\n  }, {\n    info: \"Air New Zealand resumes Samoa service from early-May 2020\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291036/air-new-zealand-resumes-samoa-service-from-early-may-2020/\",\n    airline: \"Air New Zealand\"\n  }, {\n    info: \"Air New Zealand revises Domestic operations from 28APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290961/air-new-zealand-revises-domestic-operations-from-28apr20/\",\n    airline: \"Air New Zealand\"\n  }, {\n    info: \"Air New Zealand extends interim schedule until late-June 2020\",\n    updated_at: \"2020-04-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290798/air-new-zealand-extends-interim-schedule-until-late-june-2020/\",\n    airline: \"Air New Zealand\"\n  }, {\n    info: \"Air New Zealand flights between Faleolo and Auckland will be once a week for both carriers as well until further notice.\",\n    updated_at: \"2020-03-21\",\n    source: \"https://www.stuff.co.nz/national/health/coronavirus/120472548/coronavirus-samoa-suspends-all-flights-from-australia\",\n    airline: \"Air New Zealand\"\n  }],\n  CK: [{\n    info: \"Air Rarotonga extends interim schedule to late-June 2020\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291267/air-rarotonga-extends-interim-schedule-to-late-june-2020/\",\n    airline: \"Air Rarotonga\"\n  }],\n  SN: [{\n    info: \"Air Senegal extends scheduled service suspension to 30JUN20\",\n    updated_at: \"2020-04-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290677/air-senegal-extends-scheduled-service-suspension-till-mid-may-2020/\",\n    airline: \"Air Senegal\"\n  }],\n  RS: [{\n    info: \"Air Serbia 21MAY20 \\u2013 14JUN20 interim operations as of 20MAY20\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291367/air-serbia-21may20-14jun20-interim-operations-as-of-20may20/\",\n    airline: \"Air Serbia\"\n  }],\n  SC: [{\n    info: \"Air Seychelles resumes domestic flights from late-April 2020\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291268/air-seychelles-resumes-domestic-flights-from-late-april-2020/\",\n    airline: \"Air Seychelles\"\n  }],\n  PF: [{\n    info: \"Air Tahiti outlines 22MAY20 \\u2013 28JUN20 reduced perations\",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291184/air-tahiti-nui-extends-passenger-service-suspension-to-late-june-2020/\",\n    airline: \"Air Tahiti\"\n  }],\n  MY: [{\n    info: \"AirAsia May 2020 International operations as of 03MAY20\",\n    updated_at: \"2020-05-04\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291083/airasia-may-2020-international-operations-as-of-03may20/\",\n    airline: \"AirAsia\"\n  }, {\n    info: \"Malaysia Airlines July \\u2013 October 2020 International operations as of 01MAY20\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291065/malaysia-airlines-july-october-2020-international-operations-as-of-01may20/\",\n    airline: \"Malaysia Airlines\"\n  }, {\n    info: \"Malindo Air resumes domestic flights amid MCO\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.malaymail.com/news/malaysia/2020/04/24/malindo-air-resumes-domestic-flights-amid-mco/1859944\",\n    airline: \"Malindo Air\"\n  }, {\n    info: \"Malindo Air May 2020 Preliminary domestic operations as of 20APR20\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290867/malindo-air-may-2020-preliminary-domestic-operations-as-of-0915gmt-20apr20/\",\n    airline: \"Malindo Air\"\n  }, {\n    info: \"Malindo Air May \\u2013 Oct 2020 International operations as of 19APR20\",\n    updated_at: \"2020-04-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290855/malindo-air-may-oct-2020-international-operations-as-of-1015gmt-19apr20/\",\n    airline: \"Malindo Air\"\n  }, {\n    info: \"Malaysia Airlines 15APR20 \\u2013 19MAY20 domestic operations as of 16APR20\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290834/malaysia-airlines-15apr20-19may20-domestic-operations-as-of-16apr20/\",\n    airline: \"Malaysia Airlines\"\n  }, {\n    info: \"Malaysia Airlines June \\u2013 October 2020 International operations as of 0545GMT 17APR20\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290833/malaysia-airlines-june-october-2020-international-operations-as-of-0545gmt-17apr20/\",\n    airline: \"Malaysia Airlines\"\n  }, {\n    info: \"AirAsia cancels all domestic, international flights until 30 April because of COVID-19\",\n    updated_at: \"2020-04-12\",\n    source: \"https://www.businesstraveller.com/business-travel/2020/04/11/air-asia-cancels-all-domestic-international-flights-until-april-30/\",\n    airline: \"Malaysia Airlines\"\n  }, {\n    info: \"Lion Air suspends Malaysia flights\",\n    updated_at: \"2020-03-19\",\n    source: \"https://www.thejakartapost.com/news/2020/03/19/lion-air-group-suspends-flights-from-and-to-malaysia-amid-lockdown.html\",\n    airline: \"Lion Air\"\n  }],\n  LV: [{\n    info: \"airBaltic operations eff.18MAY20 \",\n    updated_at: \"2020-05-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291303/airbaltic-week-of-18may20-operations-as-of-15may20/\",\n    airline: \"airBaltic\"\n  }],\n  US: [{\n    info: \"Southwest Airlines to limit booking on flights through July\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.reuters.com/article/us-southwest-agm/southwest-to-limit-seats-sold-on-each-flight-through-july-ceo-idUSKBN22X22E\",\n    airline: \"Southwest Airlines\"\n  }, {\n    info: \"Delta resumes 2 European routes from 21MAY20 (ATL-FRA;  DTW-LHR)\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291337/delta-resumes-2-european-routes-from-21may20/\",\n    airline: \"Delta\"\n  }, {\n    info: \"Delta Air Lines will resume flying several major routes in June\",\n    updated_at: \"2020-05-18\",\n    source: \"Reuters\",\n    airline: \"Delta\"\n  }, {\n    info: \"Delta Long-Haul Inventory update as of 14MAY20\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291286/delta-ns20-long-haul-inventory-update-as-of-14may20/\",\n    airline: \"Delta\"\n  }, {\n    info: \"Alaska Airlines week of 10/17MAY20 Los Angeles departures as of 10MAY20\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291254/alaska-airlines-week-of-1017may20-los-angeles-departures-as-of-10may20/\",\n    airline: \"Alaska Airlines\"\n  }, {\n    info: \"Sun Country Airlines week of 10MAY20 operations\",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291230/sun-country-airlines-week-of-10may20-operations/\",\n    airline: \"Sun Country Airlines\"\n  }, {\n    info: \"United May/June 2020 Los Angeles operations as of 10MAY20\",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291238/united-mayjune-2020-los-angeles-operations-as-of-10may20/\",\n    airline: \"United Airlines\"\n  }, {\n    info: \"Delta Air Lines to suspend service to 10 airports within U.S. because of COVID-19 \",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-delta-air/delta-will-suspend-service-to-10-us-airports-starting-may-13-idUSKBN22K2PJ\",\n    airline: \"Delta\"\n  }, {\n    info: \"Contour Airlines week (USA DOMESTIC) of 03MAY20 operations (eff MAY20)\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291110/contour-airlines-week-of-03may20-operations/\",\n    airline: \"Contour Airlines\"\n  }, {\n    info: \"Frontier Airlines week of 03MAY20 operations (US DOMESTIC)\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291113/frontier-airlines-week-of-03may20-operations/\",\n    airline: \"Frontier Airlines\"\n  }, {\n    info: \"JetBlue week of 10MAY20 operations as of 03MAY20\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291115/jetblue-week-of-10may20-operations-as-of-03may20/\",\n    airline: \"JetBlue\"\n  }, {\n    info: \"United Interim Long-Haul update as of 02MAY20\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291056/united-2q20-interim-long-haul-and-ns20-update-as-of-0215gmt-02may20/\",\n    airline: \"United Airlines\"\n  }, {\n    info: \"Silver Airways moves Charleston SC launch to July 2020\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291040/silver-airways-moves-charleston-sc-launch-to-july-2020/\",\n    airline: \"Silver Airways\"\n  }, {\n    info: \"American Airlines International operation changes as of 26APR20\",\n    updated_at: \"2020-04-28\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290990/american-airlines-ns20-international-operation-changes-as-of-26apr20/\",\n    airline: \"American Airlines\"\n  }, {\n    info: \"American Airlines May 2020 New York area domestic operations as of 26APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290969/american-airlines-may-2020-new-york-area-domestic-operations-as-of-26apr20/\",\n    airline: \"American Airlines\"\n  }, {\n    info: \"Delta May 2020 New York area domestic operations as of 26APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290972/delta-may-2020-new-york-area-domestic-operations-as-of-26apr20/\",\n    airline: \"Delta\"\n  }, {\n    info: \"JetBlue May/June 2020 Domestic tag-on sectors as of 26APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290974/jetblue-mayjune-2020-domestic-tag-on-sectors-as-of-26apr20/\",\n    airline: \"JetBlue\"\n  }, {\n    info: \"JetBlue week of 10MAY20 New York area domestic operations as of 26APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290652/jetblue-week-of-12apr20-new-york-area-operations-as-of-05apr20/\",\n    airline: \"JetBlue\"\n  }, {\n    info: \"Spirit Airlines May 2020 Routing consolidations as of 26APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290973/spirit-airlines-may-2020-routing-consolidations-as-of-26apr20/\",\n    airline: \"Spirit Airlines\"\n  }, {\n    info: \"United 04MAY20 \\u2013 03JUN20 New York domestic operations as of 26APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290955/united-04may20-03jun20-new-york-domestic-operations-as-of-26apr20/\",\n    airline: \"United Airlines\"\n  }, {\n    info: \"Delta Airlines to resume flights between Tel Aviv and New York from 10 May \",\n    updated_at: \"2020-04-26\",\n    source: \"https://www.timesofisrael.com/airlines-plan-to-resume-israel-routes-after-virus-grounds-travel/\",\n    airline: \"Delta\"\n  }, {\n    info: \"Hawaiian Airlines resumes Honolulu \\u2013 Seattle service from 01MAY20\",\n    updated_at: \"2020-04-25\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290954/hawaiian-airlines-resumes-honolulu-seattle-service-from-01may20/?utm_medium=email&utm_source=airlineroute&utm_campaign=airlineroute&utm_content=airlineroute-20200425\",\n    airline: \"Hawaiian Airlines\"\n  }, {\n    info: \"Pacific Coastal extends scheduled service suspension to late-May 2020\",\n    updated_at: \"2020-04-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290799/pacific-coastal-extends-scheduled-service-suspension-to-late-may-2020/\",\n    airline: \"Pacific Costal\"\n  }, {\n    info: \"Delta 13APR20 \\u2013 25APR20 International operations as of 12APR20\",\n    updated_at: \"2020-04-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290765/delta-13apr20-25apr20-international-operations-as-of-12apr20/\",\n    airline: \"Delta\"\n  }, {\n    info: \"Frontier Airlines further downsizes New York operation week of 12APR20\",\n    updated_at: \"2020-04-10\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290743/frontier-airlines-further-downsizes-new-york-operation-week-of-12apr20/\",\n    airline: \"Frontier Airlines\"\n  }, {\n    info: \"Hawaiian Airlines 'Ohana operations in April 2020. HNL-LNY, HNL-MKK\",\n    updated_at: \"2020-04-09\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290719/hawaiian-airlines-modifies-ohana-operations-in-april-2020/\",\n    airline: \"Hawaiian Airlines\"\n  }, {\n    info: \"Alaska Airlines April 2020 selected US domestic service consolidations (ex SEA)\",\n    updated_at: \"2020-04-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290680/alaska-airlines-april-2020-selected-us-domestic-service-consolidations/\",\n    airline: \"Alaska Airlines\"\n  }, {\n    info: \"Elite Airways cancels all April flights to, from Vero Beach Regional Airport because of COVID-19\",\n    updated_at: \"2020-04-07\",\n    source: \"https://eu.tcpalm.com/story/news/local/shaping-our-future/2020/04/06/elite-airways-cancels-april-flights/2954487001/\",\n    airline: \"Elite Airways\"\n  }, {\n    info: \"Alaska Airlines week of 12APR20 New York area operations as of 05APR20\",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290653/alaska-airlines-week-of-12apr20-new-york-area-operations-as-of-05apr20/\",\n    airline: \"Alaska Airlines\"\n  }, {\n    info: \"American joins United, others in suspending more NYC flights on coronavirus spike\",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-american-airline/american-joins-united-others-in-suspending-more-nyc-flights-on-coronavirus-spike-idUSKBN21O07C\",\n    airline: \"American Airlines\"\n  }, {\n    info: \"RavnAir Group files for bankruptcy, stops all flights amid COVID-19 pandemic\",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.adn.com/alaska-news/2020/04/05/ravnair-group-stops-all-flights-and-lays-off-staff-due-to-covid-19/\",\n    airline: \"RavnAir Alaska\"\n  }, {\n    info: \"Hawaiian Airlines April 2020 Passenger operations as of 03APR20\\r\",\n    updated_at: \"2020-04-03\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290614/hawaiian-airlines-april-2020-passenger-operations-as-of-03apr20/\",\n    airline: \"Hawaiian Airlines\"\n  }, {\n    info: \"United Interim Guam / Micronesia Island Hopper update as of 02MAY20\",\n    updated_at: \"2020-04-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291057/united-2q20-interim-and-ns20-guam-micronesia-island-hopper-update-as-of-0215gmt-02may20/\",\n    airline: \"United Airlines\"\n  }, {\n    info: \"Frontier Airlines reduces flights by 90 percent in April \",\n    updated_at: \"2020-04-01\",\n    source: \"https://simpleflying.com/frontier-operations-cut/?utm_source=dlvr.it&utm_medium=twitter\",\n    airline: \"Frontier Airlines\"\n  }, {\n    info: \"Alaska Airlines reduces schedule by 70 percent in April, May because of low demand\",\n    updated_at: \"2020-03-26\",\n    source: \"https://www.airlineratings.com/news/alaska-sees-substantial-flight-reductions-several-months/\",\n    airline: \"Alaska Airlines\"\n  }, {\n    info: \"Allegiant Airlines has suspended all service through the rest of March, which includes flights from Oklahoma City to Las Vegas and to Destin, Florida.\",\n    updated_at: \"2020-03-24\",\n    source: \"https://okcfox.com/news/local/coronavirus-cancels-multiple-flights-at-will-rogers-world-airport\",\n    airline: \"Allegiant Airlines \"\n  }, {\n    info: \"Hawaiian Airlines suspends most long-haul passenger service due to new state of Hawai\\u2018i quarantine order\",\n    updated_at: \"2020-03-24\",\n    source: \"https://worldairlinenews.com/2020/03/24/hawaiian-airlines-suspends-most-long-haul-passenger-service-due-to-new-state-of-hawaii-quarantine-order/\",\n    airline: \"Hawaiian Airlines\"\n  }, {\n    info: \"Compass Airlines to cease operations\",\n    updated_at: \"2020-03-20\",\n    source: \"https://worldairlinenews.com/2020/03/20/compass-airlines-to-cease-operations/\",\n    airline: \"Compass Airlines\"\n  }, {\n    info: \"Trans States Airlines to close its doors on April 1\",\n    updated_at: \"2020-03-20\",\n    source: \"https://worldairlinenews.com/2020/03/20/trans-states-airlines-to-close-its-doors-on-april-1/\",\n    airline: \"Trans States Airlines \"\n  }],\n  JP: [{\n    info: \"Jetstar Japan 01\\u201314JUN20 operations as of 18MAY20\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291326/jetstar-japan-0114jun20-operations-as-of-18may20/\",\n    airline: \"Jetstar Japan\"\n  }, {\n    info: \"JAL 18 \\u2013 31MAY20 domestic operations as of 13MAY20\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291270/jal-mainline-18-31may20-domestic-operations-as-of-13may20/\",\n    airline: \"JAL\"\n  }, {\n    info: \"ANA Files additional domestic routes cancellation for 15 \\u2013 31MAY20\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291271/ana-files-additional-domestic-routes-cancellation-for-15-31may20/\",\n    airline: \"ANA\"\n  }, {\n    info: \"All Nippon Airways cancels additional domestic routes until 31 May\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291271/ana-files-additional-domestic-routes-cancellation-for-15-31may20/\",\n    airline: \"Nippon Airways\"\n  }, {\n    info: \"Peach 07MAY20 \\u2013 31MAY20 DOMESTIC operations as of 03MAY20\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291133/peach-07may20-31may20-operations-as-of-03may20/\",\n    airline: \"Peach\"\n  }, {\n    info: \"ANA May 2020 International operations as of 30APR20\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291033/ana-may-2020-international-operations-as-of-0445gmt-30apr20/\",\n    airline: \"ANA\"\n  }, {\n    info: \"JAL May 2020 International operations as of 30APR20\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291035/jal-may-2020-international-operations-as-of-0530gmt-30apr20/\",\n    airline: \"JAL\"\n  }, {\n    info: \"Spring Airlines Japan April/May 2020 Domestic operations as of 23APR20\",\n    updated_at: \"2020-04-28\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290994/spring-airlines-japan-aprilmay-2020-domestic-operations-as-of-23apr20/\",\n    airline: \"Spring Airlines Japan\"\n  }, {\n    info: \"Fuji Dream Airlines suspends scheduled operation 28APR20 \\u2013 17MAY20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290957/fuji-dream-airlines-suspends-scheduled-operation-28apr20-17may20/\",\n    airline: \"Fuji Dream Airlines\"\n  }, {\n    info: \"ANA further reduces key Domestic routes at Tokyo Haneda 22APR20 \\u2013 28APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290885/ana-further-reduces-key-domestic-routes-at-tokyo-haneda-22apr20-28apr20/\",\n    airline: \"ANA\"\n  }, {\n    info: \"StarFlyer week of 21APR20 operations\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290901/starflyer-week-of-21apr20-operations/\",\n    airline: \"StarFlyer\"\n  }, {\n    info: \"Japan Airlines suspends 94 percent of flights in May\",\n    updated_at: \"2020-04-14\",\n    source: \"https://www.postguam.com/business/local/japan-airlines-reduces-may-flights-by-94/article_00c0232c-7e21-11ea-9795-8f8e1bd55440.html\",\n    airline: \"JAL\"\n  }, {\n    info: \"AirAsia Japan April 2020 operations as of 09APR20\",\n    updated_at: \"2020-04-10\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290734/airasia-japan-april-2020-operations-as-of-09apr20/\",\n    airline: \"AirAsia Japan\"\n  }, {\n    info: \"Spring Airlines Japan further reduces International service in April 2020\",\n    updated_at: \"2020-04-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290598/spring-airlines-japan-further-reduces-international-service-in-april-2020/\",\n    airline: \"Spring Airlines Japan\"\n  }],\n  TR: [{\n    info: \"Turkish Airlines extends cancellation of domestic flights to 4 June and international flights to 10 June \",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.reuters.com/article/health-coronavirus-turkey-thy/turkish-airlines-extend-flight-cancellations-into-june-idUSL8N2D26S2\",\n    airline: \"Turkish Airlines\"\n  }, {\n    info: \"Turkish Airlines schedules Almaty / Kyiv service eff. 28MAY20\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291126/turkish-airlines-schedules-boeing-787-almaty-kyiv-service-in-s20/\",\n    airline: \"Turkish Airlines\"\n  }, {\n    info: \"Turkish Airlines extends suspension of all flights until 28 May\",\n    updated_at: \"2020-04-28\",\n    source: \"https://www.aa.com.tr/en/economy/turkish-airlines-suspends-all-flights-until-may-28/1821811\",\n    airline: \"Turkish Airlines\"\n  }, {\n    info: \"Turkish Airlines delays planned long-haul route launch eff. 15JUN20\",\n    updated_at: \"2020-04-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290811/turkish-airlines-delays-planned-long-haul-route-launch-in-s20/\",\n    airline: \"Turkish Airlines\"\n  }, {\n    info: \"AnadoluJet April 2020 Interim operations as of 06APR20\",\n    updated_at: \"2020-04-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290675/anadolujet-april-2020-interim-operations-as-of-06apr20/\",\n    airline: \"AnadoluJet\"\n  }, {\n    info: \"Turkish Airlines 30MAR20 \\u2013 17APR20 domestic operations as of 30MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290553/turkish-airlines-30mar20-17apr20-operations-as-of-30mar20/\",\n    airline: \"Turkish Airlines\"\n  }, {\n    info: \"Corendon Airlines halts all operations\",\n    updated_at: \"2020-03-24\",\n    source: \"https://worldairlinenews.com/2020/03/24/corendon-airlines-halts-all-operations/\",\n    airline: \"Corredon Airlines\"\n  }],\n  KR: [{\n    info: \"Jeju Air June 2020 International operations as of 21MAY20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291400/jeju-air-june-2020-international-operations-as-of-21may20/\",\n    airline: \"Jeju Air\"\n  }, {\n    info: \"Korean Air June 2020 International operations as of 07MAY20\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291170/korean-air-june-2020-international-operations-as-of-0845gmt-07may20/\",\n    airline: \"Korean Air\"\n  }, {\n    info: \"Asiana Airlines May 2020 International operations as of 03MAY20\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291134/asiana-airlines-may-2020-international-operations-as-of-03may20/\",\n    airline: \"Asiana\"\n  }, {\n    info: \"Air Seoul extends International cancellations to late-May 2020\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290831/air-seoul-extends-international-cancellations-to-late-may-2020/\",\n    airline: \"Air Seoul\"\n  }, {\n    info: \"Eastar Jet extends International suspension to late-June 2020\",\n    updated_at: \"2020-04-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290795/eastar-jet-extends-international-suspension-to-late-june-2020/\",\n    airline: \"Eastar Jet\"\n  }, {\n    info: \"Korean Air extends suspension of its service connecting Seoul to Zagreb until 1 September because of COVID-19\",\n    updated_at: \"2020-04-14\",\n    source: \"https://www.exyuaviation.com/2020/04/korean-air-delays-zagreb-resumption.html\\r\",\n    airline: \"Korean Air\"\n  }, {\n    info: \"Korean Air suspends flights between Incheon and Washington, D.C\",\n    updated_at: \"2020-04-13\",\n    source: \"http://tradearabia.com/news/TTN_366578.html\",\n    airline: \"Korean Air\"\n  }, {\n    info: \"T'Way Air plans Seoul \\u2013 Khabarovsk service from July 2020\",\n    updated_at: \"2020-04-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290767/tway-air-plans-seoul-khabarovsk-service-from-july-2020/\",\n    airline: \"T'Way\"\n  }],\n  FO: [{\n    info: \"Atlantic Airways Faroe Islands extends interim schedule to 01JUN20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291015/atlantic-airways-faroe-islands-extends-interim-schedule-to-01jun20/\",\n    airline: \"Atlantic Airways\"\n  }],\n  GB: [{\n    info: \"Jet2 to resume flights from 1 July after COVID-19 forces suspension\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.thescottishsun.co.uk/travel/5623799/jet2-resume-flights-coronavirus/\",\n    airline: \"Jet2\"\n  }, {\n    info: \"EasyJet to resume flights next month\",\n    updated_at: \"2020-05-21\",\n    source: \"https://news.sky.com/story/coronavirus-easyjet-to-resume-flights-next-month-with-strict-face-mask-rule-11991930\",\n    airline: \"EasyJet\"\n  }, {\n    info: \"All the flights easyJet is relaunching on June 15 - full list\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.somersetlive.co.uk/news/uk-world-news/flights-easyjet-relaunching-june-15-4152364\",\n    airline: \"EasyJet\"\n  }, {\n    info: \"Virgin Atlantic operation changes eff. 25OCT20\",\n    updated_at: \"2020-05-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291304/virgin-atlantic-nw20-operation-changes-as-of-16may20/\",\n    airline: \"UK Virgin Atlantic\"\n  }, {\n    info: \"Eastern Airways extends Humberside \\u2013 Aberdeen interim operation to early-June 2020\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291275/eastern-airways-extends-humberside-aberdeen-interim-operation-to-early-june-2020/\",\n    airline: \"Eastern Airways\"\n  }, {\n    info: \"British Airways June 2020 European operations as of 10MAY20 (eff. 01JUN20)\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291200/british-airways-june-2020-european-operations-as-of-10may20/\",\n    airline: \"British Airways\"\n  }, {\n    info: \"British Airways week of 10MAY20 European/ Domestic operations\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291199/british-airways-week-of-10may20-european-operations/\",\n    airline: \"British Airways\"\n  }, {\n    info: \"British Airways June 2020 Long-Haul operations as of 07MAY20\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291171/british-airways-june-2020-long-haul-operations-as-of-0930gmt-07may20/\",\n    airline: \"British Airways\"\n  }, {\n    info: \"Aurigny April/May 2020 Interim operations as of 28APR20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291020/aurigny-aprilmay-2020-interim-operations-as-of-28apr20/\",\n    airline: \"Aurigny\"\n  }, {\n    info: \"Airlines Will Resume Israel Flights From May\",\n    updated_at: \"2020-04-27\",\n    source: \"https://simpleflying.com/airlines-will-resume-israel-flights-from-may/\",\n    airline: \"British Airways\"\n  }, {\n    info: \"Virgin Atlantic 27APR20 \\u2013 17MAY20 Inventory update as of 0655GMT 24APR20\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290937/virgin-atlantic-27apr20-17may20-inventory-update-as-of-0655gmt-24apr20/\",\n    airline: \"UK Virgin Atlantic\"\n  }, {\n    info: \"British Airways May 2020 Long-Haul operations as of 18APR20\",\n    updated_at: \"2020-04-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290847/british-airways-may-2020-long-haul-operations-as-of-0515gmt-18apr20/\",\n    airline: \"British Airways\"\n  }, {\n    info: \"Jet2 confirms all flights, package holidays before 17 June will be canceled because of COVID-19\",\n    updated_at: \"2020-04-07\",\n    source: \"https://www.dailyrecord.co.uk/ayrshire/jet2-cancel-holidays-flights-before-21827958\",\n    airline: \"Jet2\"\n  }, {\n    info: \"British Airways to suspend direct flights between London and Tokyo after 8 April \",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.ttgmedia.com/news/british-airways-to-suspend-direct-uk-japan-flights-22274\",\n    airline: \"British Airways\"\n  }, {\n    info: \"Loganair 30MAR20 \\u2013 20APR20 operations\",\n    updated_at: \"2020-04-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290630/loganair-30mar20-20apr20-operations/\",\n    airline: \"Loganair\"\n  }, {\n    info: \"Aurigny suspends all its remaining flights to London Gatwick Airport until at least end of May after COVID-19 causes lack of demand\",\n    updated_at: \"2020-04-03\",\n    source: \"https://www.itv.com/news/channel/2020-04-03/aurigny-suspends-all-flights-to-gatwick/\",\n    airline: \"Aurigny\"\n  }, {\n    info: \"British Airways are suspending flight operations from London Gatwick (LGW/EGKK) from 31st March according to sources close to the airline.\",\n    updated_at: \"2020-03-31\",\n    source: \"https://ukaviation.news/british-airways-suspending-all-flights-from-gatwick/\",\n    airline: \"British Airways\"\n  }, {\n    info: \"British Airways to suspend flights to Sydney, Hong Kong from early April\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.executivetraveller.com/news/british-airways-suspends-flights-to-sydney-hong-kong\",\n    airline: \"British Airways\"\n  }],\n  AT: [{\n    info: \"Laudamotion operations as of 20MAY20 eff. 01JUL20\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291385/laudamotion-s20-operations-as-of-20may20/\",\n    airline: \"Laudamotion\"\n  }, {\n    info: \"Austrian Airlines extends its flight suspension until June 7\",\n    updated_at: \"2020-05-15\",\n    source: \"https://worldairlinenews.com/2020/05/15/austrian-airlines-extends-its-flight-suspension-until-june-7/\",\n    airline: \"Austrian Airlines\"\n  }, {\n    info: \"Wizz Air to resume Vienna flights from 1 May\",\n    updated_at: \"2020-04-24\",\n    source: \"https://wizzair.com/#/\",\n    airline: \"Wizz\"\n  }],\n  CO: [{\n    info: \"GCA Airlines plans early-June 2020 service resumption\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291234/gca-airlines-plans-early-june-2020-service-resumption/\",\n    airline: \"GCA Airlines\"\n  }, {\n    info: \"Colombian airline Avianca files for Chapter 11 bankruptcy\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.marketwatch.com/story/colombian-airline-avianca-files-for-chapter-11-bankruptcy-2020-05-10?mod=mw_latestnews\",\n    airline: \"Avianca\"\n  }, {\n    info: \"Avianca Group May/June 2020 International operations as of 01MAY20\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291064/avianca-group-mayjune-2020-international-operations-as-of-01may20/\",\n    airline: \"Avianca\"\n  }, {\n    info: \"Avianca 2020 Domestic operations as of 29MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290540/avianca-2020-domestic-operations-as-of-29mar20/\",\n    airline: \"Avianca\"\n  }],\n  EC: [{\n    info: \"Avianca Ecuador plans Quito \\u2013 Lago Agrio service from July 2020\",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291235/avianca-ecuador-plans-quito-lago-agrio-service-from-july-2020/\",\n    airline: \"Avianca Ecuador\"\n  }],\n  PE: [{\n    info: \"Avianca Peru operations as of 19MAY20. eff. 01JUL20\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291335/avianca-peru-inventory-changes-as-of-0715gmt-19may20/\",\n    airline: \"Avianca Peru\"\n  }],\n  AZ: [{\n    info: \"Azerbaijan Airlines operations from 26MAR20\",\n    updated_at: \"2020-03-31\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290562/azerbaijan-airlines-downsizes-operation-from-26mar20/\",\n    airline: \"Azerbajan Airlines\"\n  }],\n  BR: [{\n    info: \"Globalia suspends plans to operate domestic flights in Brazil \",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-brazil-airlines/spanish-airline-globalia-suspends-plans-to-fly-domestic-in-brazil-regulator-idUSKBN22V380\",\n    airline: \"Globalia\"\n  }, {\n    info: \"LATAM Brasil additional DOMESTIC (GRU-BSB,GRU-POA) eff. 07APR\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291161/latam-brasil-schedules-additional-domestic-boeing-767-flights-in-2q20/\",\n    airline: \"LATAM Brasil\"\n  }, {\n    info: \"LATAM Brasil plans Asuncion (GRU-ASU) eff. 05JUN20\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291162/latam-brasil-plans-asuncion-service-from-june-2020/\",\n    airline: \"LATAM Brasil\"\n  }, {\n    info: \"LATAM Brasil DOMESTIC eff. 19APR20 \",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290890/latam-brasil-week-of-19apr20-operations/\",\n    airline: \"LATAM Brasil\"\n  }, {\n    info: \"Azul files New York JFK preliminary schedule from April 2021\",\n    updated_at: \"2020-04-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290759/azul-files-new-york-jfk-preliminary-schedule-from-april-2021/\",\n    airline: \"Azul\"\n  }, {\n    info: \"LATAM Brasil April 2020 International operations as of 03APR20\",\n    updated_at: \"2020-04-03\",\n    source: \"LATAM suspends all international flights until 30 April because of COVID-19\",\n    airline: \"LATAM Brasil\"\n  }, {\n    info: \"Azul April 2020 operations as of 29MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290538/azul-april-2020-operations-as-of-29mar20/\",\n    airline: \"Azul\"\n  }, {\n    info: \"GOL April 2020 operations as of 29MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290539/gol-april-2020-operations-as-of-29mar20/\",\n    airline: \"Gol\"\n  }, {\n    info: \"Gol reduces network, maintains service to all Brazilian capital cities\",\n    updated_at: \"2020-03-24\",\n    source: \"https://worldairlinenews.com/2020/03/24/gol-reduces-network-maintains-service-to-all-brazilian-capital-cities/\",\n    airline: \"Gol\"\n  }, {\n    info: \"Gol Linhas Aereas to suspend all international flights from 23 March to 30 June because of low demand \",\n    updated_at: \"2020-03-20\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-gol-linhas-ae/brazil-airline-gol-to-suspend-all-international-flights-march-23-june-30-idUSKBN2143ED\",\n    airline: \"Gol\"\n  }, {\n    info: \"Azul will cut capacity up to 50%\",\n    updated_at: \"2020-03-17\",\n    source: \"https://worldairlinenews.com/2020/03/17/azul-will-cut-capacity-up-to-50/\",\n    airline: \"Azul\"\n  }, {\n    info: \"Brazilian airline Azul said on Monday it would cut all international flights out of its main hub in Sao Paulo state, while the country\\u2019s government is likely to roll out a relief package as the sector struggles with the coronavirus pandemic. \",\n    updated_at: \"2020-03-16\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-brazil-airlines/brazils-azul-cuts-international-flights-carriers-expect-government-aid-idUSKBN2132HL\",\n    airline: \"Azul Linhas Aereas Brasileiras \"\n  }],\n  VN: [{\n    info: \"Vietnam Airlines June 2020 International operations as of 20MAY20 (Hanoi/ Ho Chi Minh City-> Seoul)\",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291360/vietnam-airlines-june-2020-international-operations-as-of-20may20/\",\n    airline: \"Viet Nam Airlines\"\n  }, {\n    info: \"Bamboo Airways re-opens International reservations from July 2020\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291330/bamboo-airways-re-opens-international-reservations-from-july-2020/\",\n    airline: \"Bamboo Airways\"\n  }, {\n    info: \"Vietnam Airlines revises domestic 07APR20 \\u2013 15APR20 operations\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290694/vietnam-airlines-revises-domestic-07apr20-15apr20-operations/\",\n    airline: \"Vietnam Airlines\"\n  }, {\n    info: \"VietJet Air 01APR20 \\u2013 15APR20 domestic service changes\",\n    updated_at: \"2020-04-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290633/vietjet-air-01apr20-15apr20-domestic-service-changes/\",\n    airline: \"VietJet\"\n  }, {\n    info: \"Vietnam Airlines to halt all international flights until at least 30 April because of COVID-19 outbreak \",\n    updated_at: \"2020-03-19\",\n    source: \"Reuters\",\n    airline: \"VietJet\"\n  }],\n  TH: [{\n    info: \"THAI suspends all flights until 30 June\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.pattayamail.com/coronavirus/thai-suspends-all-flights-until-30-june-300599\",\n    airline: \"Thai Airways International \"\n  }, {\n    info: \"Bangkok Airways to resume more domestic flights from 1 June\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.eturbonews.com/572333/bangkok-airways-resumes-more-domestic-flights/\\r\",\n    airline: \"Bangkok Airways\"\n  }, {\n    info: \"Thai Airways International July \\u2013 October 2020 operations as of 08MAY20\",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291188/thai-airways-international-july-october-2020-operations-as-of-1030gmt-08may20/\",\n    airline: \"Thai Airways International\"\n  }, {\n    info: \"Bangkok Airways operations as of 03MAY20 eff. 01JUN20\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291127/bangkok-airways-s20-operations-as-of-03may20/\",\n    airline: \"Bangkok Airways\"\n  }, {\n    info: \"Thai Lion Air planned DOMESTIC operation as of 03MAY20 (eff JUN20)\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291106/thai-lion-air-s20-planned-operation-as-of-03may20/\",\n    airline: \"Thai Lion Air\"\n  }, {\n    info: \"Thai Smile planned DOMESTIC operations as of 03MAY20 (eff 01JUN20)\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291105/thai-smile-s20-planned-operation-as-of-03may20/\",\n    airline: \"Thai Smile\"\n  }, {\n    info: \"Thai VietJet Air plans Hefei service from mid-June 2020\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290970/thai-vietjet-air-plans-hefei-service-from-mid-june-2020/\",\n    airline: \"Thai VietJet\"\n  }, {\n    info: \"Nok Air April/May 2020 operations as of 19APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290882/nok-air-aprilmay-2020-operations-as-of-19apr20/\",\n    airline: \"Nok Air\"\n  }, {\n    info: \"Thai AirAsia May 2020 Preliminary operations as of 19APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290880/thai-airasia-may-2020-preliminary-operations-as-of-19apr20/\",\n    airline: \"Thai AirAsia\"\n  }],\n  BY: [{\n    info: \"Barcelona-Minsk-Yerevan flights coming from June 2, operated by Belavia\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.aviation24.be/airlines/belavia/barcelona-minsk-yerevan-flights-coming-from-june-2-operated-by-belavia/\",\n    airline: \"Belavia\"\n  }, {\n    info: \"Belavia cancels flights from Minsk to Kazan, Nizhny Novgorod, Paris, Palanga, Voronezh until 24 October\",\n    updated_at: \"2020-05-11\",\n    source: \"https://eng.belta.by/society/view/belavia-cancels-flights-to-russias-voronezh-kazan-nizhny-novgorod-till-october-130331-2020/\",\n    airline: \"Belavia\"\n  }, {\n    info: \"Belavia to resume flights to Milan on 2 May\",\n    updated_at: \"2020-04-30\",\n    source: \"https://eng.belta.by/society/view/belavia-to-resume-flights-to-milan-on-2-may-130113-2020/\",\n    airline: \"Belavia\"\n  }, {\n    info: \"Belavia moves Vienna service resumption to late-April 2020\",\n    updated_at: \"2020-04-10\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290737/belavia-moves-vienna-service-resumption-to-late-april-2020/\",\n    airline: \"Belavia\"\n  }, {\n    info: \"Belavia to resume Uzbekistan service from late-May 2020\",\n    updated_at: \"2020-04-09\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290716/belavia-to-resume-uzbekistan-service-from-late-may-2020/\",\n    airline: \"Belavia\"\n  }],\n  RO: [{\n    info: \"TAROM week of 10MAY20 operations\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291213/tarom-week-of-10may20-operations/\",\n    airline: \"TAROM\"\n  }, {\n    info: \"Blue Air resumes limited scheduled operation week of 20APR20\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290865/blue-air-resumes-limited-scheduled-operation-week-of-20apr20/\",\n    airline: \"Blue Air\"\n  }, {\n    info: \"Wizz Air suspends flight from Romania to the United Kingdom\",\n    updated_at: \"2020-04-08\",\n    source: \"https://worldairlinenews.com/2020/04/08/wizz-air-suspends-flight-from-romania-to-the-united-kingdom/\",\n    airline: \"Wizz Air\"\n  }, {\n    info: \"From Monday 30 March TAROM has suspended all passenger flights to and from Istanbul until 30 April 2020.\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.tarom.ro/en/news/passeger-information-flights-tofrom-istanbul\",\n    airline: \"TAROM\"\n  }, {\n    info: \"Tarom suspends all domestic, some international flights because of COVID-19\",\n    updated_at: \"2020-03-25\",\n    source: \"https://www.romania-insider.com/tarom-suspends-domestic-flights\",\n    airline: \"TAROM\"\n  }],\n  BG: [{\n    info: \"Bulgaria Air extends suspension of Portugal, Cyprus flights\",\n    updated_at: \"2020-05-15\",\n    source: \"https://seenews.com/news/bulgaria-air-extends-suspension-of-portugal-cyprus-flights-698983\\r\",\n    airline: \"Bulgaria Air\"\n  }, {\n    info: \"Bulgaria Air week of 10MAY20 operations\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291205/bulgaria-air-week-of-10may20-operations/\",\n    airline: \"Bulgaria Air\"\n  }, {\n    info: \"Bulgaria Air will resume flights on Sofia-London route from 1 May\",\n    updated_at: \"2020-04-30\",\n    source: \"https://seenews.com/news/bulgaria-air-to-resume-sofia-london-flights-on-may-1-697050\",\n    airline: \"Bulgaria Air\"\n  }, {\n    info: \"Wizz Air cancels all of its flights connecting Sofia to Lisbon from 9-13 April \",\n    updated_at: \"2020-04-08\",\n    source: \"https://seenews.com/news/wizz-air-cancels-all-sofia-lisbon-flights-until-april-13-694278\",\n    airline: \"Wizz\"\n  }],\n  HK: [{\n    info: \"Cathay Pacific May/June 2020 operations as of 10MAY20\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291265/cathay-pacific-mayjune-2020-operations-as-of-10may20/\",\n    airline: \"Cathay Pacific\"\n  }, {\n    info: \"Hong Kong Airlines May 2020 operations as of 07MAY20\",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290684/hong-kong-airlines-week-of-12apr20-operations-as-of-05apr20/\",\n    airline: \"Hong Kong Airlines\"\n  }, {\n    info: \"Cathay Pacific Airways to resume Hong Kong-Delhi flights from 6 May\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290938/cathay-pacific-to-resume-delhi-service-in-early-may-2020/\",\n    airline: \"Cathay Pacific\"\n  }, {\n    info: \"Cathay Pacific 15APR20 \\u2013 31MAY20 operations as of 16APR20\",\n    updated_at: \"2020-04-16\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290818/cathay-pacific-15apr20-31may20-operations-as-of-1000gmt-16apr20/\",\n    airline: \"Cathay Pacific\"\n  }, {\n    info: \"HK Express extends suspension of all flights until 18 June because of COVID-19 \",\n    updated_at: \"2020-04-15\",\n    source: \"https://www.businesstraveller.com/business-travel/2020/04/15/hk-express-extends-suspension-of-all-flights-until-june-18/\",\n    airline: \"HK Express\"\n  }, {\n    info: \"Cathay Pacific cuts more flights as CEO, directors take pay cut\",\n    updated_at: \"2020-04-03\",\n    source: \"https://www.aljazeera.com/ajimpact/cathay-pacific-cuts-flights-ceo-directors-pay-cut-200403041402343.html\",\n    airline: \"Cathay Pacific\"\n  }],\n  KY: [{\n    info: \"Cayman Airways Express extends reduced domestic service to late-May 2020\",\n    updated_at: \"2020-04-23\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290929/cayman-airways-express-extends-reduced-domestic-service-to-late-may-2020/\",\n    airline: \"Cayman Airways Express\"\n  }],\n  CH: [{\n    info: \"Swiss Inter-continental operations as of 14MAY20\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291296/swiss-ns20-inter-continental-operations-as-of-14may20/\",\n    airline: \"Swiss\"\n  }, {\n    info: \"Swiss airline to resume some flights in June\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.thelocal.ch/20200515/swiss-airline-will-resume-some-of-its-flights-in-june\\r\",\n    airline: \"Swiss\"\n  }, {\n    info: \"SWISS will operate 140 flights per week from Zurich and 40 per week from Geneva next month.\",\n    updated_at: \"2020-05-10\",\n    source: \"https://simpleflying.com/swiss-june-expansion/\",\n    airline: \"Swiss\"\n  }, {\n    info: \"Chair Airlines files Zurich \\u2013 Djerba service in S20 (eff. 22MAY20 to 28AUG20)\",\n    updated_at: \"2020-04-23\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290923/chair-airlines-files-zurich-djerba-service-in-s20/\",\n    airline: \"Chair Airlines\"\n  }, {\n    info: \"Swiss 01 \\u2013 14JUN20 European operations as of 14MAY20\",\n    updated_at: \"2020-04-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291314/swiss-01-14jun20-european-operations-as-of-14may20/\",\n    airline: \"Swiss\"\n  }, {\n    info: \"Swiss extends interim long-haul adjustment to early-May 2020\",\n    updated_at: \"2020-04-03\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290621/swiss-extends-interim-long-haul-adjustment-to-early-may-2020/\",\n    airline: \"Swiss\"\n  }],\n  TW: [{\n    info: \"EVA Air June 2020 North East Asia operations as of 1600GMT 13MAY20\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291264/eva-air-june-2020-north-east-asia-operations-as-of-1600gmt-13may20/\",\n    airline: \"EVA Air\"\n  }, {\n    info: \"tigerair Taiwan June 2020 operations as of 12MAY20\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291256/tigerair-taiwan-june-2020-operations-as-of-12may20/\",\n    airline: \"tigerair Taiwan\"\n  }, {\n    info: \"EVA Air May 2020 operations as of  07MAY20\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291172/eva-air-may-2020-operations-as-of-1030gmt-07may20/\",\n    airline: \"EVA Air\"\n  }, {\n    info: \"EVA Air closes July 2020 - Jan 2021 Milan reservations\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290962/eva-air-closes-july-2020-jan-2021-milan-reservations/\",\n    airline: \"EVA Air\"\n  }, {\n    info: \"China Airlines April 2020 Long-Haul operations \",\n    updated_at: \"2020-04-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290595/china-airlines-april-2020-long-haul-operations-as-of-0600gmt-02apr20/\",\n    airline: \"China Airlines\"\n  }],\n  DE: [{\n    info: \"Lufthansa to resume flights to 20 destinations from mid-June\",\n    updated_at: \"2020-05-24\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-lufthansa/lufthansa-to-resume-flights-to-20-destinations-from-mid-june-idUSKBN2300CA\",\n    airline: \"Lufthansa\"\n  }, {\n    info: \"Condor will resume its summer flight schedule from eight airports in Germany on 25 June \",\n    updated_at: \"2020-05-21\",\n    source: \"https://worldairlinenews.com/2020/05/21/condor-to-resume-its-summer-schedule-on-june-25//\",\n    airline: \"Condor\"\n  }, {\n    info: \"Condor to resume its summer schedule on June 25\",\n    updated_at: \"2020-05-21\",\n    source: \"https://worldairlinenews.com/2020/05/21/condor-to-resume-its-summer-schedule-on-june-25/\",\n    airline: \"Condor \"\n  }, {\n    info: \"Eurowings is significantly expanding its flight schedule from June 2020 and will return to Bosnia and Herzegovina, while growing its presence in Croatia\",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.exyuaviation.com/2020/05/eurowings-resuming-bosnia-and-croatia.html\",\n    airline: \"Eurowings\"\n  }, {\n    info: \"DAT resumes Saarbruecken \\u2013 Berlin service from June 2020\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291325/dat-resumes-saarbruecken-berlin-service-from-june-2020/\",\n    airline: \"DAT\"\n  }, {\n    info: \"Eurowings 01 \\u2013 19JUN20 operations as of 14MAY20\",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291313/eurowings-01-19jun20-operations-as-of-14may20/\",\n    airline: \"Eurowings\"\n  }, {\n    info: \"Lufthansa 01 \\u2013 14JUN20 operations as of 14MAY20\",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291311/lufthansa-01-14jun20-operations-as-of-14may20/\",\n    airline: \"Lufthansa\"\n  }, {\n    info: \"Lufthansa will be offering 1,800 round trips a week to more than 130 destinations by end of June \",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-lufthansa-schedule/lufthansa-plans-1800-round-trips-a-week-by-the-end-of-june-idUSKBN22Q2F2\",\n    airline: \"Lufthansa\"\n  }, {\n    info: \"Eurowings as of 10MAY20, operations eff. as of 24MAY20 \",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291202/eurowings-week-of-24may20-operations-as-of-10may20/\",\n    airline: \"Eurowings\"\n  }, {\n    info: \"Lufthansa Group to put 80 aircraft back in the air starting on June 1\",\n    updated_at: \"2020-05-11\",\n    source: \"https://worldairlinenews.com/2020/05/09/lufthansa-group-to-put-80-aircraft-back-in-the-air-starting-on-june-1/\",\n    airline: \"Lufthansa\"\n  }, {\n    info: \"Lufthansa Group to begin flying 80 more of its aircraft in June after COVID-19 pandemic forces flight suspension\",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-lufthansa-schedule/lufthansa-to-start-flying-80-more-aircraft-in-june-to-meet-travel-demand-idUSKBN22K1N2\",\n    airline: \"Luthansa \"\n  }, {\n    info: \"Eurowings Long-Haul routes update as of 24APR20\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290959/eurowings-s20-long-haul-routes-update-as-of-24apr20/\",\n    airline: \"Eurowings\"\n  }, {\n    info: \"Luftfahrgesellschaft Walter (LGW) set to enter voluntary administration amid COVID-19 outbreak\",\n    updated_at: \"2020-04-22\",\n    source: \"Media\",\n    airline: \"Luftfahrgesellschaft Walter\"\n  }, {\n    info: \"Lufthansa extends interim long-haul schedule to 17MAY20\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290827/lufthansa-extends-interim-long-haul-schedule-to-17may20/\",\n    airline: \"Lufthansa\"\n  }],\n  PA: [{\n    info: \"Copa Airlines moves planned service resumption to late-June 2020\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291399/copa-airlines-moves-planned-service-resumption-to-late-june-2020/\",\n    airline: \"COPA Airlines\"\n  }],\n  HR: [{\n    info: \"Wind Rose adds Kyiv \\u2013 Zagreb service from June 2020\",\n    updated_at: \"2020-08-28\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290997/wind-rose-adds-kyiv-zagreb-service-from-june-2020/\",\n    airline: \"Wind Rose\"\n  }, {\n    info: \"Croatia Airlines returning Zagreb flights to Amsterdam and Frankfurt from 25 May\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.croatiaweek.com/croatia-airlines-returning-zagreb-flights-to-amsterdam-and-frankfurt-from-25-may/\\r\",\n    airline: \"Croatia Airlines \"\n  }, {\n    info: \"Croatia Airlines resumes domestic service from 11MAY20\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291062/croatia-airlines-resumes-domestic-service-from-11may20/\",\n    airline: \"Croatia Airlines \"\n  }],\n  CU: [{\n    info: \"Cubana April 2020 operations as of 19APR20\",\n    updated_at: \"2020-04-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290911/cubana-april-2020-operations-as-of-19apr20/\",\n    airline: \"Cubana de Aviacion\"\n  }],\n  CZ: [{\n    info: \"Smartwings adds Paris CDG \\u2013 Podgorica service from June 2020\",\n    updated_at: \"2020-05-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291278/smartwings-adds-paris-cdg-podgorica-service-from-june-2020/\",\n    airline: \"Smartwings\"\n  }, {\n    info: \"CSA Czech Airlines May 2020 scheduled operations as of 10MAY20 (eff.18MAY20)\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291198/csa-czech-airlines-may-2020-scheduled-operations-as-of-10may20/\",\n    airline: \"Czech Airlines\"\n  }],\n  DK: [{\n    info: \"DAT adds Aalborg \\u2013 Copenhagen service from June 2020\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291324/dat-adds-aalborg-copenhagen-service-from-june-2020/\",\n    airline: \"DAT\"\n  }, {\n    info: \"SAS week of 19APR20 operations\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290859/sas-week-of-19apr20-operations/\",\n    airline: \"SAS\"\n  }],\n  BT: [{\n    info: \"Druk Air 13 \\u2013 31MAY20 operations as of 13MAY20\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291263/druk-air-13-31may20-operations-as-of-13may20/\",\n    airline: \"Druk Air\"\n  }],\n  EG: [{\n    info: \"FlyEgypt plans Luxor \\u2013 Kuwait City launch from mid-May 2020\",\n    updated_at: \"2020-05-04\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291079/flyegypt-plans-luxor-kuwait-city-launch-from-mid-may-2020/\",\n    airline: \"EgyptAir\"\n  }, {\n    info: \"Suspension of Egypt's air traffic does not include domestic, cargo flights\",\n    updated_at: \"2020-03-16\",\n    source: \"https://www.egypttoday.com/Article/1/82685/Suspension-of-Egypt-s-air-traffic-does-not-include-domestic\",\n    airline: \"EgyptAir\"\n  }],\n  IL: [{\n    info: \"El Al to operate special passenger flights (TLV-CDG-LHR: 24-27MAY20, TLV-HKG: 25MAY20; TLV-BKK-TLV: 06-08JUN20)\",\n    updated_at: \"2020-05-21\",\n    source: \"https://worldairlinenews.com/2020/05/21/el-al-to-operate-special-passenger-flights-seeks-400-government-million-loan-to-stay-in-business/\",\n    airline: \"El AL\"\n  }, {\n    info: \"El Al extends suspension of commercial flights until 20 June \",\n    updated_at: \"2020-05-20\",\n    source: \"https://in.reuters.com/article/health-coronavirus-el-al-arlns/israels-el-al-extends-passenger-flight-suspension-until-june-20-idINKBN22W2I6\",\n    airline: \"EL AL\"\n  }, {\n    info: \"El Al  Tel Aviv- Manchester as of 14MAY20 eff. 31MAY20\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291287/el-al-s20-manchester-inventory-changes-as-of-14may20/\",\n    airline: \"El AL\"\n  }, {\n    info: \"Wizz Air to resume some flights to London, Tel Aviv and Vienna in May \",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.timesofisrael.com/airlines-plan-to-resume-israel-routes-after-virus-grounds-travel/\",\n    airline: \"Wizz Air\"\n  }],\n  ET: [{\n    info: \"Ethiopian Airlines will effective 21st May resume operations to Italy\",\n    updated_at: \"2020-05-15\",\n    source: \"Ethiopian Airlines\",\n    airline: \"Ethiopian\"\n  }, {\n    info: \"Ethiopian Airlines 01 \\u2013 15MAY20 Long-Haul operations as of 29APR20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291007/ethiopian-airlines-01-15may20-long-haul-operations-as-of-0400gmt-29apr20/\",\n    airline: \"Ethiopian\"\n  }, {\n    info: \"Ethiopian Airlines April 2020 Europe / Americas service changes as of 03APR20\",\n    updated_at: \"2020-04-03\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290618/ethiopian-airlines-april-2020-europe-americas-service-changes-as-of-03apr20/\",\n    airline: \"Ethiopian\"\n  }, {\n    info: \"Ethiopian Airlines April 2020 East Asia service changes as of 30MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290545/ethiopian-airlines-april-2020-east-asia-service-changes-as-of-30mar20/\",\n    airline: \"Ethiopian\"\n  }],\n  ZW: [{\n    info: \"FastJet plans new routes from July 2020\",\n    updated_at: \"2020-04-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290778/fastjet-plans-new-routes-from-july-2020/\",\n    airline: \"Fastjet Zimbabwe\"\n  }, {\n    info: \"Fastjet Zimbabwe plans to restart flights on 21 April \",\n    updated_at: \"2020-04-07\",\n    source: \"https://www.reuters.com/article/brief-fastjet-says-fastjet-zimbabwe-plan/brief-fastjet-says-fastjet-zimbabwe-planning-to-restart-flights-on-21-april-idUSFWN2BV19X\",\n    airline: \"Fastjet Zimbabwe\"\n  }, {\n    info: \"Fastjet Zimbabwe to suspend flights from 27 March \",\n    updated_at: \"2020-03-25\",\n    source: \"https://www.chronicle.co.zw/fastjet-zim-suspends-flights/\",\n    airline: \"Fastjet Zimbabwe\"\n  }],\n  FJ: [{\n    info: \"Fiji Airways restores additional domestic flights from eff. 16MAY20\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291288/fiji-airways-restores-additional-domestic-flights-from-late-may-2020/\",\n    airline: \"Fiji Airways\"\n  }, {\n    info: \"Fiji Airways restores additional domestic flights from late-May 2020\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291288/fiji-airways-restores-additional-domestic-flights-from-late-may-2020//\",\n    airline: \"Fiji Link\"\n  }, {\n    info: \"Fiji Airways extends suspension of all international flights to end of June because of COVID-19 \",\n    updated_at: \"2020-05-08\",\n    source: \"http://www.xinhuanet.com/english/2020-05/08/c_139039974.htm\",\n    airline: \"Fiji Airways\"\n  }],\n  FI: [{\n    info: \"Finnair adds frequencies and routes to its network, with long-haul routes beginning in July\",\n    updated_at: \"2020-05-18\",\n    source: \"https://worldairlinenews.com/2020/05/18/finnair-adds-frequencies-and-routes-to-its-network-with-long-haul-routes-beginning-in-july/\",\n    airline: \"Finnair\"\n  }, {\n    info: \"Finnair 15APR20 \\u2013 30JUN20 operations as of 16APR20\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290836/finnair-15apr20-30jun20-operations-as-of-16apr20/\",\n    airline: \"Finnair\"\n  }],\n  ID: [{\n    info: \"Garuda Indonesia halts domestic flights in areas implementing large'scale social distancing\",\n    updated_at: \"2020-04-24\",\n    source: \"https://en.antaranews.com/news/146748/garuda-indonesia-halts-domestic-flights-in-areas-implementing-psbb\",\n    airline: \"Garuda Indonesia\"\n  }, {\n    info: \"Garuda Indonesia 22APR20 \\u2013 30APR20 International operations as of 23APR20\",\n    updated_at: \"2020-04-23\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290920/garuda-indonesia-22apr20-30apr20-international-operations-as-of-0445gmt-23apr20/\",\n    airline: \"Garuda Indonesia\"\n  }, {\n    info: \"Air Asia grounds most of its fleet\",\n    updated_at: \"2020-03-27\",\n    source: \"https://www.businesstraveller.com/business-travel/2020/03/27/air-asia-grounds-most-of-its-fleet/\",\n    airline: \"Indonesia AirAsia\"\n  }],\n  GE: [{\n    info: \"Georgian Airways will resume flights from 1 July \",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.aviation24.be/airlines/georgian-airways/georgian-airways-will-resume-its-regular-flights-from-1st-of-july/\",\n    airline: \"Georgian Airways\"\n  }],\n  BH: [{\n    info: \"Gulf Air 01MAY20 \\u2013 15MAY20 operations as of 29APR20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291017/gulf-air-01may20-15may20-operations-as-of-0915gmt-29apr20/\",\n    airline: \"Gulf Air\"\n  }, {\n    info: \"Gulf Air says transit open again via Bahrain for international travelers\",\n    updated_at: \"2020-04-04\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-bahrain-airlines/gulf-air-says-transit-open-again-via-bahrain-for-international-travelers-idUSKBN21M0AU\",\n    airline: \"Gulf Air\"\n  }],\n  MD: [{\n    info: \"HiSky further delays service launch to June 2020\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291160/hisky-further-delays-service-launch-to-june-2020/\",\n    airline: \"HiSky\"\n  }],\n  IR: [{\n    info: \"Iran Air to resume first post-corona foreign flight to Amsterdam every Thursday \",\n    updated_at: \"2020-05-11\",\n    source: \"https://en.mehrnews.com/news/158560/Iran-Air-to-resume-first-post-corona-foreign-flight-to-Amsterdam\",\n    airline: \"Iran Air\"\n  }, {\n    info: \"Iran Air suspends flights to Germany amid COVID-19 surge\",\n    updated_at: \"2020-04-04\",\n    source: \"http://famagusta-gazette.com/2020/04/04/iran-air-suspends-flights-to-germany-amid-covid-19-surge/\",\n    airline: \"Iran Air\"\n  }],\n  KH: [{\n    info: \"JC Airlines reschedules Chiang Mai launch to July 2020\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291338/jc-airlines-reschedules-chiang-mai-launch-to-july-2020/\",\n    airline: \"JC Airlines\"\n  }, {\n    info: \"Lanmei Airlines re-schedules planned new routes launch eff. August 2020\",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291157/lanmei-airlines-re-schedules-planned-new-routes-launch-in-s20/\",\n    airline: \"Lanmei Airlines\"\n  }, {\n    info: \"Cambodia Airways plans Hong Kong service from June 2020\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290704/cambodia-airways-plans-hong-kong-service-from-june-2020/\",\n    airline: \"Cambodia Airways\"\n  }],\n  AU: [{\n    info: \"Qantas set to ramp up domestic flights without social distancing\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.reuters.com/article/us-health-coronavirus-qantas/australias-qantas-set-to-ramp-up-domestic-flights-without-social-distancing-idUSKBN22V00R?il=0\",\n    airline: \"Qantas\"\n  }, {\n    info: \"Qantas to restart regular flights from June 12\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.zawya.com/mena/en/life/story/Qantas_to_restart_regular_flights_from_June_12-SNG_174864139//\",\n    airline: \"Qantas\"\n  }, {\n    info: \"Qantas additions to Domestic operations of 26APR20 (from 20APR20 to 30JUN20)\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291211/qantas-2q20-domestic-a330-300-operations/\",\n    airline: \"Qantas\"\n  }, {\n    info: \"Qantas Airways extends domestic, international flight cancellations because of COVID-19\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.executivetraveller.com/news/qantas-extends-coronavirus-flight-cancellations-to-july\",\n    airline: \"Qantas\"\n  }, {\n    info: \"Jetstar week of 26APR20 operations as of 19APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290892/jetstar-week-of-26apr20-operations-as-of-19apr20/\",\n    airline: \"Jetstar\"\n  }, {\n    info: \"Virgin Australia 17APR20 \\u2013 14JUN20 Domestic operations as of 17APR20\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290835/virgin-australia-17apr20-14jun20-domestic-operations-as-of-17apr20/\",\n    airline: \"Virgin Australia\"\n  }, {\n    info: \"Virgin Australia to resume limited domestic operations until 7 June, some repatriation flights amid COVID-19 pandemic\",\n    updated_at: \"2020-04-17\",\n    source: \"https://www.rustourismnews.com/2020/04/17/virgin-australia-to-resume-limited-flights/\",\n    airline: \"Virgin Australia\"\n  }, {\n    info: \"Virgin Australia will ground all but one domestic flight until at least 15 June because of COVID-19\",\n    updated_at: \"2020-04-09\",\n    source: \"https://www.cityam.com/coronavirus-virgin-australia-to-grounds-all-but-one-domestic-flights-and-seeks-state-aid/\",\n    airline: \"Virgin Australia\"\n  }, {\n    info: \"Qantas schedules limited International flights in April 2020\",\n    updated_at: \"2020-04-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290696/qantas-schedules-limited-international-flights-in-april-2020/\",\n    airline: \"Qantas\"\n  }, {\n    info: \"Jetstar April/May 2020 Domestic operations as of 05APR20\",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290656/jetstar-aprilmay-2020-domestic-operations-as-of-05apr20/\",\n    airline: \"Virgin Australia\"\n  }, {\n    info: \"Tigerair Australia will ground all their domestic services effective immediately.\",\n    updated_at: \"2020-03-24\",\n    source: \"https://www.news.com.au/travel/travel-updates/health-safety/coronavirus-virgin-australia-stands-down-8000-tiger-air-ground-fleet/news-story/e5779b7b867c492c51f8142974371e40\",\n    airline: \"Tigerair Australia\"\n  }, {\n    info: \"Regional Express to ground almost all its public flights from 6 April\",\n    updated_at: \"2020-03-23\",\n    source: \"https://www.northweststar.com.au/story/6692672/rex-grounding-all-flights-except-qld-as-travel-ban-bites/\",\n    airline: \"Regional Express\"\n  }, {\n    info: \"QANTAS and Jetstar to suspend scheduled international flights, all A380s. 747s and Dreamliners grounded\",\n    updated_at: \"2020-03-19\",\n    source: \"https://worldairlinenews.com/2020/03/19/qantas-and-jetstar-to-suspend-scheduled-international-flights-all-a380s-747s-and-dreamliners-grounded/\",\n    airline: \"Qantas, Jetstar\"\n  }],\n  SG: [{\n    info: \"Scoot June 2020 Interim operations as of 20MAY20\\r\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291378/scoot-june-2020-interim-operations-as-of-20may20/\",\n    airline: \"Scoot\"\n  }, {\n    info: \"Jetstar Asia extends suspension of flights to May 31\",\n    updated_at: \"2020-05-01\",\n    source: \"https://www.channelnewsasia.com/news/singapore/covid19-jetstar-asia-extends-suspension-of-flights-to-may-31-12694600\",\n    airline: \"Jetstar Asia\"\n  }, {\n    info: \"Jetstar Asia extends interim schedule to 19MAY20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291023/jetstar-asia-extends-interim-schedule-to-19may20/\",\n    airline: \"Jetstar Asia\"\n  }, {\n    info: \"Singapore Airlines extends flight cancelations to June\",\n    updated_at: \"2020-04-25\",\n    source: \"https://www.channelnewsasia.com/news/business/covid-19-singapore-airlines-flights-cancel-travel-extension-12676620\",\n    airline: \"Singapore Airlines\"\n  }, {\n    info: \"Singapore Airlines May 2020 scheduled passenger service as of 21APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290889/singapore-airlines-may-2020-scheduled-passenger-service-as-of-0800gmt-21apr20/\",\n    airline: \"Singapore Airlines\"\n  }, {\n    info: \"Singapore Airlines 12APR20 \\u2013 30APR20 operations as of 0430GMT 07APR20\\r\",\n    updated_at: \"2020-04-07\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290672/singapore-airlines-12apr20-30apr20-operations-as-of-0430gmt-07apr20/\",\n    airline: \"Singapore Airlines\"\n  }],\n  UA: [{\n    info: \"Ukraine International Airlines closes ticket sales for all international flights until 1 July\",\n    updated_at: \"2020-05-18\",\n    source: \"https://www.ukrinform.net/rubric-economy/3027393-uia-closes-sales-of-tickets-for-international-flights-until-july-1.html\",\n    airline: \"Ukraine International Airlines (UIA)\"\n  }, {\n    info: \"Italy allows Ryanair 28 flights between cities in Italy and Ukraine, until 13 July.\",\n    updated_at: \"2020-04-06\",\n    source: \"https://open4business.com.ua/italy-allows-ryanair-28-flights-between-cities-of-italy-and-ukraine/\",\n    airline: \"Ryan Air (Italy-Ukraine)\"\n  }, {\n    info: \"Jonika Airlines moves summer 2020 scheduled operation to May 2020\",\n    updated_at: \"2020-04-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290596/jonika-airlines-moves-summer-2020-scheduled-operation-to-may-2020/\",\n    airline: \"Jonika Airlines\"\n  }, {\n    info: \"Ukraine International Airlines has suspended most operations until at least April 3, 2020.\",\n    updated_at: \"2020-03-14\",\n    source: \"https://www.flyuia.com/ua/en/news/2020/uia-stopped-operating-scheduled-flights\",\n    airline: \"UIA\"\n  }],\n  KE: [{\n    info: \"Jambojet extends suspension of flights to 7 June\",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.businessdailyafrica.com/news/Jambojet-extends-suspension-of-flights-to-June-7/539546-5558486-6mwxi3/index.html\",\n    airline: \"Jambojet\"\n  }, {\n    info: \"Kenya Airways late-May 2020 Intercontinental operation as of 28APR20\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291006/kenya-airways-late-may-2020-intercontinental-operation-as-of-28apr20/\",\n    airline: \"Kenya Airways\"\n  }, {\n    info: \"Kenya Airways Stops Passenger Flights for the First Time in Four Decades\",\n    updated_at: \"2020-04-02\",\n    source: \"https://allafrica.com/stories/202004020253.html\",\n    airline: \"Kenya Airways\"\n  }],\n  NL: [{\n    info: \"KLM June 2020 European operations\",\n    updated_at: \"2020-05-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291203/klm-june-2020-european-operations-as-of-10may20/\",\n    airline: \"KLM\"\n  }, {\n    info: \"KLM May20 European operations effective from 04MAY20\",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291180/klm-resumes-8-european-routes-from-04may20/\",\n    airline: \"KLM\"\n  }, {\n    info: \"Eurowings, KLM resume flights to, from Prague\",\n    updated_at: \"2020-05-04\",\n    source: \"https://www.praguemorning.cz/eurowings-first-carrier-to-resume-regular-flights-from-prague/\",\n    airline: \"KLM\"\n  }, {\n    info: \"KLM NS20 Long-Haul operations as of 17APR20\",\n    updated_at: \"2020-04-18\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290837/klm-ns20-long-haul-operations-as-of-0845gmt-17apr20/\",\n    airline: \"KLM\"\n  }, {\n    info: \"Transavia Airlines (Netherlands) cancels all flights until May 6\\n\",\n    updated_at: \"2020-03-31\",\n    source: \"https://worldairlinenews.com/2020/03/31/transavia-airlines-netherlands-cancels-all-flights-until-may-6/\",\n    airline: \"Transavia\"\n  }, {\n    info: \"KLM starts the summer schedule with 57 destinations\",\n    updated_at: \"2020-03-24\",\n    source: \"https://worldairlinenews.com/2020/03/24/klm-starts-the-summer-schedule-with-57-destinations/\",\n    airline: \"KLM\"\n  }, {\n    info: \"KLM takes exceptional measures due to coronavirus, grounds A380s and 747-400s\",\n    updated_at: \"2020-03-16\",\n    source: \"https://worldairlinenews.com/2020/03/16/air-france-klm-takes-exceptional-measures-due-to-coronavirus-grounds-a380s-and-747-400s/\",\n    airline: \"KLM\"\n  }],\n  KW: [{\n    info: \"Kuwait Airways June \\u2013 Oct 2020 Intercontinental operations as of 19APR20\",\n    updated_at: \"2020-04-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290853/kuwait-airways-june-oct-2020-intercontinental-operations-as-of-0815gmt-19apr20/\",\n    airline: \"Kuwait Airways\"\n  }],\n  MZ: [{\n    info: \"LAM Mozambique moves Lisbon service resumption to 02AUG20\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291407/lam-mozambique-moves-lisbon-service-resumption-to-3q20/\",\n    airline: \"LAM\"\n  }, {\n    info: \"LAM Mozambique adds Pemba \\u2013 Johannesburg service from late-Oct 2020\",\n    updated_at: \"2020-05-06\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291136/lam-mozambique-adds-pemba-johannesburg-service-from-late-oct-2020/\",\n    airline: \"LAM\"\n  }],\n  CL: [{\n    info: \"LATAM Group to Increase Flights in June and July\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.travelagentcentral.com/transportation/latam-group-to-increase-flights-june-and-july\",\n    airline: \"LATAM \"\n  }, {\n    info: \"Sky Airlines will resume flights in June with strong security measures | Business\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.en24.news/n24/2020/05/sky-airlines-will-resume-flights-in-june-with-strong-security-measures-business.html\",\n    airline: \"SKY \"\n  }],\n  AG: [{\n    info: \"LIAT extends suspension of passenger flights until 31 May\",\n    updated_at: \"2020-05-14\",\n    source: \"https://barbadostoday.bb/2020/05/14/liat-passenger-flights-further-suspended/\",\n    airline: \"LIAT\"\n  }],\n  PL: [{\n    info: \"LOT Polish Airlines June 2020 Domestic operations as of 20MAY20\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291380/lot-polish-airlines-june-2020-domestic-operations-as-of-20may20/\",\n    airline: \"LOT\"\n  }],\n  LU: [{\n    info: \"Luxair to Operate 5 Destinations from Luxembourg\",\n    updated_at: \"2020-05-22\",\n    source: \"https://www.rustourismnews.com/2020/05/22/luxair-to-operate-5-destinations-from-luxembourg/\",\n    airline: \"Luxair\"\n  }, {\n    info: \"Luxair to resume flight operations on 1 June\",\n    updated_at: \"2020-05-15\",\n    source: \"https://today.rtl.lu/news/luxembourg/a/1516853.html\",\n    airline: \"Luxair\"\n  }],\n  MV: [{\n    info: \"Maldivian week of 26APR20 operations as of 19APR20\",\n    updated_at: \"2020-04-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290879/maldivian-week-of-26apr20-operations-as-of-19apr20/\",\n    airline: \"Maldivian\"\n  }, {\n    info: \"FlyMe temporarily halts flights to prevent spread of COVID-19\",\n    updated_at: \"2020-03-28\",\n    source: \"https://avas.mv/en/80424\",\n    airline: \"Flyme\"\n  }],\n  ME: [{\n    info: \"Montenegro Airlines 01 \\u2013 14JUN20 operations as of 20MAY20\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291383/montenegro-airlines-01-14jun20-operations-as-of-20may20/\",\n    airline: \"Montenegro Airlines\"\n  }],\n  NR: [{\n    info: \"Nauru Airlines May 2020 Operational schedule revision\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291032/nauru-airlines-may-2020-operational-schedule-revision/\",\n    airline: \"Nauru Airlines\"\n  }],\n  TN: [{\n    info: \"Tunisair : La r\\xE9forme imm\\xE9diate ou le risque de fermeture\",\n    updated_at: \"2020-04-17\",\n    source: \"https://news.gnet.tn/tunisair-la-reforme-immediate-ou-le-risque-de-fermeture-maarouf/\",\n    airline: \"Tunisair\"\n  }, {\n    info: \"Nouvelair Tunisie revises planned new service in S20\\n\",\n    updated_at: \"2020-04-11\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290751/nouvelair-tunisie-revises-planned-new-service-in-s20/\",\n    airline: \"Nouvelair Tunisie\"\n  }],\n  OM: [{\n    info: \"Oman Air May 2020 Europe preliminary operations as of 17APR20\",\n    updated_at: \"2020-03-17\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290829/oman-air-may-2020-europe-preliminary-operations-as-of-0345gmt-17apr20/\",\n    airline: \"Oman Air\"\n  }],\n  PK: [{\n    info: \"Pakistan partially resumes flight operations for UK\",\n    updated_at: \"2020-04-18\",\n    source: \"https://www.brecorder.com/2020/04/18/590455/pakistan-partially-resumes-flight-operations-for-uk/\",\n    airline: \"PIA\"\n  }, {\n    info: \"PIA suspends flight operations from Karachi after pilots quarantined\",\n    updated_at: \"2020-04-06\",\n    source: \"https://www.khaleejtimes.com/coronavirus-pandemic/pia-halts-flight-operations-from-karachi-after-pilots-suspected-of-contracting-covid-19\",\n    airline: \"PIA\"\n  }],\n  ZM: [{\n    info: \"ProFlight Zambia resumes Lusaka \\u2013 Ndola service from May 2020\",\n    updated_at: \"2020-05-02\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291060/proflight-zambia-resumes-lusaka-ndola-service-from-may-2020/\",\n    airline: \"ProFlight Zambia\"\n  }, {\n    info: \"Zambia Airways launch delayed again due to COVID-19\",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.ch-aviation.com/portal/news/89631-zambia-airways-launch-delayed-again-due-to-covid-19\",\n    airline: \"Zambia Airways\"\n  }],\n  QA: [{\n    info: \"Qatar Airways Announces Phased Rebuilding of Network to an Initial 52* Destinations by End of May and 80* in June\",\n    updated_at: \"2020-05-15\",\n    source: \"https://www.qatarairways.com/en/press-releases/2020/may/QRSummer.html?activeTag=Press-releases\",\n    airline: \"Qatar Airways\"\n  }, {\n    info: \"Qatar Airways will resume regular scheduled services to Brisbane beginning 20 May\",\n    updated_at: \"2020-05-14\",\n    source: \"https://australianaviation.com.au/2020/05/qatar-airways-to-resume-brisbane-services/\",\n    airline: \"Qatar Airways\"\n  }, {\n    info: \"Qatar Airways Jun - Aug 2020 operations / NS20 network suspensions as of 10MAY20\",\n    updated_at: \"2020-05-10\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291190/update-as-of-0900gmt-10may20-qatar-airways-jun-aug-2020-operations-ns20-network-suspensions/\",\n    airline: \"Qatar Airways\"\n  }, {\n    info: \"Qatar Airways suspends flights from Doha to Bucharest, Sarajevo, Skopje, Sofia until 25 October \",\n    updated_at: \"2020-05-07\",\n    source: \"https://www.exyuaviation.com/2020/05/qatar-airways-suspends-skopje-sarajevo.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+Ex-yuAviationNews+(EX-YU+Aviation+News)\",\n    airline: \"Qatar Airways\"\n  }, {\n    info: \"Qatar Airways NS20 Operations\",\n    updated_at: \"2020-04-09\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290724/qatar-airways-ns20-operations-as-of-1045gmt-09apr20/\",\n    airline: \"Qatar Airways\"\n  }, {\n    info: \"Qatar Airways says will keep flying but warns cash is running out\",\n    updated_at: \"2020-03-29\",\n    source: \"https://www.dailysabah.com/business/transportation/qatar-airways-says-will-keep-flying-but-warns-cash-is-running-out\",\n    airline: \"Qatar Airways\"\n  }],\n  BN: [{\n    info: \"Royal Brunei May/June 2020 Operations as of 04MAY20\",\n    updated_at: \"2020-05-04\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291075/royal-brunei-mayjune-2020-operations-as-of-04may20/\",\n    airline: \"Royal Brunei\"\n  }, {\n    info: \"Royal Brunei Airlines has announced a significantly reduced flight schedule, and will be suspending their direct flight from Brunei to London from 0010 on 22 March.\",\n    updated_at: \"2020-03-18\",\n    source: \"https://www.flyroyalbrunei.com/brunei/en/covid-19-updates/\",\n    airline: \"Royal Brunei\"\n  }],\n  SA: [{\n    info: \"Saudia May 2020 International operations as of 10APR20\",\n    updated_at: \"2020-04-10\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290733/saudia-may-2020-international-operations-as-of-0350gmt-10apr20/\",\n    airline: \"Saudia\"\n  }],\n  SB: [{\n    info: \"Solomon Airlines revises domestic interim schedule from 18MAY20\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291327/solomon-airlines-revises-domestic-interim-schedule-from-18may20/\",\n    airline: \"Solomon Airlines\"\n  }],\n  LK: [{\n    info: \"Sri Lankan Airlines resumes some passenger flights from 13 May \",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.newsfirst.lk/2020/05/12/sl-airlines-resumes-operations-of-selected-passenger-flights/\",\n    airline: \"SriLankan Airlines\"\n  }, {\n    info: \"Sri Lankan Airlines extends suspension of passenger flights until 30 April \",\n    updated_at: \"2020-04-15\",\n    source: \"http://www.hirunews.lk/238660/sri-lankan-airlines-to-extend-temporary-suspension-of-its-scheduled-passenger-flights-till-april-30-2020\",\n    airline: \"SriLankan Airlines\"\n  }],\n  NI: [{\n    info: \"Avianca/TACA adds Managua \\u2013 Miami service from Aug 2020\",\n    updated_at: \"2020-05-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291363/aviancataca-adds-a321-managua-miami-service-from-aug-2020/\",\n    airline: \"TACA/ Avianca\"\n  }],\n  PT: [{\n    info: \"TAP Air Portugal June \\u2013 July 2020 operations as of 0245GMT 12MAY20\",\n    updated_at: \"2020-05-12\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291223/tap-air-portugal-june-july-2020-operations-as-of-0245gmt-12may20/\",\n    airline: \"TAP\"\n  }, {\n    info: \"TAP Air Portugal 18MAY20 \\u2013 31MAY20\",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291189/tap-air-portugal-18may20-31may20-interim-operations-as-of-08may20/\",\n    airline: \"TAP\"\n  }, {\n    info: \"TAP Air Portugal further downsizes operation 01APR20 \\u2013 04MAY20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290542/tap-air-portugal-further-downsizes-operation-01apr20-04may20/\",\n    airline: \"TAP\"\n  }],\n  TM: [{\n    info: \"Turkmenistan Airlines April/May 2020 Domestic service\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290939/turkmenistan-airlines-aprilmay-2020-domestic-service-reductions/\",\n    airline: \"Turkmenistan Airlines\"\n  }, {\n    info: \"Turkmenistan Airlines extends International service suspension to 20MAY20\",\n    updated_at: \"2020-04-24\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290940/turkmenistan-airlines-extends-international-service-suspension-to-20may20/\",\n    airline: \"Turkmenistan Airlines\"\n  }],\n  GU: [{\n    info: \"United Airlines will resume flights between Guam, Saipan on 2 May \",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.postguam.com/news/local/united-to-resume-guam-saipan-flights-in-may/article_af6e510c-8ab8-11ea-9b89-ab5fa15f7662.html\",\n    airline: \"United Airlines\"\n  }],\n  UZ: [{\n    info: \"Uzbekistan Airways resumes limited domestic service from mid-May 2020\",\n    updated_at: \"2020-05-19\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291328/uzbekistan-airways-resumes-limited-domestic-service-from-mid-may-2020/\",\n    airline: \"Uzbekistan Airways\"\n  }],\n  NO: [{\n    info: \"Wider\\xF8e schedules new routes June - Aug 2020\",\n    updated_at: \"2020-05-21\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291386/widere-schedules-new-routes-june-aug-2020/\",\n    airline: \"Wider\\xF8e\"\n  }, {\n    info: \"Norwegian Air says planes set to remain grounded until April 2021\",\n    updated_at: \"2020-04-27\",\n    source: \"https://www.cityam.com/norwegian-air-says-planes-set-to-remain-grounded-until-april-2021/\",\n    airline: \"Norwegian\"\n  }, {\n    info: \"Norwegian 26APR20 \\u2013 30MAY20 operations as of 19APR20\",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290869/norwegian-26apr20-30may20-operations-as-of-19apr20/\",\n    airline: \"Norwegian\"\n  }, {\n    info: \"SAS week of 29MAR20 European operations\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290550/sas-week-of-29mar20-european-operations-as-of-29mar20/\",\n    airline: \"SAS (Norway)\"\n  }],\n  HU: [{\n    info: \"Wizz Air suspends all Polish flights until June 6 \",\n    updated_at: \"2020-05-23\",\n    source: \"https://www.thefirstnews.com/article/wizz-air-suspends-all-polish-flights-until-june-6-12876\\r\",\n    airline: \"Wizz Air\"\n  }, {\n    info: \"Wizz Air announces plans to resume flights to Portugal and Greece \",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.theguardian.com/business/2020/may/05/wizz-air-resume-flights-portugal-greece-luton-coronavirus-safety\\r\",\n    airline: \"Wizz Air\"\n  }, {\n    info: \"Wizz Air to fly to Abu Dhabi from JUN20. From BUD, OTP,  CLJ, KTW and SOF.\",\n    updated_at: \"2020-05-04\",\n    source: \"https://worldairlinenews.com/2020/05/04/wizz-air-to-fly-to-abu-dhabi/\",\n    airline: \"Wizz Air\"\n  }],\n  xUK: [{\n    info: \"COVID-19: COMPREHENSIVE LIST OF AIRLINES AND ROUTES THAT STILL OPERATE\",\n    updated_at: \"2020-03-29\",\n    source: \"https://samchui.com/2020/03/29/covid-19-comprehensive-list-of-airlines-and-routes-still-operate/?utm_source=BoardingArea&utm_medium=twitter#.XoDurIgzY2w\",\n    airline: \"zAirlines (Airline Code): AA, AC, AF, AY, BA, BR, CA, CI, CX, CZ, DL, HU, JP, KE, KL, LH, LX, MU, NH, OZ, QF, QR, SK, SU, SQ, TP, UA\"\n  }],\n  BA: [{\n    info: \"Flights suspended Flights from Sarajevo International Airport\",\n    updated_at: \"2020-03-16\",\n    source: \"http://www.sarajevotimes.com/aeagen-lufthansa-and-pegasus-airlines-suspended-flights-from-sarajevo-international-airport/\",\n    airline: \"Aegean, Lufthansa, Pegasus\"\n  }],\n  GP: [{\n    info: \"Air Antilles revises interim schedule to mid-May 2020\",\n    updated_at: \"2020-04-14\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290773/air-antilles-revises-interim-schedule-to-mid-may-2020/\",\n    airline: \"Air Antilles\"\n  }],\n  BF: [{\n    info: \"All flights canceled from 21MAR20\",\n    updated_at: \"2020-03-20\",\n    source: \"https://lefaso.net/spip.php?article95620\",\n    airline: \"Air Burkina\"\n  }],\n  KI: [{\n    info: \"Air Kiribati suspends scheduled operation 10 \\u2013 19MAY20\",\n    updated_at: \"2020-05-13\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/291262/air-kiribati-suspends-scheduled-operation-10-19may20/\",\n    airline: \"Air Kiribati\"\n  }],\n  MT: [{\n    info: \"U.S. Embassy reports Air Malta will schedule outbound flights to some European cities beginning on 23 March amid COVID-19 concerns\",\n    updated_at: \"2020-03-23\",\n    source: \"https://www.osac.gov/Content/Report/32744e2b-1f99-4438-8462-1844951c73a7\",\n    airline: \"Air Malta \"\n  }, {\n    info: \"Air Malta will suspend all commercial flights until further notice because of COVID-19 on 20 March 2020\",\n    updated_at: \"2020-03-19\",\n    source: \"https://aviationvoice.com/air-malta-to-stop-commercial-flights-until-further-notice-2-202003190011/\",\n    airline: \"Air Malta \"\n  }],\n  MU: [{\n    info: \"Air Mauritius enters voluntary administration due to coronavirus\",\n    updated_at: \"2020-04-22\",\n    source: \"https://af.reuters.com/article/commoditiesNews/idAFL5N2CA4GI\",\n    airline: \"Air Mauritius\"\n  }],\n  NG: [{\n    info: \"Ibom Air to suspend flights from 29 March\",\n    updated_at: \"2020-03-27\",\n    source: \"https://www.thisdaylive.com/index.php/2020/03/27/ibom-air-suspends-flight-operation/\",\n    airline: \"Ibom Air\"\n  }, {\n    info: \"Arik Air, Aero Contractors, Air Peace suspend flights \",\n    updated_at: \"2020-03-25\",\n    source: \"https://www.channelstv.com/2020/03/25/arik-air-aero-suspend-all-flight-operations/\",\n    airline: \"Arik Air, Aero Contractors, Air Peace\"\n  }, {\n    info: \"Dana Air suspends flights for 14 days \",\n    updated_at: \"2020-03-25\",\n    source: \"https://www.worldstagegroup.com/covid-19-dana-airlines-suspends-flight-for-14-days/\",\n    airline: \"Dana Air\"\n  }],\n  BD: [{\n    info: \"Biman Bangladesh Airlines extends suspension of all international and domestic flights until 15 May amid COVID-19 pandemic\",\n    updated_at: \"2020-04-29\",\n    source: \"https://www.newagebd.net/article/104248/biman-not-to-fly-till-apr-30\",\n    airline: \"Biman Bangladesh\"\n  }, {\n    info: \"Biman Bangladesh Airlines suspends flights to London and Manchester for seven days starting from 30 March \",\n    updated_at: \"2020-03-27\",\n    source: \"https://www.dhakatribune.com/bangladesh/2020/03/27/biman-to-suspend-uk-flights-from-april-1\",\n    airline: \"Biman Bangladesh\"\n  }, {\n    info: \"US-Bangla Airlines reduces Guangzhou service\",\n    updated_at: \"2020-03-05\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290632/us-bangla-airlines-reduces-guangzhou-service-/\",\n    airline: \"US Bangla\"\n  }],\n  SE: [{\n    info: \"BRA cancels all flights between 6 April and 31 May \",\n    updated_at: \"2020-04-01\",\n    source: \"https://nationalpost.com/pmn/health-pmn/swedish-airline-bra-cancels-all-flights-april-6-may-31\",\n    airline: \"BRA\"\n  }, {\n    info: \"SAS week of 29MAR20 European operations as of 29MAR20\",\n    updated_at: \"2020-03-30\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290550/sas-week-of-29mar20-european-operations-as-of-29mar20/\",\n    airline: \"SAS (Sweden)\"\n  }],\n  CV: [{\n    info: \"Cabo Verde Airlines suspends all operations for at least 30 days\",\n    updated_at: \"2020-03-18\",\n    source: \"https://worldairlinenews.com/2020/03/17/cabo-verde-airlines-suspends-all-operations-for-at-least-30-days/\",\n    airline: \"Cabo Verde Airlines\"\n  }],\n  ZA: [{\n    info: \"South Africa\\u2019s Comair files for business rescue\",\n    updated_at: \"2020-05-05\",\n    source: \"https://www.flightglobal.com/airlines/south-africas-comair-files-for-business-rescue/138231.article\\r\",\n    airline: \"Comair\"\n  }, {\n    info: \"Comair expects to remain grounded until at least October \",\n    updated_at: \"2020-04-30\",\n    source: \"https://www.flightglobal.com/airlines/comair-expects-to-remain-grounded-until-at-least-october/138163.article\",\n    airline: \"Comair\"\n  }, {\n    info: \"South African Airways to suspend all domestic flights from 27 March until 16 April \",\n    updated_at: \"2020-03-24\",\n    source: \"https://www.reuters.com/article/health-coronavirus-safrica-saa/south-african-airways-to-suspend-all-domestic-flights-as-country-braces-for-lockdown-idUSL8N2BH8FL\",\n    airline: \"SAA\"\n  }, {\n    info: \"South African Airways suspends all international and regional flights\",\n    updated_at: \"2020-03-21\",\n    source: \"https://worldairlinenews.com/2020/03/21/south-african-airways-suspends-all-international-and-regional-flights/\",\n    airline: \"SAA\"\n  }, {\n    info: \"SA Express to suspend operations from 18 March because of financial issues, spread of COVID-19\",\n    updated_at: \"2020-03-18\",\n    source: \"Reuters\",\n    airline: \"SA Express\"\n  }],\n  NP: [{\n    info: \"Himalaya Airlines temporarily suspends all flights because of COVID-19\",\n    updated_at: \"2020-03-21\",\n    source: \"https://thehimalayantimes.com/business/himalaya-airlines-announces-suspension-of-all-flights/ \",\n    airline: \"Himalaya Airlines \"\n  }],\n  GY: [{\n    info: \"LIAT suspends flights until 15 May because of COVID-19 \",\n    updated_at: \"2020-04-20\",\n    source: \"https://www.nationnews.com/nationnews/news/245082/liat-passenger-flights-suspended\",\n    airline: \"Liat\"\n  }],\n  PH: [{\n    info: \"AirAsia cancels flights until 31 May amid COVID-19 outbreak\",\n    updated_at: \"2020-05-13\",\n    source: \"https://newsroom.airasia.com/news/2020/3/13/updated-as-of-13-march-2020-travel-advisory-airasia-cancels-domestic-flights-from-manila-as-ph-government-implements-new-travel-restrictions\",\n    airline: \"Philippine AirAsia\"\n  }, {\n    info: \"Philippine Airlines announces all domestic flights to, from hubs in Manila, Cebu and Clark will remain suspended until 31 May \",\n    updated_at: \"2020-05-13\",\n    source: \"https://news.mb.com.ph/2020/05/13/pal-suspends-domestic-flights-to-and-from-manila-cebu-clark-until-may-31/\",\n    airline: \"Philippine Airlines\"\n  }],\n  MA: [{\n    info: \"Royal Air Maroc suspends international flights (and domestic flights, Reuters 21.03.2020)\",\n    updated_at: \"2020-02-20\",\n    source: \"https://worldairlinenews.com/2020/03/20/royal-air-maroc-suspends-international-flights/\",\n    airline: \"Royal Air Maroc\"\n  }],\n  JO: [{\n    info: \"Royal Jordanian extends passenger service suspension to 13APR20\",\n    updated_at: \"2020-03-26\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290508/royal-jordanian-extends-passenger-service-suspension-to-13apr20/?highlight=Royal%20Jordanian\",\n    airline: \"Royal Jordanian\"\n  }],\n  RW: [{\n    info: \" Extends the temporary suspension of passenger flights until May 15th, 2020 when further updates will be provided.\",\n    updated_at: \"2020-05-08\",\n    source: \"https://www.rwandair.com/media-center/news-press-releases/rwandair-to-extend-the-temporary-suspension-of-passenger-flights-2/\",\n    airline: \"Rwandair\"\n  }],\n  WS: [{\n    info: \"Flights between Samoa, Australia suspended until further notice because of COVID-19; flights between Apia, Auckland restricted\",\n    updated_at: \"2020-03-21\",\n    source: \"https://www.stuff.co.nz/national/health/coronavirus/120472548/coronavirus-samoa-suspends-all-flights-from-australia\",\n    airline: \"Samoa Airways\"\n  }],\n  AO: [{\n    info: \"TAAG 15-day scheduled service suspension from 20MAR20\",\n    updated_at: \"2020-03-27\",\n    source: \"https://www.routesonline.com/news/38/airlineroute/290513/taag-15-day-scheduled-service-suspension-from-20mar20/\",\n    airline: \"TAAG\"\n  }],\n  UG: [{\n    info: \"Uganda Airlines suspends flights to Kilimanjaro, Mogadishu, Mombasa and Zanzibar because of COVID-19 \",\n    updated_at: \"2020-03-19\",\n    source: \"https://thetowerpost.com/2020/03/19/uganda-airlines-suspends-flights-to-mombasa-zanzibar-and-mozambique/\",\n    airline: \"Uganda Airlines\"\n  }]\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/airlineInfo.js\n");

/***/ }),

/***/ "./data/countries.js":
/*!***************************!*\
  !*** ./data/countries.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  \"*\": {\n    name: \"Anywhere\",\n    flag: \"🏳\"\n  },\n  AC: {\n    code: \"AC\",\n    name: \"Ascension Island\",\n    flag: \"🇦🇨\"\n  },\n  AD: {\n    code: \"AD\",\n    name: \"Andorra\",\n    flag: \"🇦🇩\"\n  },\n  AE: {\n    code: \"AE\",\n    name: \"United Arab Emirates\",\n    flag: \"🇦🇪\"\n  },\n  AF: {\n    code: \"AF\",\n    name: \"Afghanistan\",\n    flag: \"🇦🇫\"\n  },\n  AG: {\n    code: \"AG\",\n    name: \"Antigua & Barbuda\",\n    flag: \"🇦🇬\"\n  },\n  AI: {\n    code: \"AI\",\n    name: \"Anguilla\",\n    flag: \"🇦🇮\"\n  },\n  AL: {\n    code: \"AL\",\n    name: \"Albania\",\n    flag: \"🇦🇱\"\n  },\n  AM: {\n    code: \"AM\",\n    name: \"Armenia\",\n    flag: \"🇦🇲\"\n  },\n  AO: {\n    code: \"AO\",\n    name: \"Angola\",\n    flag: \"🇦🇴\"\n  },\n  AQ: {\n    code: \"AQ\",\n    name: \"Antarctica\",\n    flag: \"🇦🇶\"\n  },\n  AR: {\n    code: \"AR\",\n    name: \"Argentina\",\n    flag: \"🇦🇷\"\n  },\n  AS: {\n    code: \"AS\",\n    name: \"American Samoa\",\n    flag: \"🇦🇸\"\n  },\n  AT: {\n    code: \"AT\",\n    name: \"Austria\",\n    flag: \"🇦🇹\"\n  },\n  AU: {\n    code: \"AU\",\n    name: \"Australia\",\n    flag: \"🇦🇺\"\n  },\n  AW: {\n    code: \"AW\",\n    name: \"Aruba\",\n    flag: \"🇦🇼\"\n  },\n  AX: {\n    code: \"AX\",\n    name: \"Åland Islands\",\n    flag: \"🇦🇽\"\n  },\n  AZ: {\n    code: \"AZ\",\n    name: \"Azerbaijan\",\n    flag: \"🇦🇿\"\n  },\n  BA: {\n    code: \"BA\",\n    name: \"Bosnia & Herzegovina\",\n    flag: \"🇧🇦\"\n  },\n  BB: {\n    code: \"BB\",\n    name: \"Barbados\",\n    flag: \"🇧🇧\"\n  },\n  BD: {\n    code: \"BD\",\n    name: \"Bangladesh\",\n    flag: \"🇧🇩\"\n  },\n  BE: {\n    code: \"BE\",\n    name: \"Belgium\",\n    flag: \"🇧🇪\"\n  },\n  BF: {\n    code: \"BF\",\n    name: \"Burkina Faso\",\n    flag: \"🇧🇫\"\n  },\n  BG: {\n    code: \"BG\",\n    name: \"Bulgaria\",\n    flag: \"🇧🇬\"\n  },\n  BH: {\n    code: \"BH\",\n    name: \"Bahrain\",\n    flag: \"🇧🇭\"\n  },\n  BI: {\n    code: \"BI\",\n    name: \"Burundi\",\n    flag: \"🇧🇮\"\n  },\n  BJ: {\n    code: \"BJ\",\n    name: \"Benin\",\n    flag: \"🇧🇯\"\n  },\n  BL: {\n    code: \"BL\",\n    name: \"St. Barthélemy\",\n    flag: \"🇧🇱\"\n  },\n  BM: {\n    code: \"BM\",\n    name: \"Bermuda\",\n    flag: \"🇧🇲\"\n  },\n  BN: {\n    code: \"BN\",\n    name: \"Brunei\",\n    flag: \"🇧🇳\"\n  },\n  BO: {\n    code: \"BO\",\n    name: \"Bolivia\",\n    flag: \"🇧🇴\"\n  },\n  BQ: {\n    code: \"BQ\",\n    name: \"Caribbean Netherlands\",\n    flag: \"🇧🇶\"\n  },\n  BR: {\n    code: \"BR\",\n    name: \"Brazil\",\n    flag: \"🇧🇷\"\n  },\n  BS: {\n    code: \"BS\",\n    name: \"Bahamas\",\n    flag: \"🇧🇸\"\n  },\n  BT: {\n    code: \"BT\",\n    name: \"Bhutan\",\n    flag: \"🇧🇹\"\n  },\n  BV: {\n    code: \"BV\",\n    name: \"Bouvet Island\",\n    flag: \"🇧🇻\"\n  },\n  BW: {\n    code: \"BW\",\n    name: \"Botswana\",\n    flag: \"🇧🇼\"\n  },\n  BY: {\n    code: \"BY\",\n    name: \"Belarus\",\n    flag: \"🇧🇾\"\n  },\n  BZ: {\n    code: \"BZ\",\n    name: \"Belize\",\n    flag: \"🇧🇿\"\n  },\n  CA: {\n    code: \"CA\",\n    name: \"Canada\",\n    flag: \"🇨🇦\"\n  },\n  CC: {\n    code: \"CC\",\n    name: \"Cocos (Keeling) Islands\",\n    flag: \"🇨🇨\"\n  },\n  CD: {\n    code: \"CD\",\n    name: \"Congo - Kinshasa\",\n    flag: \"🇨🇩\"\n  },\n  CF: {\n    code: \"CF\",\n    name: \"Central African Republic\",\n    flag: \"🇨🇫\"\n  },\n  CG: {\n    code: \"CG\",\n    name: \"Congo - Brazzaville\",\n    flag: \"🇨🇬\"\n  },\n  CH: {\n    code: \"CH\",\n    name: \"Switzerland\",\n    flag: \"🇨🇭\"\n  },\n  CI: {\n    code: \"CI\",\n    name: \"Côte d’Ivoire\",\n    flag: \"🇨🇮\"\n  },\n  CK: {\n    code: \"CK\",\n    name: \"Cook Islands\",\n    flag: \"🇨🇰\"\n  },\n  CL: {\n    code: \"CL\",\n    name: \"Chile\",\n    flag: \"🇨🇱\"\n  },\n  CM: {\n    code: \"CM\",\n    name: \"Cameroon\",\n    flag: \"🇨🇲\"\n  },\n  CN: {\n    code: \"CN\",\n    name: \"China\",\n    flag: \"🇨🇳\"\n  },\n  CO: {\n    code: \"CO\",\n    name: \"Colombia\",\n    flag: \"🇨🇴\"\n  },\n  CP: {\n    code: \"CP\",\n    name: \"Clipperton Island\",\n    flag: \"🇨🇵\"\n  },\n  CR: {\n    code: \"CR\",\n    name: \"Costa Rica\",\n    flag: \"🇨🇷\"\n  },\n  CU: {\n    code: \"CU\",\n    name: \"Cuba\",\n    flag: \"🇨🇺\"\n  },\n  CV: {\n    code: \"CV\",\n    name: \"Cape Verde\",\n    flag: \"🇨🇻\"\n  },\n  CW: {\n    code: \"CW\",\n    name: \"Curaçao\",\n    flag: \"🇨🇼\"\n  },\n  CX: {\n    code: \"CX\",\n    name: \"Christmas Island\",\n    flag: \"🇨🇽\"\n  },\n  CY: {\n    code: \"CY\",\n    name: \"Cyprus\",\n    flag: \"🇨🇾\"\n  },\n  CZ: {\n    code: \"CZ\",\n    name: \"Czechia\",\n    flag: \"🇨🇿\"\n  },\n  DE: {\n    code: \"DE\",\n    name: \"Germany\",\n    flag: \"🇩🇪\"\n  },\n  DG: {\n    code: \"DG\",\n    name: \"Diego Garcia\",\n    flag: \"🇩🇬\"\n  },\n  DJ: {\n    code: \"DJ\",\n    name: \"Djibouti\",\n    flag: \"🇩🇯\"\n  },\n  DK: {\n    code: \"DK\",\n    name: \"Denmark\",\n    flag: \"🇩🇰\"\n  },\n  DM: {\n    code: \"DM\",\n    name: \"Dominica\",\n    flag: \"🇩🇲\"\n  },\n  DO: {\n    code: \"DO\",\n    name: \"Dominican Republic\",\n    flag: \"🇩🇴\"\n  },\n  DZ: {\n    code: \"DZ\",\n    name: \"Algeria\",\n    flag: \"🇩🇿\"\n  },\n  EA: {\n    code: \"EA\",\n    name: \"Ceuta & Melilla\",\n    flag: \"🇪🇦\"\n  },\n  EC: {\n    code: \"EC\",\n    name: \"Ecuador\",\n    flag: \"🇪🇨\"\n  },\n  EE: {\n    code: \"EE\",\n    name: \"Estonia\",\n    flag: \"🇪🇪\"\n  },\n  EG: {\n    code: \"EG\",\n    name: \"Egypt\",\n    flag: \"🇪🇬\"\n  },\n  EH: {\n    code: \"EH\",\n    name: \"Western Sahara\",\n    flag: \"🇪🇭\"\n  },\n  ER: {\n    code: \"ER\",\n    name: \"Eritrea\",\n    flag: \"🇪🇷\"\n  },\n  ES: {\n    code: \"ES\",\n    name: \"Spain\",\n    flag: \"🇪🇸\"\n  },\n  ET: {\n    code: \"ET\",\n    name: \"Ethiopia\",\n    flag: \"🇪🇹\"\n  },\n  EU: {\n    code: \"EU\",\n    name: \"European Union\",\n    flag: \"🇪🇺\"\n  },\n  FI: {\n    code: \"FI\",\n    name: \"Finland\",\n    flag: \"🇫🇮\"\n  },\n  FJ: {\n    code: \"FJ\",\n    name: \"Fiji\",\n    flag: \"🇫🇯\"\n  },\n  FK: {\n    code: \"FK\",\n    name: \"Falkland Islands\",\n    flag: \"🇫🇰\"\n  },\n  FM: {\n    code: \"FM\",\n    name: \"Micronesia\",\n    flag: \"🇫🇲\"\n  },\n  FO: {\n    code: \"FO\",\n    name: \"Faroe Islands\",\n    flag: \"🇫🇴\"\n  },\n  FR: {\n    code: \"FR\",\n    name: \"France\",\n    flag: \"🇫🇷\"\n  },\n  GA: {\n    code: \"GA\",\n    name: \"Gabon\",\n    flag: \"🇬🇦\"\n  },\n  GB: {\n    code: \"GB\",\n    name: \"United Kingdom\",\n    flag: \"🇬🇧\"\n  },\n  GD: {\n    code: \"GD\",\n    name: \"Grenada\",\n    flag: \"🇬🇩\"\n  },\n  GE: {\n    code: \"GE\",\n    name: \"Georgia\",\n    flag: \"🇬🇪\"\n  },\n  GF: {\n    code: \"GF\",\n    name: \"French Guiana\",\n    flag: \"🇬🇫\"\n  },\n  GG: {\n    code: \"GG\",\n    name: \"Guernsey\",\n    flag: \"🇬🇬\"\n  },\n  GH: {\n    code: \"GH\",\n    name: \"Ghana\",\n    flag: \"🇬🇭\"\n  },\n  GI: {\n    code: \"GI\",\n    name: \"Gibraltar\",\n    flag: \"🇬🇮\"\n  },\n  GL: {\n    code: \"GL\",\n    name: \"Greenland\",\n    flag: \"🇬🇱\"\n  },\n  GM: {\n    code: \"GM\",\n    name: \"Gambia\",\n    flag: \"🇬🇲\"\n  },\n  GN: {\n    code: \"GN\",\n    name: \"Guinea\",\n    flag: \"🇬🇳\"\n  },\n  GP: {\n    code: \"GP\",\n    name: \"Guadeloupe\",\n    flag: \"🇬🇵\"\n  },\n  GQ: {\n    code: \"GQ\",\n    name: \"Equatorial Guinea\",\n    flag: \"🇬🇶\"\n  },\n  GR: {\n    code: \"GR\",\n    name: \"Greece\",\n    flag: \"🇬🇷\"\n  },\n  GS: {\n    code: \"GS\",\n    name: \"South Georgia & South Sandwich Islands\",\n    flag: \"🇬🇸\"\n  },\n  GT: {\n    code: \"GT\",\n    name: \"Guatemala\",\n    flag: \"🇬🇹\"\n  },\n  GU: {\n    code: \"GU\",\n    name: \"Guam\",\n    flag: \"🇬🇺\"\n  },\n  GW: {\n    code: \"GW\",\n    name: \"Guinea-Bissau\",\n    flag: \"🇬🇼\"\n  },\n  GY: {\n    code: \"GY\",\n    name: \"Guyana\",\n    flag: \"🇬🇾\"\n  },\n  HK: {\n    code: \"HK\",\n    name: \"Hong Kong SAR China\",\n    flag: \"🇭🇰\"\n  },\n  HM: {\n    code: \"HM\",\n    name: \"Heard & McDonald Islands\",\n    flag: \"🇭🇲\"\n  },\n  HN: {\n    code: \"HN\",\n    name: \"Honduras\",\n    flag: \"🇭🇳\"\n  },\n  HR: {\n    code: \"HR\",\n    name: \"Croatia\",\n    flag: \"🇭🇷\"\n  },\n  HT: {\n    code: \"HT\",\n    name: \"Haiti\",\n    flag: \"🇭🇹\"\n  },\n  HU: {\n    code: \"HU\",\n    name: \"Hungary\",\n    flag: \"🇭🇺\"\n  },\n  IC: {\n    code: \"IC\",\n    name: \"Canary Islands\",\n    flag: \"🇮🇨\"\n  },\n  ID: {\n    code: \"ID\",\n    name: \"Indonesia\",\n    flag: \"🇮🇩\"\n  },\n  IE: {\n    code: \"IE\",\n    name: \"Ireland\",\n    flag: \"🇮🇪\"\n  },\n  IL: {\n    code: \"IL\",\n    name: \"Israel\",\n    flag: \"🇮🇱\"\n  },\n  IM: {\n    code: \"IM\",\n    name: \"Isle of Man\",\n    flag: \"🇮🇲\"\n  },\n  IN: {\n    code: \"IN\",\n    name: \"India\",\n    flag: \"🇮🇳\"\n  },\n  IO: {\n    code: \"IO\",\n    name: \"British Indian Ocean Territory\",\n    flag: \"🇮🇴\"\n  },\n  IQ: {\n    code: \"IQ\",\n    name: \"Iraq\",\n    flag: \"🇮🇶\"\n  },\n  IR: {\n    code: \"IR\",\n    name: \"Iran\",\n    flag: \"🇮🇷\"\n  },\n  IS: {\n    code: \"IS\",\n    name: \"Iceland\",\n    flag: \"🇮🇸\"\n  },\n  IT: {\n    code: \"IT\",\n    name: \"Italy\",\n    flag: \"🇮🇹\"\n  },\n  JE: {\n    code: \"JE\",\n    name: \"Jersey\",\n    flag: \"🇯🇪\"\n  },\n  JM: {\n    code: \"JM\",\n    name: \"Jamaica\",\n    flag: \"🇯🇲\"\n  },\n  JO: {\n    code: \"JO\",\n    name: \"Jordan\",\n    flag: \"🇯🇴\"\n  },\n  JP: {\n    code: \"JP\",\n    name: \"Japan\",\n    flag: \"🇯🇵\"\n  },\n  KE: {\n    code: \"KE\",\n    name: \"Kenya\",\n    flag: \"🇰🇪\"\n  },\n  KG: {\n    code: \"KG\",\n    name: \"Kyrgyzstan\",\n    flag: \"🇰🇬\"\n  },\n  KH: {\n    code: \"KH\",\n    name: \"Cambodia\",\n    flag: \"🇰🇭\"\n  },\n  KI: {\n    code: \"KI\",\n    name: \"Kiribati\",\n    flag: \"🇰🇮\"\n  },\n  KM: {\n    code: \"KM\",\n    name: \"Comoros\",\n    flag: \"🇰🇲\"\n  },\n  KN: {\n    code: \"KN\",\n    name: \"St. Kitts & Nevis\",\n    flag: \"🇰🇳\"\n  },\n  KP: {\n    code: \"KP\",\n    name: \"North Korea\",\n    flag: \"🇰🇵\"\n  },\n  KR: {\n    code: \"KR\",\n    name: \"South Korea\",\n    flag: \"🇰🇷\"\n  },\n  KW: {\n    code: \"KW\",\n    name: \"Kuwait\",\n    flag: \"🇰🇼\"\n  },\n  KY: {\n    code: \"KY\",\n    name: \"Cayman Islands\",\n    flag: \"🇰🇾\"\n  },\n  KZ: {\n    code: \"KZ\",\n    name: \"Kazakhstan\",\n    flag: \"🇰🇿\"\n  },\n  LA: {\n    code: \"LA\",\n    name: \"Laos\",\n    flag: \"🇱🇦\"\n  },\n  LB: {\n    code: \"LB\",\n    name: \"Lebanon\",\n    flag: \"🇱🇧\"\n  },\n  LC: {\n    code: \"LC\",\n    name: \"St. Lucia\",\n    flag: \"🇱🇨\"\n  },\n  LI: {\n    code: \"LI\",\n    name: \"Liechtenstein\",\n    flag: \"🇱🇮\"\n  },\n  LK: {\n    code: \"LK\",\n    name: \"Sri Lanka\",\n    flag: \"🇱🇰\"\n  },\n  LR: {\n    code: \"LR\",\n    name: \"Liberia\",\n    flag: \"🇱🇷\"\n  },\n  LS: {\n    code: \"LS\",\n    name: \"Lesotho\",\n    flag: \"🇱🇸\"\n  },\n  LT: {\n    code: \"LT\",\n    name: \"Lithuania\",\n    flag: \"🇱🇹\"\n  },\n  LU: {\n    code: \"LU\",\n    name: \"Luxembourg\",\n    flag: \"🇱🇺\"\n  },\n  LV: {\n    code: \"LV\",\n    name: \"Latvia\",\n    flag: \"🇱🇻\"\n  },\n  LY: {\n    code: \"LY\",\n    name: \"Libya\",\n    flag: \"🇱🇾\"\n  },\n  MA: {\n    code: \"MA\",\n    name: \"Morocco\",\n    flag: \"🇲🇦\"\n  },\n  MC: {\n    code: \"MC\",\n    name: \"Monaco\",\n    flag: \"🇲🇨\"\n  },\n  MD: {\n    code: \"MD\",\n    name: \"Moldova\",\n    flag: \"🇲🇩\"\n  },\n  ME: {\n    code: \"ME\",\n    name: \"Montenegro\",\n    flag: \"🇲🇪\"\n  },\n  MF: {\n    code: \"MF\",\n    name: \"St. Martin\",\n    flag: \"🇲🇫\"\n  },\n  MG: {\n    code: \"MG\",\n    name: \"Madagascar\",\n    flag: \"🇲🇬\"\n  },\n  MH: {\n    code: \"MH\",\n    name: \"Marshall Islands\",\n    flag: \"🇲🇭\"\n  },\n  MK: {\n    code: \"MK\",\n    name: \"Macedonia\",\n    flag: \"🇲🇰\"\n  },\n  ML: {\n    code: \"ML\",\n    name: \"Mali\",\n    flag: \"🇲🇱\"\n  },\n  MM: {\n    code: \"MM\",\n    name: \"Myanmar (Burma)\",\n    flag: \"🇲🇲\"\n  },\n  MN: {\n    code: \"MN\",\n    name: \"Mongolia\",\n    flag: \"🇲🇳\"\n  },\n  MO: {\n    code: \"MO\",\n    name: \"Macau SAR China\",\n    flag: \"🇲🇴\"\n  },\n  MP: {\n    code: \"MP\",\n    name: \"Northern Mariana Islands\",\n    flag: \"🇲🇵\"\n  },\n  MQ: {\n    code: \"MQ\",\n    name: \"Martinique\",\n    flag: \"🇲🇶\"\n  },\n  MR: {\n    code: \"MR\",\n    name: \"Mauritania\",\n    flag: \"🇲🇷\"\n  },\n  MS: {\n    code: \"MS\",\n    name: \"Montserrat\",\n    flag: \"🇲🇸\"\n  },\n  MT: {\n    code: \"MT\",\n    name: \"Malta\",\n    flag: \"🇲🇹\"\n  },\n  MU: {\n    code: \"MU\",\n    name: \"Mauritius\",\n    flag: \"🇲🇺\"\n  },\n  MV: {\n    code: \"MV\",\n    name: \"Maldives\",\n    flag: \"🇲🇻\"\n  },\n  MW: {\n    code: \"MW\",\n    name: \"Malawi\",\n    flag: \"🇲🇼\"\n  },\n  MX: {\n    code: \"MX\",\n    name: \"Mexico\",\n    flag: \"🇲🇽\"\n  },\n  MY: {\n    code: \"MY\",\n    name: \"Malaysia\",\n    flag: \"🇲🇾\"\n  },\n  MZ: {\n    code: \"MZ\",\n    name: \"Mozambique\",\n    flag: \"🇲🇿\"\n  },\n  NA: {\n    code: \"NA\",\n    name: \"Namibia\",\n    flag: \"🇳🇦\"\n  },\n  NC: {\n    code: \"NC\",\n    name: \"New Caledonia\",\n    flag: \"🇳🇨\"\n  },\n  NE: {\n    code: \"NE\",\n    name: \"Niger\",\n    flag: \"🇳🇪\"\n  },\n  NF: {\n    code: \"NF\",\n    name: \"Norfolk Island\",\n    flag: \"🇳🇫\"\n  },\n  NG: {\n    code: \"NG\",\n    name: \"Nigeria\",\n    flag: \"🇳🇬\"\n  },\n  NI: {\n    code: \"NI\",\n    name: \"Nicaragua\",\n    flag: \"🇳🇮\"\n  },\n  NL: {\n    code: \"NL\",\n    name: \"Netherlands\",\n    flag: \"🇳🇱\"\n  },\n  NO: {\n    code: \"NO\",\n    name: \"Norway\",\n    flag: \"🇳🇴\"\n  },\n  NP: {\n    code: \"NP\",\n    name: \"Nepal\",\n    flag: \"🇳🇵\"\n  },\n  NR: {\n    code: \"NR\",\n    name: \"Nauru\",\n    flag: \"🇳🇷\"\n  },\n  NU: {\n    code: \"NU\",\n    name: \"Niue\",\n    flag: \"🇳🇺\"\n  },\n  NZ: {\n    code: \"NZ\",\n    name: \"New Zealand\",\n    flag: \"🇳🇿\"\n  },\n  OM: {\n    code: \"OM\",\n    name: \"Oman\",\n    flag: \"🇴🇲\"\n  },\n  PA: {\n    code: \"PA\",\n    name: \"Panama\",\n    flag: \"🇵🇦\"\n  },\n  PE: {\n    code: \"PE\",\n    name: \"Peru\",\n    flag: \"🇵🇪\"\n  },\n  PF: {\n    code: \"PF\",\n    name: \"French Polynesia\",\n    flag: \"🇵🇫\"\n  },\n  PG: {\n    code: \"PG\",\n    name: \"Papua New Guinea\",\n    flag: \"🇵🇬\"\n  },\n  PH: {\n    code: \"PH\",\n    name: \"Philippines\",\n    flag: \"🇵🇭\"\n  },\n  PK: {\n    code: \"PK\",\n    name: \"Pakistan\",\n    flag: \"🇵🇰\"\n  },\n  PL: {\n    code: \"PL\",\n    name: \"Poland\",\n    flag: \"🇵🇱\"\n  },\n  PM: {\n    code: \"PM\",\n    name: \"St. Pierre & Miquelon\",\n    flag: \"🇵🇲\"\n  },\n  PN: {\n    code: \"PN\",\n    name: \"Pitcairn Islands\",\n    flag: \"🇵🇳\"\n  },\n  PR: {\n    code: \"PR\",\n    name: \"Puerto Rico\",\n    flag: \"🇵🇷\"\n  },\n  PS: {\n    code: \"PS\",\n    name: \"Palestinian Territories\",\n    flag: \"🇵🇸\"\n  },\n  PT: {\n    code: \"PT\",\n    name: \"Portugal\",\n    flag: \"🇵🇹\"\n  },\n  PW: {\n    code: \"PW\",\n    name: \"Palau\",\n    flag: \"🇵🇼\"\n  },\n  PY: {\n    code: \"PY\",\n    name: \"Paraguay\",\n    flag: \"🇵🇾\"\n  },\n  QA: {\n    code: \"QA\",\n    name: \"Qatar\",\n    flag: \"🇶🇦\"\n  },\n  RE: {\n    code: \"RE\",\n    name: \"Réunion\",\n    flag: \"🇷🇪\"\n  },\n  RO: {\n    code: \"RO\",\n    name: \"Romania\",\n    flag: \"🇷🇴\"\n  },\n  RS: {\n    code: \"RS\",\n    name: \"Serbia\",\n    flag: \"🇷🇸\"\n  },\n  RU: {\n    code: \"RU\",\n    name: \"Russia\",\n    flag: \"🇷🇺\"\n  },\n  RW: {\n    code: \"RW\",\n    name: \"Rwanda\",\n    flag: \"🇷🇼\"\n  },\n  SA: {\n    code: \"SA\",\n    name: \"Saudi Arabia\",\n    flag: \"🇸🇦\"\n  },\n  SB: {\n    code: \"SB\",\n    name: \"Solomon Islands\",\n    flag: \"🇸🇧\"\n  },\n  SC: {\n    code: \"SC\",\n    name: \"Seychelles\",\n    flag: \"🇸🇨\"\n  },\n  SD: {\n    code: \"SD\",\n    name: \"Sudan\",\n    flag: \"🇸🇩\"\n  },\n  SE: {\n    code: \"SE\",\n    name: \"Sweden\",\n    flag: \"🇸🇪\"\n  },\n  SG: {\n    code: \"SG\",\n    name: \"Singapore\",\n    flag: \"🇸🇬\"\n  },\n  SH: {\n    code: \"SH\",\n    name: \"St. Helena\",\n    flag: \"🇸🇭\"\n  },\n  SI: {\n    code: \"SI\",\n    name: \"Slovenia\",\n    flag: \"🇸🇮\"\n  },\n  SJ: {\n    code: \"SJ\",\n    name: \"Svalbard & Jan Mayen\",\n    flag: \"🇸🇯\"\n  },\n  SK: {\n    code: \"SK\",\n    name: \"Slovakia\",\n    flag: \"🇸🇰\"\n  },\n  SL: {\n    code: \"SL\",\n    name: \"Sierra Leone\",\n    flag: \"🇸🇱\"\n  },\n  SM: {\n    code: \"SM\",\n    name: \"San Marino\",\n    flag: \"🇸🇲\"\n  },\n  SN: {\n    code: \"SN\",\n    name: \"Senegal\",\n    flag: \"🇸🇳\"\n  },\n  SO: {\n    code: \"SO\",\n    name: \"Somalia\",\n    flag: \"🇸🇴\"\n  },\n  SR: {\n    code: \"SR\",\n    name: \"Suriname\",\n    flag: \"🇸🇷\"\n  },\n  SS: {\n    code: \"SS\",\n    name: \"South Sudan\",\n    flag: \"🇸🇸\"\n  },\n  ST: {\n    code: \"ST\",\n    name: \"São Tomé & Príncipe\",\n    flag: \"🇸🇹\"\n  },\n  SV: {\n    code: \"SV\",\n    name: \"El Salvador\",\n    flag: \"🇸🇻\"\n  },\n  SX: {\n    code: \"SX\",\n    name: \"Sint Maarten\",\n    flag: \"🇸🇽\"\n  },\n  SY: {\n    code: \"SY\",\n    name: \"Syria\",\n    flag: \"🇸🇾\"\n  },\n  SZ: {\n    code: \"SZ\",\n    name: \"Swaziland\",\n    flag: \"🇸🇿\"\n  },\n  TA: {\n    code: \"TA\",\n    name: \"Tristan da Cunha\",\n    flag: \"🇹🇦\"\n  },\n  TC: {\n    code: \"TC\",\n    name: \"Turks & Caicos Islands\",\n    flag: \"🇹🇨\"\n  },\n  TD: {\n    code: \"TD\",\n    name: \"Chad\",\n    flag: \"🇹🇩\"\n  },\n  TF: {\n    code: \"TF\",\n    name: \"French Southern Territories\",\n    flag: \"🇹🇫\"\n  },\n  TG: {\n    code: \"TG\",\n    name: \"Togo\",\n    flag: \"🇹🇬\"\n  },\n  TH: {\n    code: \"TH\",\n    name: \"Thailand\",\n    flag: \"🇹🇭\"\n  },\n  TJ: {\n    code: \"TJ\",\n    name: \"Tajikistan\",\n    flag: \"🇹🇯\"\n  },\n  TK: {\n    code: \"TK\",\n    name: \"Tokelau\",\n    flag: \"🇹🇰\"\n  },\n  TL: {\n    code: \"TL\",\n    name: \"Timor-Leste\",\n    flag: \"🇹🇱\"\n  },\n  TM: {\n    code: \"TM\",\n    name: \"Turkmenistan\",\n    flag: \"🇹🇲\"\n  },\n  TN: {\n    code: \"TN\",\n    name: \"Tunisia\",\n    flag: \"🇹🇳\"\n  },\n  TO: {\n    code: \"TO\",\n    name: \"Tonga\",\n    flag: \"🇹🇴\"\n  },\n  TR: {\n    code: \"TR\",\n    name: \"Turkey\",\n    flag: \"🇹🇷\"\n  },\n  TT: {\n    code: \"TT\",\n    name: \"Trinidad & Tobago\",\n    flag: \"🇹🇹\"\n  },\n  TV: {\n    code: \"TV\",\n    name: \"Tuvalu\",\n    flag: \"🇹🇻\"\n  },\n  TW: {\n    code: \"TW\",\n    name: \"Taiwan\",\n    flag: \"🇹🇼\"\n  },\n  TZ: {\n    code: \"TZ\",\n    name: \"Tanzania\",\n    flag: \"🇹🇿\"\n  },\n  UA: {\n    code: \"UA\",\n    name: \"Ukraine\",\n    flag: \"🇺🇦\"\n  },\n  UG: {\n    code: \"UG\",\n    name: \"Uganda\",\n    flag: \"🇺🇬\"\n  },\n  UM: {\n    code: \"UM\",\n    name: \"U.S. Outlying Islands\",\n    flag: \"🇺🇲\"\n  },\n  US: {\n    code: \"US\",\n    name: \"United States\",\n    flag: \"🇺🇸\"\n  },\n  UY: {\n    code: \"UY\",\n    name: \"Uruguay\",\n    flag: \"🇺🇾\"\n  },\n  UZ: {\n    code: \"UZ\",\n    name: \"Uzbekistan\",\n    flag: \"🇺🇿\"\n  },\n  VA: {\n    code: \"VA\",\n    name: \"Vatican City\",\n    flag: \"🇻🇦\"\n  },\n  VC: {\n    code: \"VC\",\n    name: \"St. Vincent & Grenadines\",\n    flag: \"🇻🇨\"\n  },\n  VE: {\n    code: \"VE\",\n    name: \"Venezuela\",\n    flag: \"🇻🇪\"\n  },\n  VG: {\n    code: \"VG\",\n    name: \"British Virgin Islands\",\n    flag: \"🇻🇬\"\n  },\n  VI: {\n    code: \"VI\",\n    name: \"U.S. Virgin Islands\",\n    flag: \"🇻🇮\"\n  },\n  VN: {\n    code: \"VN\",\n    name: \"Vietnam\",\n    flag: \"🇻🇳\"\n  },\n  VU: {\n    code: \"VU\",\n    name: \"Vanuatu\",\n    flag: \"🇻🇺\"\n  },\n  WF: {\n    code: \"WF\",\n    name: \"Wallis & Futuna\",\n    flag: \"🇼🇫\"\n  },\n  WS: {\n    code: \"WS\",\n    name: \"Samoa\",\n    flag: \"🇼🇸\"\n  },\n  XK: {\n    code: \"XK\",\n    name: \"Kosovo\",\n    flag: \"🇽🇰\"\n  },\n  YE: {\n    code: \"YE\",\n    name: \"Yemen\",\n    flag: \"🇾🇪\"\n  },\n  YT: {\n    code: \"YT\",\n    name: \"Mayotte\",\n    flag: \"🇾🇹\"\n  },\n  ZA: {\n    code: \"ZA\",\n    name: \"South Africa\",\n    flag: \"🇿🇦\"\n  },\n  ZM: {\n    code: \"ZM\",\n    name: \"Zambia\",\n    flag: \"🇿🇲\"\n  },\n  ZW: {\n    code: \"ZW\",\n    name: \"Zimbabwe\",\n    flag: \"🇿🇼\"\n  }\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/countries.js\n");

/***/ }),

/***/ "./data/countryInfo.js":
/*!*****************************!*\
  !*** ./data/countryInfo.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony default export */ __webpack_exports__[\"default\"] = ({AF:{info:\"People arriving from other countries and who do not show symptoms of COVID-19 are advised to self-quarantine at home for 14 days.  If you have any symptoms, you are instructed to contact the Ministry of Public Health and seek care.\",updated_at:\"2020-05-04\",source:\"\\nhttps://af.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International Flights to Afghanistan are suspended. \\nUNHAS Ops still running. \\n- This does not apply to repatriation flights that bring back nationals of Afghanistan.\\nPassenger operations at DXB and DWC were ceased on Thursday 26 March 2020. \\n\\nInternational restrictions:\\nAll international commercial air traffic to/from the capital Kabul remains suspended until further notice.\\nBorder crossings with Iran are currently open, while the Torkham crossing with Pakistan has temporarily reopened to cargo and returning Pakistani nationals.\\nLand borders with China, Tajikistan, Turkmenistan and Uzbekistan remain closed, though some reports indicate that commercial trucks are sporadically being permitted to cross.\\n\\nInternal restrictions:\\nCountrywide lockdown order is in place until at least 24 May.\\nIndividuals are required to avoid unnecessary movement except for those working in 30 sectors including security forces, health, media, communication, banks, factories, water and food sectors (food delivery services will be permitted to continue). Restrictions in/out and within the city have been imposed as well as road closures. Kabul-Bagram highway has been closed. No more than four people are permitted to travel in vehicles. All government ministries and institutions are closed down, bar the Afghan National Security Forces (ANSF) and Ministry of Public Health. Public places are closed. Measures are not expected to greatly impact NGOs and private corporations but such outfits should observe the restrictions.\\nThe police have been deployed to ensure compliance with restrictions.\\nAll movement between Kabul and the other provinces is suspended; exceptions will be made only for food supply vehicles, medical professionals and COVID-19 patients.\"},AL:{info:\"The Government of Albania mandates a 14-day self-quarantine for all travelers who enter Albania from areas identified by the World Health Organization (WHO) as high risk for COVID-19. Additionally, those who are concerned they may have contracted COVID-19 through exposure to other vectors are also asked to self-quarantine at home and contact the Albanian government at the medical emergency phone number 127, should symptoms consistent with the virus appear.  English speaking staff are available to assist non-Albanian speakers.\\nAn official isolation and treatment site has been designated at the Infectious Disease Hospital at Mother Teresa University Hospital. The National Medical Emergency Center is responsible for the physical transfer of any patients suspected to be infected with the virus. No private hospitals are authorized to manage COVID-19 cases. There is no official information available about the length of time individuals will be held in these temporary quarantine spaces.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://al.usembassy.gov/updates_covid19/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government continues to loosen COVID-19 related restrictions (OSAC, 18.05.2020)\\n\\nInternational restrictions:\\nAll flights to and from Tirana airport are suspended, with the exception of Air Albania\\u2019s humanitarian flights to and from Istanbul.\\nAll ferries to/from Northern Italy and all red areas remain suspended.\\nAll travellers entering the country who have travelled to WHO high-risk regions for COVID-19 in the 14 days prior to arrival have been ordered to self-quarantine for 14 days. All travellers from Italy are barred entry until further notice. There are sanitary checks at all border controls (land, airports, ports).\\nAll land borders are closed except for goods transport with neighbouring countries.\\n \\nInternal restrictions:\\nThe state of emergency has been extended until 23 June.\\nBanks, construction firms, call centres, grocery shops and supermarkets, transport companies, bakeries, pharmaceutical services and textiles manufacturers remain open during the lockdown.\\nOn weekends, curfew is extended from Friday 17.30 until Monday 05.00. (LINK) Exceptions are made for healthcare workers and for the transport of food items, supplies and medicine. Only one person per household is allowed to go out to buy food or medicine at a time, for a maximum of 90 minutes; the \\u2018exit permit\\u2019 can be obtained by sending an SMS to 55155. The elderly and retirees are no longer permitted to go out.\\nRoads connecting Tirana and Durres to other parts of the country are closed and public transportation is closed between/within the two cities. Vehicles will only be permitted if individuals obtain an authorisation from traffic police; only essential workers will be allowed to do so and drive only from 05.00 until 08.00 and from 16.00 until 17.30.\\nPublic and private activities (sport, cultural activities, conferences etc) and mass gatherings in closed or open places are cancelled until further notice. Likewise, schools remain closed.\\n\\nRelaxation in restrictions\\nShopping centres, hairdressers and dentists are open and people will be allowed to travel by car without a permit from 11 May.\\nBars and restaurants are open but serve only in their outdoor spaces, respecting social distancing until 17.30 (when the night curfew starts), from 19 May.\\nMore than 600 business activities have restarted including farming, repair shops, mining, fishing, food and fish processing as well as other retailers.\\nHigh schools will open from 18 May until 5 June for graduating students. No more than 15 students per classroom.\\nNo time restriction for movement in green areas.\\nNo more permit needed to go outside in green areas.\\nNo more permit needed to go outside from 5.00 until 21.00 during the week in red areas (Durres, Kruja and Kurbin, Shkoder and Tirana).\\nMovement in and out of red zones is banned.\"},DZ:{info:\"As of March 18, 2020, Algerian authorities announced that they are quarantining known cases of confirmed COVID-19 within its borders.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://dz.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Algiers airport closed until 5 July 2020 (Qatar Airways). Government extends COVID-19 restrictions until 29 May (Reuters, 12.05.2020) \\n\\nInternational restrictions:\\nAll international flights are suspended; no date has been set yet for the resumption of operations. Despite announcements of French carrier Air France that a daily liaison with Paris would start on 11 May and opening of commercial reservations on German and Swiss carriers Lufthansa and Swiss Air from 1 June, transport minister on 9 May has confirmed that the airspace remains closed depending on the evolution of the outbreak. French embassy on 10 May announced that Air France flights will be arranged for French citizens, dual nationalities and residency permit holders (excluding visa holders).\\nAll ferries are suspended.\\nLand borders are closed.\\nRepatriation flights are permitted. Foreign governments and local diplomatic missions are expected to charter special flights as well Algerian authorities for their citizens.\\nUpon arrival, repatriated Algerian nationals will be subject to a 14-day quarantine in dedicated facilities.\\n\\nInternal restrictions:\\nOn the occasion of Eid al-Fitr days, 23-24 May, ending of Ramadan celebrations, national authorities have reinforced the partial lockdown curfew from 13.00 to 07.00. In addition, circulation of vehicles and motorcycles will be prohibited.\\nThere is a partial lockdown in Algiers, Ain Defla, Bejaia, Medea, Oran, Setif, Tipaza, Tizi Ouzou and Tlemcen provinces: the curfew is in operation from 17.00 to 07.00.\\nA full lockdown In Blida has been lifted, but a curfew remains in place from 14.00 to 07.00.\\nIn all other provinces there is a curfew in place from 19.00 to 07.00 at least until 29 May.\\nAll gatherings of more than two people remain prohibited.\\nInternal travel restrictions have been extended until 29 May. This includes the suspension of domestic flights, rail links and other types of public transport, with the exception of urban taxis that were allowed to resume operations on 25 April under strict sanitary rules including a maximum of two passengers per ride, compulsory wearing of masks for both driver and clients and ongoing vehicle and personal disinfection.\\nOn 10 May it was announced that all education facilities and courses are suspended until at least September 2020.\\nRestaurants and cafes remain closed until further notice.\\n\\nRelaxation in restrictions\\nA number of businesses have been allowed to reopen, including pastry shops, fashion stores, household items and home appliances stores, cosmetics stores, furniture as well as bookstores and hardware stores from 24 April. Nevertheless, the majority of these businesses in 11 provinces were closed again from 3 May due to members of the public and shop owners not adhering to social-distancing rules and other preventive measures as requested by the government.\\nFacemasks are compulsory within any commercial establishment in Algiers and Constantine provinces. In Constantine province, facemasks are compulsory for customers in shops as well as in administration buildings, while in Algiers province facemasks have to be worn only by employees.\"},AS:{info:null,updated_at:\"2020-05-12\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Government extends COVID-19 restrictions until 29 May. (Reuters, 12.05.2020) \\n\\nEffective 27 March, all travellers will be required to present a health clearance, from a verifiable physician with a negative result for COVID-19.\\n\\n1.Nationals of the USA and residents of Samoa (American) who transited or have been in Arizona, California, Florida, Georgia, Hawaii, Illinois, Massachusetts, New Hampshire, New York, North Carolina, Oregon, Rhode Island, Texas, Washington or Wisconsin, are subject to Public Health screening and might be medically or home quarantined.\\n2.Entry Permits, issued by Samoa (American) instead of visas, are suspended. \\n- This does not apply to residents of Samoa (American) with residence permit or an Immigration Board approval. \\n3.Passengers arriving from Samoa must: \\n- obtain a health clearance from Ministry of Health (MOH) 3 days prior to arrival; \\n- present a completed \\u201CDOT Travel Declaration Form\\\" upon arrival. \\n4.Passengers who transited or have been in countries affected by Coronavirus (COVI-19), when arriving from Hawaii, must:\\n-spend 14 days in Hawaii; and \\n-obtain a health clearance 3 days before arrival in Samoa (American); and\\n-present a completed \\u201CDOT Travel Declaration Form\\\" upon arrival; and\\n-provide itinerary upon arrival. \\nHealth screening measures at Pago Pago International Airport will be tightened. \\n\\nInternal restrictions: \\nThe state of emergency has been extended until 1 June.\\nAll public gatherings are suspended until further notice. Private gatherings with more than 10 people are also prohibited. Any vehicle operating with more than five passengers is prohibited.\\nAnyone over the age of 60 years old must stay home unless getting essential items.\\n16.00 to 6.00 daily curfew is in place.\\nAll non-essential businesses are closed; supermarkets will only be allowed to operate from 06.00 to 18.00.\\n\\n\"},AD:{info:null,updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"IATA: Apply the relevant Coronavirus (COVID-19) regulations of France or Spain, whichever must be transited to reach Andorra.\\n\\nInternational restrictions: The border with France remains open for departing French citizens and residents.\\n\\nInternal restrictions: Social distancing and staying at home is recommended. People must keep a four-metre distance from others when they go out. Wearing a face mask is also mandatory. People are encouraged to walk on the right-hand side. All shops except those selling essentials such as foodstuffs, medicine and fuel are closed. People living in even-numbered homes can go out on even dates, while those who reside in odd-numbered homes go out on all other days. (Houses without a number will go out on even dates if the name of the occupants begins with A-M, and odd days if it starts with N-Z).\\nPhysical exercise (running) is authorised from 06.00-09.00 or from 19.00-21.00. Shopping is authorised from 09:00-11:00 and from 14:00-19:00. The slot between 11:00 and 14:00 is reserved for elderly and vulnerable people.\\n\\nRelaxation of restrictions: Andorra began a phased program of derestriction on 17 April. An announcement on the beginning of the third phase of derestriction is expected by 19 May.\"},AO:{info:\"The Government of Angola has set up two quarantine sites just outside of the capital city of Luanda. Prior to the suspension of air travel on March 20, 2020, any person of any nationality who arrived in Angola with symptoms or who had traveled to China, South Korea, Iran, Italy, Portugal, Spain, or France since the start of the outbreak was not allowed to enter the country before a mandatory 14-day quarantine period has passed.  Travelers who did not wish to undergo quarantine were given the option to leave Angola and travel to their home country or to a country of their choice.\",updated_at:\"2020-05-10\",source:\"https://africa.cgtn.com/2020/03/19/angola-to-suspend-international-flights-circulation-at-land-borders/ \\nhttps://ao.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"State of emergency extended until 25 May (EIN News, 11.05.2020)\\nInternational restrictions: \\nOn 25 April, the state of emergency was extended for 15 additional days until 10 May. \\n1. Passengers who have been in China (People's Rep.), France, Iran, Italy, Korea (Rep.), Portugal or Spain are not allowed to enter Angola.\\n- This does not apply to nationals and residents of Angola.\\n2. Airline crew, nationals and residents of Angola who arrive from or have been in China (People's Rep.), France, Iran, Italy, Korea (Rep.), Portugal or Spain will be put in quarantine.\\n3. A completed sanitary control sheet must be presented to the Ministry of Health upon arrival.\\nAll work, residence, and temporary visas are automatically extended until 30 May. All tourism, short-term, and border visas are automatically extended to 15 May.\\n\\nAll sea and land borders are closed. \\n\\nInternal restrictions:\\nThe state of emergency has been extended until 25 May.\\nAccess into and out of the capital Luanda remains prohibited.\\nThe ban on inter-province movement has been relaxed for commercial purposes; inter-province travel for leisure remains banned.\\nAll sea and land borders are closed.\\n\\n\"},AI:{info:\"Travellers to self-isolate for 14 day. The Health Authority of Anguilla are asking the public to call the COVID-19 inquiries hotline on + 1 264 476 7627 if they suspect they might have contracted the coronavirus. \\nAll persons arriving in Anguilla who have travelled outside of the Caribbean Region within the last 14 days will be quarantined for 14 days on their arrival. A judgement will be made on arrival by health professionals if this can be self-quarantine or in a government run health facility.\",updated_at:\"2020-05-04\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bb.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Air and seaports are closed for all passenger movements until further notice.\\nAll passengers arriving from outside the Caribbean will be quarantined for 14 days upon arrival.\\nHealthcare professional will decide if self-quarantine or in medical facility\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nConditions and internal restrictions:\\nOn 29 April, most restrictions were lifted, however the government announced that from 30 April - 31 May, there are new temporary restrictions placed on public gatherings.\\nDuring this time period, gatherings of 25 people or more are prohibited in both public and private places.\\nBeach gatherings, recreational and professional sport events, and social or club gatherings are not allowed. However, the following are exempt from this rule: Work and company meetings, Church gatherings, and persons attending schools.\\nNon-essential businesses are permitted to reopen, however, people must still maintain a distance of 3 ft and establishments must have markings on the ground to control the social distance regulations.\\nViolations of these rules will result in fines or imprisonment.\\n\\n\\n\"},AG:{info:null,updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bb.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"The V.C. Bird International Airport will open to commercial traffic on June 1, 2020. (OSAC, 18.05.2020) \\n\\nInbound restrictions:\\nPassengers and crew who have been in Canada, China, Europe, Japan, Singapore or South Korea in the past 28 days are not allowed to enter. This does not apply to nationals and resident diplomats. Flights to A&B are suspended. VC Bird International Airport is closed to all incoming commercial traffic until June. All maritime ports are closed other than to emergency and cargo vessels, and the ferry operating between Antigua and Barbuda until 12 June.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country. US citizens who are attempting to return to the US from the Eastern Caribbean and need assistance should complete the provided form for each person wishing to return to the US.\\n\\nConditions and internal restrictions:\\nAll parties and similar social gatherings are banned. A 24 hour curfew is in effect until at least 12 June. No movement between 21.00 and 05.00. Only essential movement is permitted between those hours. A state of emergency is in place until 12 June. All occupants of private vehicles must wear masks.\\nPersons are permitted to exercise (cycle, jog, run and/or walk) in a field or on the public roads, from 05.00 to 21.00 each day. Several non-essential businesses are allowed to operate from 05.00 to 21.00 under strict guidelines and ensuring social distancing protocols. Masks are required to be worn in public.\\nIt\\u2019s prohibited to wear dark glasses and head covering when entering any business. Failure to head regulations can result in fines or imprisonment.\"},AR:{info:\"Any foreigner or resident who arrived in Argentina in the last 14 days from a country of active transmission must self-isolate and follow the required health measures. Anyone who does not follow the mandatory quarantine and the health measures may be subject to criminal penalties. The Argentine Ministry of Health has defined these areas as the United States, China, South Korea, Iran, Japan, Great Britain and Northern Ireland, Europe, Chile, and Brazil. The traveler may have to bear any costs associated with the 14-day quarantine period.\\nIn addition, provincial authorities are introducing additional quarantine measures and travel restrictions with little prior notice. Please check the website of your province\\u2019s Ministry of Health for more details.\",updated_at:\"25405.202\",source:\"https://www.iata.org/contentassets/a3a5dce2606842b09b0a3d99cede1260/argentina-ncov-measures.pdf \\nhttps://ar.usembassy.gov/covid-19/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Buenos Aires Ezeiza Airport closed until 25 May 2020 (Qatar Airways).\\n\\nBuenos Aires COVID-19 quarantine extended to 24 May while restrictions relax across country (Reuters, 08.05.2020)\\n\\n1. Passengers are not allowed to enter Argentina.\\n- This does not apply to nationals and residents of Argentina.\\n2. Airlines must send airline crew and passenger's information to ANAC 12 hours before departure. This information must contain passenger list with travel document numbers, phone number and address where each person declares that they will comply with the mandatory quarantine upon arrival.\\n\\nInbound restrictions: Borders are closed to all arrivals except Argentine nationals or residents until 24 May. Those arriving are required to self-isolate for a period of 14 days. All domestic and international flights have been suspended until 1 September. \\n\\nOutbound restrictions: There are currently no known restrictions on individuals seeking to depart the country, however, flights have been severely limited. The borders remain open for departures. However, all scheduled international flights have been suspended, although the government is permitting a limited number of exceptional international flights.\\n\\nConditions and internal restrictions: Long-distance trains and buses are suspended until 24 May. In the capital, Buenos Aires, public transportation will continue with limited operations. The country is on lockdown until 24 May. Citizens are only permitted to leave their residences for essential purposes. This is being enforced by police and security personnel. Criminal prosecution for those who do not comply. Schools, public service offices, restaurants and recreational businesses have closed. Outdoor exercises such as running and biking have been banned as people are only allowed 1,640 feet (500 metres) from their home and only for one hour a day. On 11 May, some restrictions will be lifted and selected non-essential businesses will be allowed to reopen. Details have not yet been announced. As of 4 May, the use of face masks in public spaces is mandatory nationwide. This includes while travelling by car and train. Failure to comply may result in fines up to AR$79,000 (US$1,200).\"},AM:{info:\"Individuals who have recently traveled to affected areas in other countries or who have been exposed to someone testing positive for COVID-19 may be asked to self-monitor or self-quarantine for 14 days following arrival or exposure.\\nDuring the monitoring or quarantine period, health officials may check individuals\\u2019 condition.\\nIndividuals exhibiting fever or other symptoms may be hospitalized for a further health assessment or treatment.\",updated_at:\"2020-05-15\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://am.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends state of emergency until 13 June (Xinhua, 14.05.2020) \\n\\n1. Passengers are not allowed to enter Armenia until 14 May 2020.\\n- This does not apply to nationals and residents of Armenia.\\n- This does not apply to the immediate family members of nationals of Armenia.\\n- This does not apply to diplomats and their immediate family members.\\n- This does not apply to airline crew.\\n2. Passengers who are allowed to enter Armenia are subject to a 14 day quarantine.\\n\\nAll air traffic with Russia has been suspended until further notice. Other air travel options remain severely limited. \\n\\nRestrictions have been imposed by Armenia Airways on travel to Iran: only Iranian citizens are allowed to board the Iran-bound flight while only Armenian residents and citizens are allowed to be on Armenia-bound flights.  \\n\\nInternal restrictions: \\nMost restrictions have been lifted since 4 May, including the permit system for movements. Public transport will resume operation on 18 May.\\nMost businesses are allowed to reopen except shopping centres and department stores.\\n\\n\\n\\n\\n\"},AW:{info:\"Effective March 29, the Government of Aruba has issued a \\u201Cshelter in place\\u201D order indefinitely.  People cannot leave their homes, except very limited essential functions.\\nAdditionally, a curfew is in effect from 10:00pm to 5:00am.  Violators of the curfew can be fined.\",updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions: Entry is prohibited for all travellers, including residents until at least 31 May. A reopen date is scheduled tentatively between June 15 and July 1.\\n\\nOutbound restrictions:There are currently no known restrictions on individuals seeking to depart the country. \\n\\nInternal restrictions: There is a daily curfew in place from 22.00 to 05.00, which extends to public transportation and taxis. Effective 4 May, certain non-essential shops and businesses will be allowed to reopen, however the maximum number of people allowed will be capped at 15 including employees.\"},AU:{info:\"All travelers entering Australia from overseas will be quarantined in a hotel or designated facility for 14 days.  Travelers are required to undertake their mandatory 14-day self-isolation at their port of entry.  Travelers will be transported directly to designated facilities as determined by the relevant state and territory government (for example, a hotel) after appropriate immigration, customs and enhanced health checks.\\n\\nState and local authorities are levying fines on individuals not following quarantine and self-isolation guidelines.\",updated_at:\"2020-05-12\",source:\"https://covid19.homeaffairs.gov.au/frequently-asked-questions\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://au.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government plans to lift COVID-19 restrictions by July (Fox News, 08.05.2020). Australia will keep its international borders closed for at least three to four months to protect itself from the coronavirus pandemic. (Bloomberg, 23.04.2020) \\n\\n1. Passengers are not allowed to transit or enter Australia.\\n- This does not apply to nationals of Australia.\\n- This does not apply to the immediate family members of nationals of Australia.\\n- This does not apply to permanent residents of Australia and their immediate family members.\\n- This does not apply to nationals of New Zealand residing in Australia.\\n- This does not apply to airline crew.\\n- This does not apply to diplomats accredited to Australia and currently resident in Australia, and their immediate family members.\\n- This does not apply to nationals of Fiji, Kiribati, Marshall Isl., Micronesia (Federated States), Nauru, New Zealand, Niue, Palau, Papua New Guinea, Samoa (American), Solomon Isl., Tonga, Tuvalu and Vanuatu when they are transiting through Australia to their home country.\\n- This does not apply to passengers who reside in Cook Isl., French Polynesia or New Caledonia when they are transiting through Australia to their home country.\\n2. All passengers are required to self-isolate for a period of 14 days at their first arrival location in Australia. If their duration of stay is less than 14 days, they must self-isolate for the entire duration of stay.\\n- This does not apply to airline crew with the appropriate personal protective equipment.\\n3. Airline crew who are nationals or residents of Australia must self-isolate at their place of residence (or hotel) between flights, or for 14 days, whichever is shorter.\\nAirline crew who are not nationals or residents of Australia must self-isolate in their hotel on arrival until their next flight.\\n4. All passengers will be provided with an Incoming Passenger Card (IPC) and an Isolation Declaration Card. They are subject to health screening on arrival.\\n\\nTravellers currently in Australia who are unable to return to their home country should refer to the Home Affairs website for updated regulations on visa renewal.\\n\\nNew Zealanders, citizens of Pacific Island Forum countries, Timor-Leste citizens and residents of New Caledonia or French Polynesia transiting through Australia on their way to New Zealand or a Pacific Island Forum Country do not require a transit exemption if they have booked a connecting flight to depart Australia within 72 hours of their arriving flight. The outbound connecting flight must depart from the same state or territory of Australia as the arrival flight. If the connecting flight requires the traveller to spend longer than 72 hours in Australia they are not considered to be transiting and will need to apply online to the Commissioner of the ABF for an exemption from the travel restrictions. \\n\\nInternal restrictions:  \\nA three-step plan has been announced to gradually ease restrictions. In the first stage, schools restaurants and cafes will be allowed to re-open; as well as libraries, playgrounds and community centers. Gatherings will be limited to ten people. Local and regional travel is allowed, whilst inter-state travel will remain prohibited.\\nThe second stage will allow gatherings of up to 20 people, with gyms, cinemas and amusement parks to reopen. Some inter-state travel will be allowed.\\nAt stage three, there will be a full resumption of businesses and interstate travel. Gatherings of up to 100 people will be allowed.\\nFurther details for stages two and three will be announced once the country moves through stage one. Although each state and territories will continue to exercise full autonomy of its own timeline for easing restrictions and moving through the stages, the government aims to reach stage three by July.\\nCurrently, interstate travel options remain limited. Queensland\\u2019s borders remain closed, with all but freight and essential travel to and from the state banned. Those exempt must apply for an entry pass prior to travel. Inbound Queensland residents with travel history to COVID-19 hot spots declared by the Chief Health Officer must self-quarantine for 14 days.\\nWhile several states, including South Australia, Tasmania and the Northern Territory, maintain a mandatory 14-day quarantine for domestic arrivals, the Australian Capital Territory (ACT), Victoria and New South Wales have not imposed such stringent restrictions for interstate travellers. In Western Australia, only exempt travellers are allowed to enter the state, and may be subject to quarantine orders upon arrival.\\nNew South Wales: A two-people visitation rule has been implemented to allow two adults to visit another person's home for 'care and support'. All non-essential gatherings in public are limited to a maximum of two people, with some exceptions. Non-essential businesses remain closed or restricted; establishments that are open should allow at least 43 square feet (4 sq metres) of space for each patron. Public transport remains operational, with limited services on some routes. Schools will reopen on 11 May, with students attending one day a week.\\nNorthern Territory: A three-stage roadmap has been devised to ease internal restrictions. Individuals may participate in outdoor sporting activities and religious and other public gatherings but should observe social distancing. They may also visit people who are not part of their household. Businesses will resume according to these stages. Schools have reopened.\\nQueensland: From 16 May, gatherings of up to ten people will be allowed. Restaurants and pubs will reopen. Travel within 150 kilometres (93 miles) of your region is allowed, or up to 500km (310 miles) for those residing in outback Queensland. Schools are closed until at least 22 May.\\nSouth Australia: From 11 May, restaurants, cafes, schools and universities will be allowed to reopen. However, a ban on public gatherings of more than ten people will be in place.\\nTasmania: Individuals are advised to stay at home and go out only for essential purposes. From 18 May, gatherings of up to ten people will be allowed. Some schools will reopen on 25 May. Metro Tasmania is offering free travel until 31 May. Non-essential businesses are now allowed to reopen, as are schools in north-western Tasmania.\\nVictoria: A state of emergency has been extended until 31 May, however some restrictions have been eased. From 12 May, a maximum of five visitors are allowed in one\\u2019s household. Gatherings of up to ten people are allowed, on the condition that social distancing measures are maintained. Parks and other recreation facilities have opened, while restaurants remain open for takeaway only. Public transport is operational, though schools remain closed.\\nWestern Australia continues to ban non-essential regional travel within the state. Some interstate arrivals will be required to self-isolate, unless exempted. Gathering limits have been increased to ten people. People will be able to undertake recreation activities, however, sports facilities will remain closed, and restaurants will still be restricted to takeaway and home delivery. The state government also has plans to allow indoor activities such as eating in restaurants and religious activities from 15 May. \\n\\nRelaxation to restrictions: \\nVictoria is easing some stay at home restrictions effective 11:59 p.m. on May 12. New South Wales is easing some restrictions effective Friday, May 15. (OSAC, 12.05.2020)    \\n\"},AT:{info:\"All arrivals to Azerbaijan are currently being placed in a mandatory 14-day quarantine in government-provided facilities, regardless of travel origin.\",updated_at:\"2020-05-18\",source:\"https://at.usembassy.gov/covid-19-information-february-25-2020/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\n\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAustrian border with Czech Republic, Hungary, Slovakia will reopen on 15 June  (Reuters, 16.05.2020) Austria to reopen borders with Germany, Switzerland and Liechtenstein from 15 June.\\nTravel is permitted for visiting life partners and relatives, taking care of animals as well as agricultural areas. This has to be proven by a self-certification. Border crossings with Hungary, Slovakia and Czech Republic were opened on 17 May. Only randomised spot-checks are still maintained at the borders to these six countries. \\n\\nArrival by land\\nTravellers who want to enter through an open land border must have a medical certificate to enter. The certificate should: state that the traveller is not affected by COVID-19; be dated from a maximum of four days prior to arrival; and be in English, French, German or Italian. Exemptions from the ban are: Austrian citizens, residents, people transiting through Austria without a stopover, commercial traffic and emergency vehicles. Health authorities may impose health examinations on any person entering or travelling through Austria.\\nSanitary checks are in place at borders with Czech Republic, Germany, Italy, Liechtenstein, Slovenia, and Switzerland; only limited border crossings are open. Internal land borders controls within the Schengen area with these countries will remain in place until 31 May.\\n\\nArrival by air\\nNon Schengen/EU nationals are prohibited from entering Austria by air from outside the Schengen area. The rule does not apply to diplomatic staff, employees of international organisations, their family members living in the same household and humanitarian workers. Also exempt are health and medical professionals, transit passengers, commercial transportation, seasonal workers (in the agricultural and forestry sector), family members of Austrian (and EU/EEA/CH) citizens living in the same household and holders of a D visa or residence permit issued by Austria.\\nExempt third-country nationals as well as those arriving by air from within the Schengen area will only be allowed to enter Austria upon presentation of the aforementioned medical certificate. Those without a certificate will be denied entry or be subject to mandatory quarantine. \\nAustrian/EU/EEA/CH citizens and their family members living in the same household, as well as holders of a D visa or a residence permit issued by Austria entering Austria by air from outside the Schengen area, will be subject to a 14-day home quarantine, unless their immediate departure to another country (e.g. by car or train) is ensured or they provide a medical certificate.\\n\\nTravellers arriving at Vienna airport who do not have the above medical certificate are able to conduct a molecular biological COVID-19 test and get the result in two to three hours. This will allow them to avoid facing quarantine, in the event of a business or urgent trip to the country. The test available at airport tests cost 190 euros ($209). Passengers leaving Vienna are also able to take it to demonstrate that they are virus-free at their destination.\\nFlights to/from China, France, Iran, Italy, Netherlands, Russia, South Korea, Spain, Switzerland, the UK and Ukraine have been suspended.\\nAll passenger rail services to/from Italy, Czech Republic, Slovakia, and Switzerland have been suspended until at least 22 May. Train traffic between Austria and Germany is restricted and stopped between Tirol and Germany.\\nAustrian Airlines has extended flight suspensions until 31 May.\\nWizz air has resumed limited flights from Vienna, serving 20 destinations including to Portugal, Germany, Greece and Norway. Further destinations during the month of May will include Italy and Spain should the sanitary situation allow.\\n\\nInternal restrictions:\\n.All stores are allowed to reopen, however most non-essential establishments remain closed. Restaurants, churches and cultural spaces such as museums and libraries have reopened; the number of simultaneous customers or guests has been limited, facemasks must be worn. \\nResidents are allowed to leave their homes for non-essential reasons. However, the obligation to maintain a distance of at least one metre from other people and wear a face covering in indoor public areas remains in place.\\nCafes and restaurants will reopen from 15 May with a maximum of four people at the same table.\\nGatherings of over 10 people remain prohibited.\"},AZ:{info:\"All arrivals to Azerbaijan are currently being placed in a mandatory 14-day quarantine in government-provided facilities, regardless of travel origin.\\nIn the event of suspected coronavirus symptoms, a person will be quarantined in one of three quarantine facilities for 14 days or more, or until the person is determined to be free of the coronavirus.\",updated_at:\"2020-05-17\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://az.usembassy.gov/covid-19-information-for-azerbaijan/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Baku GYD Airport closed until 31 May 2020 (Qatar Airways)\\n\\nGovernment easing some COVID-19 related restrictions (OSAC, 18.05.2020).\\n\\nInternational restrictions:\\nAll entry into and exit from the country via air and land borders is suspended until at least 31 May.\\nOnline visa application has been suspended; all applications are required to apply with corresponding embassies.\\nAll arriving passengers, including Azerbaijan citizens, are advised to self-quarantine for 14 days, those who show symptoms will be immediately evaluated and sent to quarantine facilities for up to 21 days.\\nSpecially-authorised flights may be possible with government permission.\\n\\nInternal restrictions: \\nGovernment offices, retail services, restaurants and recreational facilities in some areas will resume operations from 4 May.\\nA gradual easing of COVID-19-related internal restrictions will start on 18 May.\\nFrom 18 May, access to parks and recreation areas will be allowed. Restaurants, cafes and catering establishments will also be permitted to receive dine-in customers from 08.00 to 18.00 (local time). Museums and exhibition halls will reopen, while people aged over 65 will be allowed to leave their homes for essential purposes, subject to the observance of social distancing and the use of protective equipment.\\nWhile most public transport services, including railway operations, will remain suspended until at least 31 May, some regions are allowing permit-free inter-regional movement in private vehicles.\\nThe SMS permits system, wherein residents are required to obtain official permission to travel via a text message (SMS), will also be abolished from 18 May in the capital Baku, Ganja, Lankaran, Sumgayit cities and Absheron district. However, travel from other locations to Baku, Ganja, Lankaran, and Sumgayit cities and Absheron district remains restricted.\\nA ban on public gatherings of more than ten people remains in place countrywide.\\nIn addition, all persons undertaking movement should wear face masks and carry identity papers at all times.\\nThe authorities in the breakaway region of Nagorno-Karabakh declared a state of emergency until at least 22.00 (local time) on 22 June. Most categories of traveller will be prohibited entry into the region during the period. Exempted categories include partially recognised Republic of Artsakh (Nagorno-Karabakh) passport holders and their relatives, Nagorno-Karabakh permanent residents, as well as foreign diplomatic staff and their families..\"},BS:{info:\"Travellers to self-isolate for 14 day. Residents of the Bahamas who have been in China (People's Rep.), Europe, Iran, Italy, Korea (Rep.) or United Kingdom will be subject to immediate quarantine for a maximum of 14 days.\",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.osac.gov/Content/Report/a06ac56a-c28c-4061-9642-18631b272680\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government plans to resume commercial flights from 1 July (Jamaica Observer, 18.05.2020)\\nBahamas borders are closed.\\n- This does not apply to repatriation flights of foreign nationals from the Bahamas. \\n\\n1. Passengers are not allowed to enter the Bahamas.\\n- This does not apply to nationals of the Bahamas.\\n- This does not apply to residents of the Bahamas.\\n2. Residents of the Bahamas who have been in China (People's Rep.), Europe, Iran, Italy, Korea (Rep.) or United Kingdom will be subject to immediate quarantine for a maximum of 14 days.\\n\\nAirport and seaport operations are suspended until further notice, effectively banning all travel into the country including for those in transit. However, some international and private charters are able to operate as of 27 April.\\n\\nOutbound restrictions: \\nThere are currently no known restrictions on individuals seeking to depart the country. \\n\\nConditions and internal restrictions: \\nA state of emergency is in effect until 30 May. Curfew from 20.00 to 05.00 remains in place, during which all residents are urged to stay home. Island of Bimini will be under lockdown for two weeks from 21.00 on 18 May until 30 May, during which residents cannot leave their homes except for emergency purposes.\\n\"},BH:{info:\"All arriving passengers will be quarantined for 14 days, regardless of the outcome of a COVID-19 test.\",updated_at:\"2020-05-07\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://bh.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government eases COVID-19 restrictions (Reuters,  06.05.2020) \\nTransit flights resume through Bahrain International Airport (BAH) between London Heathrow Airport (LHR), Paris Charles de Gaulle Airport (CGD) and Frankfurt Airport (FRA) to Ninoy Aquino International Airport (MNL) in Manila, while all flights to other locations remain suspended until further notice.\\n\\nThe authorities have suspended visa-on-arrival services for all nationalities and limited entry and transit to Bahraini citizens and foreigners holding valid residency permits, with some exceptions.\\n Bahraini citizens, foreigners holding a valid residency permit, diplomats, passengers with a Prior Permission Granted Letter (PPG), military personnel, airline crew or holders of official service or UN passports are exempt from the entry restrictions.\\n All arriving passengers must declare to their airline and immigration authorities if their first port of departure was in China, Egypt, the EU, Hong Kong (China SAR), Iran, Iraq, Japan, Malaysia, Singapore, South Korea, Thailand, the UK or the US.\\n All passengers, regardless of nationality and visa status, arriving in Bahrain will undergo mandatory medical screening and will be subject to quarantine at a medical facility. Those arriving from other countries will also have to undergo enhanced medical screening and will be required to self-isolate for 14 days, regardless of the outcome.\\n Transit flights resume through Bahrain International Airport (BAH) between London Heathrow Airport (LHR), Paris Charles de Gaulle Airport (CGD) and Frankfurt Airport (FRA) to Ninoy Aquino International Airport (MNL) in Manila, while all flights to other locations remain suspended until further notice.\\n UAE-based carriers have suspended all flights to/from Bahrain.\\n The land border with Saudi Arabia remains closed.\\n   \\n Internal restrictions:\\n Internal restrictions:\\n\\nFrom 7 May 19.00 (local time), shops and industries providing goods and services will be allowed to open. Hypermarkets, supermarkets, cold stores, bakeries, pharmacies, and banks remain open and restaurants continue to provide services via take away or delivery only. The Ministry of Industry, Commerce and Tourism issued a notice clarifying what is deemed non-essential. People who break quarantine face either a minimum of three months in jail, a fine ranging from 1,000 Bahraini dinars (Dh9,767) to 10,000 dinars, or a combination of both.\\n\\nRelaxation of restrictions: \\nShops and industrial enterprises in Bahrain can open from Thursday 7 May. (Reuters, 06.05.2020) \"},BD:{info:\"If any person of Bangladesh origin possesses a \\u201Cno visa required\\u201D stamp in their passport and comes to Bangladesh without the required medical certificate mentioning that they are free of COVID-19, then they will be institutionally quarantined for 14 days.\\nIf any person of Bangladesh origin possesses a \\u201Cno visa required\\u201D stamp in their passport and comes to Bangladesh with the required medical certificate mentioning that they are COVID-19 negative, then they are required to home/self-quarantine for 14 days. \\nIf any passengers of Bangladesh origin possess a \\u201Cno visa required\\u201D stamp and come to Bangladesh with a COVID-19 negative medical certificate he/she would be home/self-quarantined for 14 days.  However, if he/she is diagnosed with any COVID-19 symptoms on arrival, he/she will be institutionally quarantined for 14 days. \\n\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://bd.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nInternational passenger flights to/from all countries, except China, are suspended until 30 May. Cargo, special flights, air ambulances, relief carrying flights and emergency landing aircrafts are outside the purview of the ban. The suspension of visa-on-arrival services has been extended further until 30 May. All foreigners arriving in Bangladesh must submit a health certificate obtained within 72 hours prior to their arrival indicating that they are COVID-19 free, in addition to a valid visa. All travellers arriving in Bangladesh are required to undergo mandatory 14-day quarantine, regardless of nationality and traveller type.\\nAll travellers with a travel history (including transits) from all European countries, with the exception of the UK, are banned from entry. This is in addition to the existing ban on travellers from India, Kuwait, Qatar and Saudi Arabia. Bangladeshi nationals are included in the ban. However, those travelling on diplomatic missions and their family members are exempted. Foreigners who are already in Bangladesh with valid visas will have the option of extending their existing visas by three months. International flights are not allowed to land at the Shah Amanat International Airport in Chittagong, until further notice.\\nForeigners are not allowed to enter via land ports. The ports are: Akhaura, Banglabandha, Benapole, Bhomra, Burimari, Darshana, Hili, Nakugaon, Roumari, Shaola and Tamabil. Bangladeshi nationals returning can home quarantine if they provide a health certificate.\\n\\nInternal restrictions:\\nDomestic flights are suspended until 30 May. Authorities have restricted movement in and out of Dhaka until further notice for everyone except those working in emergency services. Movement restrictions (both entry and exit) also remain in effect in the metropolitan areas of Barisal, Chittagong, Khulna, Mymensingh, Rajshahi, Rangpur and Sylhet divisions. The country-wide shutdown has been further extended until 30 May. The authorities have also asked people to minimise all non-essential movement from 20.00 onwards everyday, during Ramadan. The army has been deployed to assist the local government to stop non-essential movement. Ahead of Eid-ul-Fitr, the government has allowed shopping malls, grocery shops, district level-marketplaces to operate until 17.00 daily. Factory owners involved in export, pharmaceuticals and manufacturing sectors are allowed to resume operations, provided that safety of employees is maintained. Factory workers are required to show valid identification to enter premises. During the lockdown period all manufacturing industries have been allowed to resume operations from now on with safety measures in place for workers. While most forms of transportation such as intercity and commuter busses and trains and ferries have been shut down, public transport operations are expected to resume gradually, depending on the situation. All private offices remain closed until further notice. Education institutions are closed until 30 May. Meanwhile, essential public offices will resume operation in a limited capacity during the lockdown.\"},BB:{info:\"Citizens and residents of Barbados will be subject to a home-quarantine.\",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bb.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Barbados (BGI) is closed.\\n- This does not apply to Medevac flights, technical stops, and authorized flights, e.g. humanitarian aid.\\n\\nInternational restrictions:\\nA mandatory 14-day quarantine in a government facility for all persons entering Barbados. Citizens and residents of Barbados will be subject to a home-quarantine. The Government of Barbados is conducting thermal screening at airports and seaports.\\n\\nOutbound restrictions:\\nThere are currently no restrictions on outbound travel. US citizens who are attempting to return to the US from the Eastern Caribbean and need assistance should complete the provided form for each person wishing to return to the US.\\n\\nConditions and Internal restrictions: \\nSeveral non-essential businesses will reopen, including bookstores, hairdressers and religious buildings with a limit of 20 people. The government of Barbados announced a four-phased reopening approach, with the island entering Phase 3 on 18 May.\\nEffective 4 May, a nightly curfew will be in place from 20.00 until 05.00. Residents and citizens are allowed to conduct essential business two days per week according to their surname.\\nViolations are subject to fines and/or up to a year of prison. Barbados Ministry of Health has set up a 24-hour information hotline at 246536-4500.\"},BY:{info:\"Belarus instituted a mandatory 14-day self-quarantine requirement for persons entering Belarus from countries where the COVID-19 virus is actively circulating. As of April 10, this quarantine also applies to close contacts of persons who test positive for the COVID-19 virus. The quarantine requirement does not apply to travelers transporting cargo, air crew, or diplomats.\",updated_at:\"2020-05-04\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://be.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"A completed awareness questionnaire must be presented on arrival and passengers must self-isolate for 14 days.\\n- This does not apply to passengers in transit.\\n        \\nInternational restrictions: Chinese citizens and travellers who have been to China in the 14 days prior to arrival will have to go through health checks and fill in questionnaires at border checkpoints and the capital\\u2019s airport. Travellers from China, Iran, Italy, South Korea or other countries where the virus is active will undergo a full laboratory examination upon arrival. Increased screening measures have been introduced at Minsk International Airport (MSQ). Passengers with flu-like symptoms will be isolated for further medical monitoring. Belarus instituted a mandatory 14-day self-quarantine requirement for persons entering Belarus from countries where the COVID-19 virus is actively circulating. Neighbouring countries (Latvia, Lithuania, Poland, Russia and Ukraine) have closed their land borders to foreigners with limited exceptions for cargo transport and diplomatic travellers.\"},BE:{info:\"Travelers arriving to Belgium from abroad must stay home for 14 days after returning from travel, monitor their health, and practice social distancing.\",updated_at:\"2020-05-21\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nReuters\\nhttps://be.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nBorders have been closed for any non-essential movement. The restrictions apply at ports, airports, international train stations and other border points. Entry and exit checks are in place on the Belgian border to prevent non-essential travel. All travellers to Belgium are expected to produce either a Belgian ID (residence) card or a letter from their employer to prove that their travel is essential. Those who are transiting through Belgium should carry valid ID/proof of residence and evidence of onward travel. The restrictions do not apply to cargo transport and foreigners who can prove that they need to cross into the country.\\nBelgian citizens are allowed to cross into the country, but travel abroad will be prohibited if it is deemed not essential.\\nOnly essential travel is allowed until at least 8 June.\\nBrussels South Charleroi Airport (CRL) is closed until at least early June.\\nEurostar services: While trains continue to operate between Belgium, France and the UK, they do so at a reduced capacity. According to the company representatives, since 4 May, passengers must wear a facemask or any other type of face covering at the stations and on board in line with Belgium authorities guidelines.\\nThalys services: all passengers are required to wear a facemask from 11 May. From 9 June, the rail operator will increase train frequency, to five daily round trips between Brussels and Paris (except on Sundays), and more trains linking Amsterdam, Dortmund and Paris.\\nCitizens and permanent residents entering the country have to self-quarantine for 14 days upon arrival. This does not apply to foreigners transiting through Belgium via air, land or sea, who must be able to enter and leave Belgian territory easily to continue travel to their destination. No quarantine is required for travellers on essential business travel.\\n\\nInternal restrictions:\\nAll public gatherings are banned and public events suspended until at least 30 June (until 31 August for Namur province). All non-essential shops and businesses are closed, except for pharmacies, food shops and press offices. Only travel deemed essential, especially for work, will be authorised. In supermarkets, entry and the length of time customers are present is being limited. Night shops must close at 22.00. Public transport must ensure distance between passengers. Cr\\xE8ches remain open and a reception system is maintained in the schools, in particular for parents working in the health and safety sectors.\\nCovering one\\u2019s face with a mask, scarf or bandana is mandatory on public transport for all over the age of 12.\\nPeople are able to meet up with a maximum of four others who do not live with them, but must keep distance and remain outside.\\nGlobal level 3 Health Advisory. Schools, but not universities, are suspended until further notice. All recreational activities (sports, cultural etc.) are cancelled regardless of size and whether they are public or private. Prohibition of gathering in religious places.\\n\\nRelaxation in restrictions\\nBelgium has pledged a phased plan of derestriction.\\nFrom 18 May, people are able to host small gatherings at home, as well as visit a museum and go to a hairdresser. Some school classes have resumed on this date. Markets are allowed to reopen.\"},BZ:{info:\"Belize established an isolation unit for Belizeans who test positive for COVID-19 and has self-isolation quarantine measures for potential cases.\",updated_at:\"2020-05-15\",source:\"https://www.iata.org/en/programs/safety/health/diseases/government-measures-related-to-coronavirus/?page=1&search=&ordering=DateDesc \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bz.usembassy.gov/covid-19-information/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll borders are closed. Belizean nationals, residents and diplomats residing in the country will be granted entry through the Santa Elena border crossing with Mexico.\\nBelize closed to international flights.\\nLand, air and sea transportation will resume in the country only for essential workers and purposes. Government offices will reopen, additional businesses shutdown will be able to operate during certain hours, and the special Sunday quarantine has been lifted. Masks must be worn by all \\n\\nInternal restrictions: \\nOn 14 May, some restrictions were lifted. Cross-district travel is allowed, domestic travel permitted, hotels reopened. Open-air restaurants will reopen on 15 May. All businesses must follow sanitary measures and social distancing.\\n\\n\\n\\n\"},BJ:{info:\"The Government of Benin has established locations for the quarantine or isolation of confirmed or suspected cases of COVID-19.  \",updated_at:\"2020-05-11\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://www.osac.gov/Content/Report/7911f78a-0f13-4fb8-926a-184937101eac\\nhttps://bj.usembassy.gov/info-covid19/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nBorders are closed for non-essential travel. The issuing of new visas has been suspended.\\nAll travellers arriving by air must go into quarantine for 14 days. Non-nationals must pay the associated costs themselves.\\nAll land borders are closed to all but emergency movements deemed necessary by the government.\\n\\nInternal restrictions:\\nAfter the lift of the \\u201Csanitarian cordon\\u201D, the wearing of a face mask is mandatory outside of the house.\\nMovement within regions and between urban centres resume. Public transport and buses are suspended.\\nBars, religious places, beaches and other social and entertainment venues as of 11 May continue to be closed.\\nGatherings of more than 50 people are prohibited.\\n\\nRelaxation in restrictions: \\nRestrictions preventing inbound and outbound movements on 11 May have been lifted around the cities of Abomey-Calavi, Adjarra, Agu\\xE9gu\\xE9s, Akpro-Misserete, Allada, Atchoukpa, Cotonou, Kpomass\\xE8, Ouidah, Porto-Novo, Seme-Podji, So Ava, Toffo, Tori and Z\\xE8.\\nInter-regions movement bans have been lifted as of 11 May. Motorcycles will be allowed to carry one passenger at a time. Only three passengers will be allowed in a taxi and five in seven-seat vehicles.\\nSchools and some businesses such as restaurants (with mandatory one-metre distance measure) and commercial shops are open from 11 May.\\nGatherings of less than 50 people with social distancing and sanitarian measures will be allowed, this includes non-festive gatherings and cremation ceremonies.\"},BM:{info:\"Passengers who have been in China, Chinese Taipei, Iran, Italy (northern regions), Hong Kong (SAR China), Japan, Korea (Rep.), \\nMacau (SAR China), Malaysia, Singapore, Thailand, Vietnam, in the past 14 days are subject to quarantine for a minimum of 14 \\ndays.\\nPassengers who show any symptom of Coronavirus (COVID-19) or have a relevant travel history, will be put into immediate \\nisolation.\\nCitizens, residents and their dependents as well as diplomatic personnel will be allowed entry, however, are subjected to self-quarantine for 14 days at a government approved facility and public health screening measures.\",updated_at:\"2020-05-05\",source:\"https://www.iata.org/contentassets/e077e98a5ebe43b4a82ddf8414b061e6/bermuda-ncov-measures.pdf \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bm.usconsulate.gov/covid-19-information/\\nhttps://www.osac.gov/Content/Report/1fd054d8-5eee-43e4-a552-1858030bd227\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers are not allowed to enter Bermuda.\\n- This does not apply to nationals and residents of Bermuda.\\n- This does not apply to passengers with a written permission of the Quarantine Authority of Bermuda.\\n\\nL.F. Wade International Airport (BDA), the only airport serving passenger flights, has suspended arriving commercial flights.\\nSeaport has also been closed for non-essential arrival vessels.\\nCargo flights and cargo vessels carrying essential goods and medical supplies are exempt from these restrictions.\\nThere are currently no restrictions for travellers seeking to depart the island.\\nNon-residents are not permitted entry to the island with the exception of crew members of air and ship crew members and those with written permission from the Quarantine Authority of Bermuda.\\nThose entering the country must self-quarantine for 14 days and submit to public health screening measures.\\nAll other visitors that are not providing essential services will be denied entry.\\n\\nInternal restrictions: Public bus and ferry services have been suspended. A state of emergency including \\u2018shelter-in-place\\u2019 orders is in effect until further notice. Bermuda has begun a phased reopening: additional businesses have been opened, permitted businesses are allowed to operate between the hours of 07.00 and 21.00. Residents are encouraged to only leave their homes for essential purposes, and a curfew is in place from 22.00 to 06.00, during which no one is allowed leave their residence.  Gatherings of over ten people are prohibited. Masks must be worn in public and a distance of 6 ft. kept between people engaged in essential shopping.\"},BT:{info:\"All travellers, including Bhutanese nationals, who are able to enter the country are subject to mandatory quarantine in a facility for 21 days.\",updated_at:\"2020-05-10\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://in.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Visa on arrival is suspended.\\n2. Passengers with a visa, work permit or other immigration permits issued by Bhutan are not allowed to enter Bhutan if they arrive from or have visited or transited through a Coronavirus (COVID-19) affected country.\\n\\nAll travellers re-entering into Bhutan will have to submit an online form found at the Ministry of Foreign Affairs website.\\nTravellers with a travel history to COVID-19 affected countries within 14 days prior to arrival are requested to report to the health desk at the point of entry.\\nRe-entry of foreign travellers holding valid visas, work permits, or other immigration permits travelling to Bhutan with travel history to any COVID-19 affected countries is suspended until further notice.\"},BO:{info:\"Patients presenting symptoms of COVID-19 or who may have been exposed to the virus are isolated and tested.\",updated_at:\"2020-05-11\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://bo.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends COVID-19 lockdown until 10 May (Reuters, 30.04.2020)\\n\\nInternational restrictions:\\nAll borders are closed until at least 31 May. Bolivian nationals and residents may be granted entry, but require prior approval and/or a diplomatically-arranged flight.\\nThere are currently no known restrictions on individuals seeking to depart the country. However, due to the lack of flight availability, any exit from the country should be coordinated with the government and the traveller\\xE2\\u20AC\\u2122s diplomatic mission.\\nMilitary forces will be deployed to the city of Santa Cruz to enforce measures.\\n   \\nConditions and internal restrictions:\\nA quarantine is in effect in La Paz, El Alto, and Santa Cruz, and \\u201Chigh risk\\u201D municipalities in the Cochabamba department until 31 May. Individuals may leave their homes on foot for essential needs between 07.00 and 12.00 (local time) one day a week, based on their national ID number. All private and public transportation services are suspended, including domestic flights, inter-provincial and inter-departmental buses and local vehicle traffic. Exemptions for essential services and healthcare workers are granted via special permits issued by the authorities. Violations are punishable by fine and/or detention.\\n\\nRelaxation of restrictions: \\nForeign and Commonwealth Office (FCO) indicated that from 11 May, Bolivia will implement \\\"dynamic quarantine.\\\" Towns and cities will be classified as high, medium or moderate risk based on coronavirus data. Different quarantine restrictions will apply depending on the designated risk level, which the Bolivian government will re-assess every seven days.\"},BQ:{info:\"Residents of Bonaire and Saba will be allowed entry but will be required to self-quarantine for 14 days upon their return. \",updated_at:\"2020-05-18\",source:\"https://www.iata.org/contentassets/68dfbda40c5c4f5bb0a5fb6907ab71dd/bonaire-ncov-measures.pdf\\nhttps://cw.usconsulate.gov/news-events/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nBonaire: All travellers will be barred from entry until 15 June. Residents of Bonaire that are stuck in Saba, Curacao, or St. Eustatius are allowed to return as of 8 May if given permission by the Island Governor, but will be required to self-quarantine for 14 days upon their return.\\nThose who have been to areas of significant infection are asked to contact the Public Health Department at +599 416 3311, extension 314 and 315.\\nAuthorities have placed an indefinite ban on flights from Asia and Europe.\\nLimitations on gatherings over 25 people remain in effect until 10 June. \\n\\nOutbound restrictions:\\nThere are currently no known restrictionsSa on individuals seeking to depart the country.\"},BA:{info:\"All BiH citizens and foreigners entering the country face mandatory quarantine at the port of entry or self-isolation for 14 days.\",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ba.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Sarajevo Airport (SJJ), closed until 31 May 20 (Qatar Airways)\\n\\nInternational restrictions:\\nEntry ban for foreigners.\\nReturning citizens and foreign citizens with permanent residence must undergo self-quarantine for 14 days. These measures will involve direct medical surveillance as well as mandatory daily reporting.\\nSarajevo Airport remains closed to the public, however continues to operate repatriation flights. All other international airports including Banja Luka Airport, Mostar Airport and Tuzla Airport are closed until further notice. Rare exceptions include EUFOR and NATO travellers. Humanitarian and cargo flights will continue to operate normally.\\nThe land border with Serbia is closed.\\nAirports are closed for passenger flights until at least 1 June.\\n\\nInternal restrictions:\\nA state of emergency has been declared in the Federation entity of BiH (including Sarajevo).\\nIn the Republika Srpska entity a 22.00 to 05.00 curfew is in place for all, with those over the age of 65 only being permitted to leave their residence between 07.00 and 13.00 on weekdays. Residents are prohibited to leave their municipality/city of residence during weekends (between 12.00 on Saturday until 18.00 on Sunday).\\nCitizens are required to wear a face mask or a cloth covering their mouth and nose when moving outside their accommodation in all locations.\\nSchools and public swimming pools remain closed until further notice.\\nPublic gatherings of more than five people are banned.\\n\\nRelaxation in restrictions\\nA 24-hour curfew for those over the age of 65 in the Republika Srpska has been relaxed.\\nThe ban on movement for residents under 18 and over 65 has been lifted.\\nPublic transport has resumed.\\nCaf\\xE9s and restaurants as well as museums, cinemas, theaters, concert halls, sport facilities and non-essential shops have reopened on the condition of only one person in ten square metres in all indoor spaces. Opening is subject to reduced hours and suspension of certain activities until at least 30 May. \"},BW:{info:\"Batswana and Botswana residents returning from high risk countries will be subjected to a 14-day mandatory quarantine at government-approved locations. Individuals arriving in Botswana will be required to go directly to a government-approved facility with food and sanitation provided for their 14-day quarantine.\",updated_at:\"2020-05-16\",source:\"https://bw.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nThere is a ban on all travellers (except Batswana citizens and Botswana residents) originating from or transiting through the following countries: Austria, Belgium, China, Denmark, France, Germany, India, Iran, Italy, Japan, Netherlands, Norway, South Korea, Spain, Sweden, Switzerland, the UK and the US. Batswana and residents returning from high-risk countries will be subjected to a 14-day mandatory quarantine. Issuance of Botswana visas at ports of entry for any person from these countries has been suspended. Those traveling to, but who have not entered, Botswana no longer have valid visas, nor will they receive visas on arrival. Those visa holders from these countries already in Botswana should consider their visas valid.\\nArriving passengers must serve a 14-day quarantine at their own expense. (Does not affect transiting passengers).\\n\\nInternal restrictions:\\nA state of emergency is in place until September, national lockdown lifted from midnight 7 May. Restrictions to be eased in stages from 8 May.\\nDuring this period, individuals are not allowed to leave their homes from 20.00 to 08.00 (local time). On 11 May the government advised individuals to limit their movements in the capital. Permit regime still in place for travel outside of those hours; businesses now authorised to open providing they adhere to government guidelines. Individuals who wish to apply for a Movement Permit should apply for a moving permit online. Pink permits which allowed movements in and out Gaborone have been reinstated after they were temporarily suspended on 11 May. The essential service permits remain in effect.\\nMovement between villages, cities and regions may be permitted for certain reasons, again, a permit is required to do so.\\nThe application form for a Travel Permit can be downloaded from the government Facebook page (BWGovernment). The public agencies that have the authority of approval and to which the application form should be submitted are: Ministry Headquarters, District commissioners, Dikgosi, Head of district Health teams as well as senior government officials. The movement permit is valid for five days and is renewable.\"},BR:{info:\"No explicit reference made to quarantine measures at federal level. Several state and local governments across Brazil have issued decrees that restrict the movement of people to combat the spread of COVID-19.\",updated_at:\"2020-05-21\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://br.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nUntil 28 May all foreign travellers are banned entry into the country.\\nExceptions include: citizens and residents, family members of Brazilians, diplomats and persons traveling on behalf of the Brazilian government and crew. All-cargo operations are permitted.\\nAlso, foreigners who are in one of the land border countries and need to cross to Brazil to board a repatriation flight may enter Brazil with authorisation from Federal Police, provided the traveller goes directly to the airport, ticket in hand, and authorised by the respective embassy or consulate of both countries.\\nAll land borders with neighbouring countries are closed until 29 May. These countries include: Argentina, Bolivia, Colombia, French Guiana, Guyana, Paraguay, Peru, Suriname and Venezuela.\\nLand border with Uruguay is closed until further notice. Nationals from their respective countries may enter.\\nBrazilian nationals and residents are exempt from entry restrictions, as well as humanitarian aid and cargo trucks.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\nFlights from Brazil to the US to pickup as outlined on the US embassy website.\\n\\nConditions and internal restrictions:\\nThe US embassy has advised travellers to be prepared for restrictions to be put in place with little-to-no advance warning.\\nIn Bahia, and Rio de Janeiro state, the authorities have suspended intercity public transport across the state.\\nCities have been implementing lockdown measures: some municipalities in Para state until 24 May. Recife (the capital of Pernambuco state) along with three other cities in the state will be on lockdown until 30 May. Rio de Janeiro has imposed vehicular restrictions in ten of the city\\u2019s districts beginning. Sao Paulo has a quarantine measure in place until 31 May.\\nGyms, hair salons, and beauty parlours will be included in the list of \\u201Cessential services\\u201D and will be allowed to operate.\"},VG:{info:\"Unclear quarantine measures, although a majority of countries in the Eastern Caribbean have put into place travel restrictions that either prohibit entry to visitors arriving from the United States or require mandatory 14-day quarantine.\",updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://bb.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nInbound airport and seaport closures to all travellers, including nationals, until further notice.\\nNationals and permanent residents to be able to enter beginning 1 June, foreigners three months after that, presumably 1 September.\\nCargo, freight, vessels, courier aircrafts and medical evacuations are exempt from the restrictions and will be allowed to operate.\\n\\nInternal restrictions\\nFrom 10-24 May, a curfew will be in place from 19.00 to 06.00. Individuals in public places are required to wear face masks and observe social distancing.\\nSince 10 May, some previously-shut businesses have been allowed to reopen with approval from the government. \"},BN:{info:\"The government requires all passengers arriving in Brunei through Brunei International Airport to undergo immediate isolation for 14 days at a designated monitoring center, as well as a COVID-19 test.  Foreign citizens arriving in Brunei must pay the cost of the quarantine accommodation and the test.\",updated_at:\"2020-05-10\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bn.usembassy.gov/u-s-citizen-services-covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Passengers are not allowed to transit or enter Brunei Darussalam.\\n- This does not apply to nationals and residents of Brunei Darussalam.\\n2. All visa exemptions and Visa on Arrival are temporarily suspended.\\n3. All visa issued to passengers are temporarily suspended.\\n4. Special consideration is only given by the Brunei Immigration Department which is subject to the affairs of interest to Brunei Darussalam by applying to the Brunei Immigration Department by downloading the form provided on the Department's website at www.immigration.gov.bn . Passengers with a Special consideration are subject to COVID-19 testing that has a cost of BND1000 and the cost of their stay in a quarantine facility for 14 days upon arrival.\\n\\nInternal restrictions:\\nMass gatherings are banned, including weddings and sports events.\\nAll citizens and residents of Brunei (including green identification card holders) are restricted from leaving the country, except for special circumstances such as medical care, court hearings, resumption of study abroad. Permission for travel must be approved by the Prime Minister\\u2019s Office.\"},BG:{info:\"The quarantine period is 14 days. The main quarantine location for positively diagnosed and admitted patients is the Military Medical Academy in Sofia.  Asymptomatic and mildly symptomatic patients should quarantine at home.\",updated_at:\"2020-05-20\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://bg.usembassy.gov/novel-coronavirus-covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government to allow entry of visitors from European Union, Schengen visa zones following ban (Reuters, 21.05.2020) Bulgarian government agrees with Greece, Serbia to ease some travel restrictions from 1 June (Reuters, 19.05.2020). Country to continue to ban admission to third-country nationals, until 14 June (OSAC, 18.05.2020)\\n\\n1. Passengers not arriving from Croatia, Cyprus, Czechia, Denmark, Estonia, Finland, Greece, Hungary, Latvia, Lithuania, Malta, Norway, Poland, Portugal, Romania, Slovakia, Slovenia or Sweden are not allowed to enter Bulgaria. - This does not apply to nationals of Bulgaria, Croatia, Cyprus, Czechia, Denmark, Estonia, Finland, Greece, Hungary, Latvia, Lithuania, Malta, Norway, Poland, Portugal, Romania, Slovakia, Slovenia and Sweden. - This does not apply to family members of nationals of Bulgaria, Croatia, Cyprus, Czechia, Denmark, Estonia, Finland, Greece, Hungary, Latvia, Lithuania, Malta, Norway, Poland, Portugal, Romania, Slovakia, Slovenia and Sweden. - This does not apply to passengers and their families with a permanent or long term residence permit issued by Bulgaria. - This does not apply to nationals of Austria, Belgium, France, Germany, Iceland, Ireland (Rep.), Italy, Liechtenstein, Luxembourg, Netherlands, Spain and Switzerland and their family members when they transit through Bulgaria to return to their country of residence. - This does not apply to passengers with a British passport and their family members when they transit through Bulgaria to return to their country of residence.\\n- This does not apply to nationals and residents of Turkey when they transit through Bulgaria to return to their country of residence. - This does not apply to nationals and residents of North Macedonia (Rep.) when they transit through Bulgaria to return to their country of residence. - This does not apply to nationals and residents of Serbia when they transit through Bulgaria to return to their country of residence. - This does not apply to nationals and residents of Montenegro when they transit through Bulgaria to return to their country of residence. - This does not apply to the following passengers:\\na. health care professionals, health researchers and elderly care professionals; b. transport personnel engaged in the carriage of goods, crews of aircraft engaged in commercial air transport and other transport personnel as necessary; c. diplomats, officials of international organizations, military personnel and humanitarian workers in the performance of their duties; d. persons traveling for humanitarian reasons; third-country nationals who hold a long-term residence permit in an EU Member State and pass through Bulgaria in order to return to their country of residence and residence. 2. Nationals of Bulgaria arriving from risky countries are requested to observe a 14-day quarantine period. 3. All arriving passenger from Italy at Sofia airport (SOF) must fill out a questionnaire in the presence of a health inspector. 4. All passports and national ID cards issued to nationals of Bulgaria and which have expired on 13 March 2020 or later, are considered valid with a prolongation of 6 months. This is due to the Coronavirus (COVID-19) Pandemic.\\n   \\nInternal restrictions:\\nA state of emergency ended on 13 May and will not be extended. \\nOnly travel for essential purposes is allowed between capital cities of Bulgaria\\u2019s 28 districts, except for the capital Sofia which is in lockdown until further notice. Travel to and from Sofia will be prohibited, except for cargo transport, essential workers or health emergency services. Checkpoints have been established at the entry/exit roads of each regional centre. Travellers must show a document (annual payment statement, medical document and ID as proof of residence) to justify their travel/presence (possible if due to work in the city, for health reasons or to return to permanent address).\\nThere is a ban on visits to parks, playgrounds, sport facilities, outdoor and indoor places.\\nEveryone in-country must wear a face mask when they are in a public space; since 3 May this only applies to closed spaces.\\nThe province of Stara Zagora operates a night curfew from 21.00 until 05.00 (local time).\\n \\nRelaxation of restrictions:\\nFrom 1 June, travel to Greece and Serbia for business, family and humanitarian reasons is allowed without the need to quarantine.\\nSince 4 May, individual outdoor sports activities have been allowed to resume and people are allowed outside for recreational reasons. On midnight 5 May, the ban on intercity travel ended. Public transport in the capital Sofia is gradually resuming normal operation. From 6 May, outdoor areas of cafes, restaurants, fast food kiosks and bars are allowed to resume service subject to following \\u201Canti-epidemic\\u201D measures, such as wearing protective gear and practicing social-distancing.\"},BF:{info:\"The quarantine measures imposed on all cities with at least one case of COVID-19 were lifted on 4 May allowing movement between urban centres to resume. Unclear if previous quarantine measure continue,.\",updated_at:\"2020-05-12\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bf.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions: Bobo Dioulasso (BOY) and Ouagadougou (OUA) airports are closed. Gradual/partial shutdown of other airports. Land and rail borders closed from 21 March at 00:00 with the exception of freight. Air Burkina has suspended flights to Benin, Mali and Niger.\\n\\nInternal restrictions: A nationwide curfew is in place from 21.00 until 04.00. The wearing of masks is mandatory nationwide. The quarantine measures imposed on all cities with at least one case of COVID-19 were lifted on 4 May allowing movement between urban centres to resume. A state of health emergency has been declared countrywide: Partial confinement (outside of work hours). Ban on all cultural and religious or family gatherings. Ban on any professional gatherings of more than 25 people. Closure of all cultural, sports and leisure activities/businesses. Gradual shutdown of airports and screenings at land borders. All public gatherings of over 50 people are banned. Closure of bars and restaurants. Schools and universities are closed. Some markets countrywide are able to operate under stringent hygiene rules, including social distancing.\\n\\nRelaxation in restrictions: 27 markets in Ouagadougou were allowed to reopen from 29 April, following violent protests by local residents on 27 and 28 April. Schools have gradually started resuming classes from 11 May; bars and restaurants will remain closed. Passenger buses restarted their activities on 5 May. Mosques and churches are allowed to reopen on a case by case basis provided worshippers wear masks and respect physical distancing rules on 10 May. Funerals and other religious ceremonies remain banned. All social venues and events remain banned until at least 30 June. Restaurants, bars, cafes and cinemas will remain closed until at least 14 May.\"},BI:{info:\"All inbound travellers will be quarantined for 14 days upon arrival. The government confirmed that the cost of quarantine will be charged to the travellers. \",updated_at:\"2020-05-06\",source:\"https://www.theeastafrican.co.ke/news/ea/Burundi-suspends-all-flights-in-and-out-of-the-country/4552908-5499148-10v2xkxz/index.html\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://bi.usembassy.gov/embassy/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to Burundi are suspended.\\n\\nAll inbound travellers will be quarantined for 14 days upon arrival. The cost of quarantine will be charged to the travellers.\\nAll land borders are closed until further notice, except for cargo trucks. Screening measures are in place at road borders.\\nAll international commercial flights to and from Melchior Ndadaye airport are suspended until further notice. Cargo, sanitary, humanitarian and diplomatic flights are exempt from this measure.\\n\"},KH:{info:\"All individuals entering the country, including migrant workers, will be quarantined for 14 days in designated facilities to prevent further spread of COVID-19 in the country. \",updated_at:\"2020-05-21\",source:\"https://kh.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAll individuals entering the country, including migrant workers, will be quarantined for 14 days in designated facilities to prevent further spread of COVID-19 in the country.\\nAll visa exemption policies and issuance of tourist visa, e-visa, and visa on arrival to all foreigners have been suspended until further notice.\\nAny foreigner wishing to travel to Cambodia must first obtain a visa from Cambodian missions abroad, the statement reads, adding that an individual must provide a medical certificate, issued by competent health authorities of their country no more than 72 hours prior to the date of travel, certifying that they are not tested positive for COVID-19. They also require a proof of health insurance with coverage of at least USD $50,000. Travellers with a diplomatic visa (Visa A) or an official visa (Visa B) are exempted.\\nTravellers arriving from France, Germany, Iran, Italy, Spain and the US from 20 May are allowed entry. Travellers holding a diplomatic visa or official visa would have to undergo a 14-day quarantine upon entry.\\nCambodia has banned entry of all Vietnamese nationals. Travellers carrying diplomatic or official passports will be exempt.\\nBan on cruise ships and riverboats entering Cambodia.\\nThe border between Cambodia and Vietnam does not allow any traffic via either land, sea or air.\\nAccording to the Ministry of Foreign Affairs and International Cooperation, tourists holding Visa T and arriving in the Kingdom after 1 January will receive automatic visa extension. They will have to register their stay on Foreigners Present in Cambodia System (FPCS) before 1 July in order to be considered for any visa extension.\\n\\nInternal restrictions:\\nThe travel ban between provinces has been lifted.\\nGarment workers coming back to Phnom Penh must be quarantined for 14 days at designated facilities.\\nThe Senate passed a bill empowering the government to declare a state of emergency. The bill was legalised on 29 April. If a state of emergency is declared, the government can be expected to implement further internal movement restrictions and halt business activity.\\nAll schools and tertiary institutions will be closed until November.\\nLarge gatherings are banned.\"},CM:{info:\"All inbound travellers will be quarantined for 14 days upon arrival.\",updated_at:\"2020-05-02\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://cm.usembassy.gov/health-alert-u-s-embassy-yaounde/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All international commercial flights to Cameroon are suspended from 18 March 2020 00.01UTC until further notice. \\nUNHAS flights recommenced 24 April 2020.\\n\\nAll inbound travellers will be quarantined for 14 days upon arrival. \\n\\nAll land and maritime borders have been closed. Restrictions do not apply for cargo and to Cameroon nationals wishing to go back home.\\n\\nInternal restrictions: All social venues are closed. As of 30 April, restaurants and bars are allowed to remain open after 18.00 (local time). Social distancing measures and the wearing of face masks are mandatory for the customers. All schools are closed. Gatherings of over 50 people are banned. In Bafoussam (West region), weddings celebrations have been suspended until further notice. The wearing of face masks is mandatory in all public spaces. A systematic sanctioning of those people found to have breached restriction and confinement measures are imposed. Checkpoints to be set up in urban and rural  areas.The wearing of face masks is mandatory in taxis and public transport. \\nRelaxation in restrictions: Reopening of universities only for the lectures on 1st June until 30 August. Sanitarian measures will be implemented in front of the auditoriums. Public transport restrictions have been lifted however wearing of masks remains compulsory and surcharges remain banned.\"},CA:{info:\"Travellers entering Canada must present a credible 14-day quarantine plan. Information on what constitutes a credible quarantine plan is available on the Public Health Agency of Canada\\u2019s website. \",updated_at:\"2020-05-20\",source:\"https://ca.usembassy.gov/covid-19-information-canada/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"U.S. government extends ban on nonessential travel with Canada and Mexico shared borders through 22 June (Reuters, 19.05.2020)\\n\\nInternational restrictions:\\nBorder closure for all foreign travellers (exemption for Canadian citizens, permanent residents and their immediate family members; however, they will be subject to mandatory self-quarantine for 14 days) until 30 June.\\nThe Canada-US border will remain closed to non-essential travel (i.e. recreation and tourism) until at least 21 June. However, essential travel and all freight transportation will be permitted throughout.\\nAny traveller showing symptoms of COVID-19 will be barred entry.\\nCanadian citizens and permanent residents showing symptoms are prohibited from entering the country by air, but may be allowed to enter by land, rail or sea, where available. Those entering must seek immediate medical attention and undergo quarantine.\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nInternal restrictions:\\nThe provinces of Manitoba, New Brunswick, Newfoundland, Nova Scotia, Prince Edward Island, Quebec (for some provincial border crossings) and Yukon require all domestic travellers to self-quarantine for 14 days if they intend to stay; exceptions are made for those involved in commercial shipping, essential medical staff and family-related situations such as custody arrangements.\\nAll domestic air travellers must wear a mask or other facial covering. Those arriving for flights who refuse or do not have one will not be allowed to board and may be fined.\\nThe Northwest Territories and Nunavut have restricted entry for non-residents, and returning residents are required to self-quarantine for 14 days.\\nHighway 77 that connects British Columbia to the Northwest Territories is closed to non-essential travel. Highways 97 and 37 connecting British Columbia and Yukon are also to non-essential travel.\\n \\nRelaxation of restrictions:\\nAll provinces and territories have begun the process of reopening their economies, with each outlining its own rules. All are taking a phased approach and have announced plans for gradual reopening of businesses and services of between two and five stages, each stage lasting a period of weeks.\\nIn the most acutely affected province of Qu\\xE9bec, schools, certain retail stores and businesses have reopened in all areas except for the province\\u2019s commercial capital Montreal.\\nWhile it varies by territory or province, typical services slated for early-phase reopening will be medical services such as physical therapy and elective surgeries, seasonal businesses such as those related to boating, gardening and golf, retail businesses with outdoor access and outdoor gathering areas such as parks. In most of these cases, social distancing, mask-wearing and stringent sanitation guidelines will continue to be enforced after reopening.\"},CV:{info:\"The Ministry of Health may require individuals exposed to a COVID-19 case or those displaying symptoms to self-quarantine. Should there be a  need to self-isolate at home, it is advisable to ensure at least a two\\u2013week supply of food, water, and any essential medicines. \",updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://cv.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll sea borders are closed and air links are suspended with limited exceptions for citizens returning to/from Cabo Verde on repatriation flights and for medical emergencies.\\nA form to be filled out is distributed to travellers coming from the areas most at risk.\\nCabo Verde Airlines has suspended all commercial flights until 1 July.\\nPassenger and cruise ships are allowed to dock but passengers are not allowed to disembark at all ports.\\n\\nInternal restrictions:\\nA state of emergency is in place until 29 May for Santiago island. For the rest of the country, certain restrictions on businesses and public areas remain in effect.\\nAll inter-island connections are suspended with limited exceptions for some ferries.\\n\"},KY:{info:\"All persons entering the Cayman Islands and all of their household contacts strictly practice self-isolation at home or in a government provided facility for 14 full days. There are no exceptions to this direction.\",updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://jm.usembassy.gov/covid-19-information-cayman-islands/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nBoth international airports (Owen Roberts International Airport on Grand Cayman and Charles Kirkconnell International Airport on Cayman Brac) are closed to all international flights; borders remain closed until at least 1 September.\\nOnly returning residents will be allowed entry to the Cayman Islands.\\nAll cruise ships are banned until at least 1 September.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nConditions and internal restrictions:\\nAs of 19 May, the Shelter-in-Place restrictions have been eased with additional businesses allowed to reopen with limitations.\\nFrom 4 May, a hard curfew will be in place from 20.00 to 05.00, Monday to Saturday. Breaking curfews will result in heavy fines and/or imprisonment.\\nA soft curfew remains in place Monday through Saturday from 05.00 to 20.00. Residents should stay at home except for essential purposes; two hours a day are permitted for exercise.\\nBeach access is allowed for exercise and swimming between 5:15 and 19.00 Monday through Saturday, using last name protocols.\\nThose with last names starting with A-K are allowed to travel on Mondays, Wednesdays and Fridays. Those with names starting with L-Z may travel on Tuesdays, Thursdays, and Saturdays.\"},CF:{info:\"Self-quarantine of 21 days is mandatory for any person entering CAR from a location with local transmission of COVID-19. Quarantined individuals are banned from leaving their domicile\",updated_at:\"2020-05-07\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://cf.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers arriving from a country with local transmission of coronavirus (COVID-19) must self-quarantine for 21 days upon arrival.\\n\\nInternational restrictions:\\nAll foreigners are denied entry in the country. Diplomats, NGOs workers and countries with no local transmission of COVID-19 are exempt.\\nBangui Mpoko International Airport is closed with the exception of humanitarian flights, cargo flights or authorised special and commercial flights.\\nThe land borders with Democratic Republic of Congo (Zongo border crossing), Cameroon (including cargo trucks), Sudan and South Sudan remain closed until further notice. A humanitarian corridor remains opened at Zongo border crossing.\\n\\nUNHAS Ops still running. \\n\\nInternal restrictions:\\nTravel between Bangui and the rest of the country is prohibited. From 29 April, road movement between Bouar and Beloko is banned for at least 30 days. Road movement between Bangui and Bouar is also banned for at least 21 days. Schools and universities are closed. Social venues, including bars, dance halls and cinemas are closed. Gatherings of more than 15 people are prohibited. Mourning, weddings and related venues are limited to the family sphere. Suspension of all border markets between CAR and Congo along Ubangi river until further notice.\\n\\n\\n\"},TD:{info:\"The government of Chad has implemented enhanced screening and quarantine measures to reduce the spread of COVID-19.\",updated_at:\"2020-05-12\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.osac.gov/Content/Report/1c6630e9-150e-4c67-997e-18387db7883a  and UNHAS\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://td.usembassy.gov/covid-19-information/\\nUNHAS\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government bans travel in, out of N'Djamena (DispatchLive, 08.05.2020)\\n\\nInternational restrictions: All airports remain closed for passenger flights until 31 May. Cargo flights continue to operate normally. UNHAS Ops suspended till end May. International pax services are suspend through to 15 May 2020 as issued by the Chadian Government. Land borders remain open, except with CAR and Sudan.\\n\\nInternal restrictions: A nationwide state of health emergency was declared on 25 April. The decree grants the government wide-ranging powers to limit movement of people and introduce other restrictions. A curfew is in place from 20.00 to 05.00 in N\\u2019djamena and the provinces of Logone Occidental, Logone Oriental, Mayo Kebbi Est and Mayo Kebbi Ouest as well as in cities of Lougoune-Gana, Mandelia and N\\u2019Djamena-Farah district in Guitt\\xE9 at least until 27 May. Entry and exit from the capital Ndjamena and all provincial capitals will be suspended from 8 May until at least 22 May. Vehicles transporting goods and food are exempt from the ban. Gatherings of more than 50 people are banned. All social venues, schools, bars, restaurants remain closed. All fake news on social media will be prosecuted. Buses and mini-buses (including within urban centres) are banned. Wearing masks is mandatory across the country. A two-week prison sentence can be carried out for anyone not abiding by this rule.\"},CL:{info:\"All travelers arriving in Chile will be subject to a 14-day self-quarantine.\\n\\nThe Chilean Ministry of Health has established procedures for the quarantine and treatment of any potential or confirmed cases of COVID-19.\\n \\nTotal quarantine for Gran Santiago (includes all comunas in the Santiago Province, as well as the comunas of Puente Alto, San Bernardo, Padre Hurtado, Buin, Lampa, and Colina) will take effect Friday, May 15 at 10:00 pm\\n \\nOutside Santiago, the government of Chile has implemented quarantines in Arica, Iquique and Alto Hospicio (it will take effect Friday, May 15 at 10:00 pm) Mejillones, Antofagasta.\\n \\nNote: Quarantines may be modified or extended by Chilean authorities at any time.\\n\",updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://cl.usembassy.gov/covid-19-information/\\n\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions: Chile closed its borders (air, land and sea) to foreign travellers until further notice. The restrictions do not apply to Chilean nationals or residents, diplomatic visa holders, or those providing humanitarian aid. All returning travellers are required to self-quarantine for 14 days. Citizens of New Zealand are barred from transiting through the country unless they are permanent citizens of Chile. All passengers arriving in Chile with final destination Chile must sign and present a health declaration outlining the countries they have been to in the preceding 30 days. These are handed out by the airline prior to arrival. Those who have been to affected countries will receive additional screening. From 15 March to 30 September, landings in all Chilean passenger cruise ports are prohibited.\\n\\nOutbound restrictions: There are currently no known restrictions on individuals seeking to depart the country. \\n\\nConditions and internal restrictions: A \\u2018state of emergency\\u2019 is currently in place and is expected to remain in place until 16 June. This gives the government extraordinary powers to restrict freedom of movement and assure food supply and basic services. The military is permitted to intervene and uphold order when necessary. A nightly curfew is in effect from 22.00 to 05.00 (local time). You may only move after 22.00 if you have an authorized certificate (salvoconducto) which can be requested at the police stations. Gatherings of more than ten people are prohibited. Sanitation Customs, posts manned by the armed forces and police where temperature controls are carried out, are set up throughout the country. Sanitary cords are posts guarded by the armed forces and police that do not allow the entry or exit of anyone from those cities/municipalities where they are located. Severe fines result in violation of the sanitary cords. Sanitary cords are implemented in the following locations for an indefinite period of time: Temuco, Padre las cases (Araucania region), Osorno, Chilo\\xE9 (Los Lagos region), Punta Arenas, and Puerto Williams (Magallanes region). Masks must be worn in public and private transportation, and in places where more than ten people are gathered (i.e. supermarket, pharmacy). \\nAll districts in the Santiago metropolitan region, including the capital, are under quarantine measures until 29 May. Quarantine for Iquique, Alto Hospicio, Mejillones, and Antofagasta was extended until Friday 29 May. \\nQuarantine measures in  the following areas have been lifted: Angol, urban areas (Araucania region) Arica (Arica and Parinacota region), Victoria, urban areas (Araucania). (OSAC, 21.05.2020) \"},CN:{info:\"All travelers, who enter China will be screened upon arrival and be subject to a 14-day quarantine.  Local quarantine requirements can vary significantly between cities and regulations can change very quickly.  All arrivals should be prepared to complete quarantine at a government selected facility or hotel at their own expense, even if they maintain a residence in China. Some Chinese cities and provinces, including Beijing, also require quarantine for all domestic travelers, regardless of nationality. \",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://china.usembassy-china.org.cn/covid-19-information/\",certification_status:\"COVID-19 negative certification subject to special conditions\",restrictions:\"Entry restrictions\\nForeigners with visas or residence permits still valid from 28 March are restricted from entering China. This includes foreign nationals with APEC Business Travel Cards, port visas, persons who qualify for 24/72/144-hour visa free transit policies, Hainan 30 day visa-free policy, 15 day visa-free policy specified for foreign cruise-group-tour through Shanghai Port, Guangdong 144-hour visa-free transit policy for foreign tour groups from Hong Kong or Macao Special Administrative Regions and Guangxi 15 day visa-free policies for foreign tour groups from ASEAN countries. Diplomatic, Courtesy or C-Class visas will not be affected. Foreign nationals involved in necessary economic, trade, scientific or technological activities or for emergency and humanitarian needs may also apply for visas at Chinese embassies or consulates.\\nMany local governments require inbound travellers to inform their local company office and neighbourhood committee in advance about their travel plan.\\nThe number of international passenger flights is reduced. In Beijing, international flights are not landing directly at Beijing Capital International Airport (PEK), but are diverted first to other domestic airports in Dalian, Hohhot, Jinan, Nanjing, Qingdao, Shanghai Pudong, Shenyang, Shijiazhuang, Taiyuan, Tianjin, Xi\\u2019an and Zhengzhou for screening. Travellers will have to undergo a 14-day quarantine at a designated facility upon entry. After clearing the 14-day quarantine, if the traveller enters Beijing after the second day the traveller clears the quarantine, the traveller will have to undergo another 14-day quarantine either at home or a designated facility for 14 additional days.\\nAll land border crossings between China and Russia have been closed to travellers. Yunnan province has banned citizens from leaving the country by more than 30 land and river ports at the province\\u2019s borders with Vietnam, Laos, and Myanmar.\\nThe Chinese Government is in discussions with foreign governments on \\\"fast-track\\\" procedures to allow key employees of foreign companies to return to China. So far, \\\"fast-track\\\" commercial charter flights have been arranged with Germany and South Korea and may be extended to other countries in the future.\\nAll transit/transfer services, including air transit/transfer, cross boundary land transport and cross boundary ferry transfer, are suspended for all passengers at Hong Kong International Airport.\\nResidents with travel history in Daegu and Gyeongsangbuk-do in South Korea, Iran, as well as Emilia-Romagna, Lombardy and Veneto regions in Italy in the past 14 days will be required upon entry to stay in a quarantine centre for 14 days. Residents with travel history in any other overseas locations in the preceding 14 days will be subject to a 14-day mandatory quarantine.\\n\\nInternal restrictions:\\nMainland China: Railway stations and airports have gradually resumed operations and most provinces have resumed their inter-provincial road passenger transportation. Restrictions on public transportation and private car movement have been lifted in most cities.\\nHubei province: Restrictions on outbound travel from Hubei province were lifted on 25 March, and restrictions in Wuhan have been lifted on 8 April. Railway and passenger flights have started to resume accordingly with the lifting of restrictions (Wuhan Tianhe International Airport resumed domestic flights on 8 April); however, international flights and flights to/from Beijing will remain suspended until further notice. Those who want to leave Hubei should confirm with their destination city on the local requirements. Various cities and provinces require all travellers from Wuhan to take nucleic acid tests (including Shenzhen, Zhejiang, etc). Shanghai encourages employers to let returning staff from certain areas take nucleic acid tests.\\nBeijing: On 29 April, the Beijing government announced a new policy that business travellers and returnees who come from domestic \\u2018COVID-19 low risk\\u2019 areas to Beijing will NOT need the 14 days of home quarantine. People who have travelled from low risk areas to Beijing and are currently under home quarantine can halt their home quarantine and medical observation if applicable. The new Beijing policy does not apply to travellers from overseas, Hubei province or other domestic \\u2018medium and high risk areas\\u2019. Personnel returning from Hubei need to register information online in advance and get a negative nucleic acid test certificate before purchasing the returning ticket. After arrival, they need to show the test certificate to enter the community, follow the 14-day quarantine requirement, and take another test before lifting the quarantine. Domestic travellers planning to stay at hotels must present a \\u2018green\\u2019 health code. Chaoyang District has been rated as \\u2018high\\u2019 risk due to recent cluster cases. Travellers from 'high' risk areas are possible to face quarantine and other requirements when entering other provinces and cities. As such requirements vary across the country, travellers need to confirm with the local residence committee or hotel in advance.\\nAs the situation continues to improve across the country, almost all the cities and provinces have declared the local risk level to be low. The latest city is Suifenhe, the border city with Russia in Heilongjiang province, who adjusted its risk level to low from May 6. However, some cities also chose to strengthen their quarantine measures due to re-emergence of local or imported cases. On 10 May, Shulan (Jilin province) raised its risk level to \\u2018high\\u2019 due to new local cases, and has re-strengthened restrictions on local movement and public gathering. Several train routes to/from Shulan have also been suspended.All villages and residential compounds in the city were closed off, and only one person from each household allowed out for two hours every second day for essentials. (The Guardian, 19.05.2020) \\n\\nAnother example is Taiyuan (who did so on 3 May), Shanxi provincial capital, although it didn\\u2019t announce any change to its risk or response level. In Shanghai and Guangdong, public health emergency response levels have been changed from level II to level III.\\nA new directive has been issued providing more detailed guidance on community quarantine management, including a new clause that says for low-risk areas and communities with no cases detected, inbound travellers from non-high-risk areas are exempted from mandatory quarantine as long as they hold a \\u2018green\\u2019 health code and arrive directly (without a stopover in a high-risk area). As the risk levels still vary across the country, travellers are advised to confirm with the local residence committee or hotel about quarantine requirements in advance.\\nAs each province has different variations of the application, travellers will need to check the relevant application for their destination and register their information online to get the \\u2018health code\\u2019 before the trip. Heilongjiang announced an \\u2018in-city code\\u2019 in addition to the three-colour health code. Personnel with \\u2018in-city code\\u2019 are restricted to travel out of their current city but can move freely inside.\\nAlthough such restrictions are easing, many provinces and cities still have in place community 'close-off' style management which means:\\nA reduction of exit/entry access to the community.\\nAccess control of visitors and visiting vehicles: ID check/registration, temperature measurement at gate, delivery service is to be picked up at the gate of community etc.\\nIf there are confirmed cases in a certain community, there might be a closure of certain units/areas for quarantine depending on the severity of the local outbreak. In Heilongjiang province, re-emergence of local cases has led to strengthening of such measures.\\nOn 13 May, Jilin city was announced to be \\u2018sealed\\u2019. Transportations services such as intercity buses and trains for Jilin city are suspended now. People who want to move out of the city need the nucleic acid test within 48 hours of travel and register the information according to official instructions.\"},CO:{info:\"nationwide \\u201Cstay at home\\u201D mandatory preventive isolation announced by the government.  The quarantine has been extended until May 25.\",updated_at:\"2020-05-20\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://co.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government bans all international passenger flights until 31 August (Reuters, 20.05.2020)\\nMandatory quarantine extended until 31 May (Reuters, 19.05.2020)\\nFlights to Colombia are suspended.\\nInternational restrictions: Border closure for all foreign travellers until 30 May. Colombian nationals and residents will not be allowed to enter or depart the country. All international flights to Colombia are suspended until 30 May. All travellers, including Colombian citizens and permanent residents, will be barred entry during this time.\\n   \\nConditions and internal restrictions: A nationwide quarantine - in which all residents are asked to remain home except for essential purposes - is in effect until 25 May. Individuals over the age of 70 are asked to remain at home until 31 May. Gender-based movement restrictions, which allow men and women to leave their homes on designated days for essential purposes, end 11 May. Facemasks are mandatory while outside.\"},KM:{info:\"Passengers arriving from or having transited through China or Japan face entry travel restrictions or quarantine.  Travelers from counties with confirmed cases of COVID-19 may be required to have spent a period a period of 14 days in quarantine in a country that is free from COVID-19.\",updated_at:\"2020-04-29\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://mg.usembassy.gov/u-s-citizen-services/security-and-travel-information/covid-19-information/\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions: \\nAll international commercial flights are suspended.\\nAll maritime links with the region are suspended.\\nAll arriving travellers are subject to a mandatory 14-day self-isolation.  \\n\\nInternal restrictions: \\nNight curfew in place between 20.00 and 05.00 until further notice. Residents are required to remain at their house; only essential travel will be permitted. \\nAll social gatherings and events are cancelled/banned or severely restricted including for elections, community, weddings and funerals. Friday and collective prayers have been suspended too. It is compulsory to wear a face mask when in public spaces.\\n\"},CG:{info:\"Congolese authorities have identified quarantine sites in Brazzaville and Pointe-Noire. \",updated_at:\"2020-05-19\",source:\"https://cg.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required \",restrictions:\"International restrictions:\\nLand, air and sea borders are closed and all international flights are suspended. Cargo ships and flights are exempted from this measure. All travellers should reportedly present a COVID-19 negative test, carried out by an approved institution, to apply for any type of visa. Further indication on entry requirements should be discussed with the country\\u2019s diplomatic representations prior travel.\\n\\nInternal restrictions:\\nA nationwide state of health emergency is in place until 31 May.The measures it entails are a ban on inter-city travel (except for essential movements and for essential workers), the closure of all non-essentiel shops and a curfew from 20.00 to 05.00. Wearing a face mask is mandatory in public areas. All social gatherings and events are cancelled/banned. Schools and social venues (including bars and places of worship) have been closed. Since 18 May: In zone 1, which covers Brazzaville and Pointe-Noire, public transport has resumed with an obligation to wear masks. Opening days for markets has increased from three to five days a week. Travel between the two cities remains prohibited. In zone 2, locations little or not affected by the virus, the lockdown has been lifted. The nationwide curfew remains in place.\"},CK:{info:\"All travellers allowed entry will be subject to a 14-day mandatory quarantine.\",updated_at:\"2020-05-07\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers and airline crew who have transited or have been in any country except for Cook Isl. and New Zealand in the past 14 days are not allowed to enter Cook Isl.Passengers who have transited or been in any country except for Cook Isl. and New Zealand in the past 14 days are not allowed to enter Cook Isl. - This does not apply to Cook Islanders and any immediate family member. - This does not apply to nationals of New Zealand and any immediate family member. - This does not apply to passengers who reside in Cook Isl. or New Zealand and any immediate family member. - This does not apply to nationals and residents of Australia who normally reside in New Zealand, and any immediate family member. - This does not apply to passengers with a work permit issued by Cook Isl. and any immediate family member.\\n\\nInternational restrictions: \\nInternational flights into the country are suspended until 12 June, licensed aircraft with special permissions are exempted. Entry is barred for all travellers except for New Zealand passport and permanent residence holders, Australian citizens and permanent residents who normally live in New Zealand, Cook Islanders, permanent residents of the Cook Islands, Cook Islands work permit holders and Cook Island residents permit holders. Entry will be permitted for any immediate family of travellers included in the above exempted categories. All travellers allowed entry will be subject to a 14-day quarantine in New Zealand and a 14-day mandatory supervised quarantine upon arrival. Persons intending to travel to the Cook Islands who have been in the following countries in the 14 days prior to travel, will be denied entry into the Cook Islands: Cambodia, Indonesia, Iran, Italy, Japan, Laos, Malaysia, People's Republic of China (including Hong Kong, Macao and Taiwan), Philippines, Singapore, South Korea, Thailand, Vietnam. Incoming flights from Australia, French Polynesia and the United States of America are suspended. Travellers coming from the above countries will need to undergo self-quarantine in New Zealand for 14 days before departure for Cook Islands. Foreign cruise ships are barred from entry.\\n\\nInternal restrictions: \\n\\nThe authorities declared the country COVID-19 free on 18 April, and restrictions on domestic travel to and from the outer islands have been lifted. Businesses will gradually resume operations. A ban on gathering of more than ten people has also been lifted.\"},CR:{info:\"Anyone arriving in Costa Rica from another country must self-quarantine for 14 days. Arrivals are also being tested at port of entry for COVID-19.\",updated_at:\"2020-05-20\",source:\"https://www.iata.org/contentassets/0a13a1c43c1a4e23b4fe3d5fe63b1d9b/costa-rica-ncov-measures.pdf\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://cr.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Border closure for all foreign nationals and non-residents until 15 June. (MenaFM, 10.05.2020)\\nLand border crossings with Nicaragua have been closed until further notice.\\nInternational restrictions:\\nBorder closure for all foreign nationals and non-residents until June 15. The measures will not apply to Costa Rican nationals or residents, both of whom will be asked to undergo a 14-day quarantine upon returning from abroad.\\nTravellers will still be allowed to transit through Costa Rica\\u2019s airports while new restrictions are in effect.\\nThere are currently no known restrictions on individuals seeking to depart the country.\\nForeigners who leave the country will lose their immigration status.\\n\\nConditions and internal restrictions:\\nthe Government has published on May 17 the requirements that businesses will need to follow to reopen. If the airlines that serve Costa Rica are suspending or limiting their flights\\nAll national parks are closed\\nA curfew for vehicles is in place from 19.00 to 05.00 until at least 15 May.\\nFrom 18 May to 1 June, vehicular restrictions from 22.00 to 05.00 on weekdays and from 19.00 to 05.00 on the weekends.\\nVehicles will be allowed to transit during the day on a daily schedule according to license plate number.\\nDrivers breaking the restrictions will be fined.\\nPublic transportation operates from 04.00 to 23.00 daily.\\nMost non-essential businesses have been allowed to re-open at 25-50% capacity and in accordance with any curfew hours that may be in effect.\\nOrganized public gatherings remain suspended until at least September.\"},CI:{info:\"Confirmed and suspected cases of COVID-19 are to be quarantined in government-run facilities. The primary location is at the Treichville University Teaching Hospital (CHU) in Abidjan, however the Ivoirian government is actively setting up additional facilities for testing and treatment of patients with COVID-19.\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ci.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll land, sea and air borders remain closed until at least 31 May and international flights are banned, except for freight.\\n\\nInternal restrictions:\\nA state of emergency is in force until at least 31 May.\\nThe Greater Abidjan metropolitan area is isolated from the rest of the country at least until 31 May. Greater Abidjan includes the Abidjan Autonomous District and the surrounding towns of Assinie, Azaguie, Bonoua, Dabou and Grand-Bassam.\\nUnauthorised internal travel between Greater Abidjan and the interior of the country is banned. For essential travel only, the request for a laissez-passer permit must be done online 24 hours prior to setting out accompanied by a negative COVID-19 test. The permit remains valid for 72 hours and outside of curfew times. Vulnerable individuals (elderly people and people with chronic diseases) are to remain home until further notice.\\n\\nRelaxation in restrictions:\\nThe nationwide curfew has been lifted. However, a curfew will be reinstated on areas where the authorities deem it necessary, due to a surge of COVID-19 cases.\\nThe curfew in the Greater Abidjan was lifted on 15 May. Wearing of masks in public remains mandatory. Bars, night clubs and movie theatres remain closed at least until 31 May, while restaurants and \\u2018maquis\\u2019 are allowed to reopen. Schools will be allowed to reopen on 25 May.\\nGatherings are limited to 200 people.\\n\"},HR:{info:\"Foreign nationals, traveling to Croatia may be ordered to self-isolate or spend 14 days in official government quarantine facilities. Placement in quarantine is at the expense of the traveler. The measures of self-isolation or quarantine do not apply to individuals transiting Croatia, for which evidence of status and eligibility to enter that country- before Croatia- can permit entry for transit.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://hr.usembassy.gov/covid-19-information-2/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nBorder crossings have been restricted. Croatian citizens and residents are allowed to return to Croatia and travel abroad. \\nAdditionally: Return to countries of origin will be granted to nationals of the EU Member States (Member States of the Schengen Area and Schengen countries and their families), and third-country nationals who are long-term residents under EU directives, national law or are holding national long-stay visas. Until the end of 2020, UK citizens will be treated the same way as EU citizens. Entry is allowed for work reasons for citizens of EU member states and their families, third country nationals who are long term residents, and people with long term visas without the need to self isolate. EU citizens are allowed to enter/exit Croatia in case of economical, business or tourist activities (confirmed by documents such as reservations). Travellers can contact uzg.covid@mup.hr to confirm if their trip meets all necessary conditions. Exceptions to this ban are people who travel for reasons of emergency. All border crossings with Hungary, Montenegro and Serbia are closed for all traffic except for citizens of these countries and freight vehicles. Freight transport is restricted to the following border crossings:Bregana & Macelj (HR/SI), Gorican & Dubosevica (HR/HU), Gradiska, Samac & Nova Sela (HR/BA) and Bajakovo (RS). Ferry services to and from Italy have been suspended.\\n\\nRelaxation in restrictions\\nIn-country public transportation (air, land and rail traffic as well as boats) has resumed. No pass is needed to travel anymore.\"},CU:{info:\"Authorities may isolate individuals arriving from COVID-19 high risk countries, or those exhibiting symptoms similar to COVID-19, as well as require screening and evaluation at a local hospital or clinic. Individuals who require quarantine will be transferred to select facilities to complete treatment in isolation for 14 days.\",updated_at:\"2020-05-18\",source:\"https://www.iata.org/contentassets/da2e84dddf924d398778798e7f566c23/cuba-ncov-measures.pdf\\nhttps://cu.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government plans to reopen airports on 7 July (Miami Herald, 16.05.2020)\\nCuba suspended all commercial flights until 31 May.\\n\\n\\nPassengers are not allowed to enter Cuba.\\n- This does not apply to nationals of Cuba resident in Cuba, who will be subject to 14-day quarantine.\\n- This does not apply to passengers with permanent or temporal residence in Cuba, who will be subject to 14-day quarantine.\\nEffective 02 April 2020:\\nFlights to Cuba are suspended.\\n- This does not apply to humanitarian flights.\\n\\nInternal restrictions:\\nLocal governments have been implementing lockdown measures thus far on a locality-by-locality basis. For example, Camilo Cienfuegos (Pinar del Rio province) and the El Carmelo section of the capital Havana have been placed on lockdown, with entry and exit from the areas prohibited until further notice. \\nAll public transportation has been suspended until further notice..\\nNightly curfews remain in effect in Santiago de Cuba from 19.00 and in Consolacion del Sur from 20.00.  \"},CW:{info:\"All inbound passengers will be subject to a mandatory quarantine of 14 days at a location indicated by the minister of health. \",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://cw.usconsulate.gov/news-events/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nSuspension of inbound and outbound commercial flights until 31 May.\\nThe following types of personnel are allowed to enter Curacao, if they have a verification letter from the government of Curacao:\\nCura\\xE7ao residents approved by the Government of Cura\\xE7ao.\\nMedical specialists and other medical personnel who are authorized by the Government of Cura\\xE7ao.\\nOther persons specifically approved by the Government of Cura\\xE7ao\\nAll inbound passengers will be subject to a mandatory quarantine of 14 days at a location indicated by the minister of health.\\n\\nConditions and internal restrictions:\\nAll public transportation has been suspended until further notice.\\nNightly curfews remain in effect in Santiago de Cuba from 19.00 and in Consolacion del Sur from 20.00.\\nA \\u2018shelter-in-place\\u2019 order was lifted on 8 May. A nightly curfew remains in effect from 21.00 to 06.00.\\n\"},CY:{info:\"Cyprus: All incoming travelers are subject to 14-day quarantine at a government-designated facility. TRNC: Turkish Cypriots entering the area from abroad are subject to a mandatory 14-day quarantine at a \\u201Cstate\\u201D quarantine center, followed by a seven-day home quarantine. \",updated_at:\"2020-05-23\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://cy.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Cyprus will reopen its airports for flights from 19 countries on June 9 and will allow hotels to reopen as of June 1. (FG, 23.05.2020) \\n\\n1. Flights to Cyprus are suspended.\\n- This does not apply to repatriation flights or empty aircraft arriving to transport persons wishing to leave Cyprus.\\n2. Nationals and residents of Cyprus are subject to a mandatory 14-day quarantine.\\n\\nInternational restrictions:  International commercial flights are suspended until at least 28 May, except for repatriation flights for Cypriot citizens and foreign nationals. Cargo flights are operating as normal.\\nIn the self-declared \\u2018Turkish Republic of Northern Cyprus\\u2019 (\\u2018TRNC\\u2019), only TRNC ID holders and their spouses and children - regardless of their nationality - are allowed to enter the territory.\\nWithin the TRNC, all patrons are required to wear face masks when outside during the Holy Islamic month of Ramadan (24 April- tentatively 23 May).\\nAll nationals are barred from entry for tourist purposes until further notice, exemption to be made for Cyprus residents, those working in the Republic, attending educational institutions in the Republic or, with prior authorisation from the Cypriot government, have unavoidable professional obligations.\\nAll individuals entering Cyprus will undergo COVID-19 screenings and 14-day quarantine at designated medical facilities. Self-isolation may be possible, at the approval of the Ministry of Health.\\n\\nInternal restrictions: \\nAll unnecessary movement is banned with certain exceptions. All people must carry identification and proof as to the purpose of their movement. Parks, playgrounds, open-air sport spaces, and public gathering areas will be closed to the public.\\nCurfew restrictions have been partially relaxed from 4 May to 22.00 \\u2013 06.00 (local time) until 21 May \\u2013 when all movement restrictions will be lifted.\\nSupermarkets, bakeries, butchers and other retails shops will be closed on Sundays, but are still permitted to conduct deliveries. A maximum of three occupants may be transported by vehicle at once. All public gatherings have been banned, including private visits to homes. The fine for those found disobeying the ban on movement has been doubled to \\u20AC300.\\nThe overnight curfew applies to everyone except those who need to be at work during those hours, who will have to carry a confirmation form signed by their employer (Form A).\\nPeople are only allowed to leave their homes once a day and only if they receive permission after sending a text message to 8998. Only those over 65 will be allowed to fill out the printed form (Form B). \\n\\nRelaxation of restrictions: \\nShops and restaurants will gradually be reopened throughout four stages, the next one will be on 21 May, 9 June, and the last one on 14 June. Details are found here. (In Greek)\\nAll public schools in the Republic of Cyprus will reopen on 21 May.\\nHotels are allowed to resume operations from 9 June.\\n\\n\\nTRNC - A curfew is in effect from 21.00 to 06.00. Individuals are only allowed to leave their residences for essential goods and services. Public sector employees, excluding police, fire department, health, civil aviation, finance and similar services, have been placed on administrative leave. Private sector businesses are closed except essential stores. Pharmacies will only be open between 08.00 and 13.00, though on-call pharmacies will stay open till 01.30. \"},CZ:{info:\"From March 31, a mandatory 14-day quarantine is now compulsory for everyone returning from abroad.  This does not pertain to transit through the country. \\nA general quarantine applies to every individual located in the Czech Republic. People are required to stay home, except for going to work and carrying out essential duties.\",updated_at:\"2020-05-20\",source:\"https://cz.usembassy.gov/covid-19-information/\\nhttps://www.schengenvisainfo.com/news/czech-republic-prolongs-air-and-land-border-controls-with-austria-and-germany-until-april-24/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nEntry to the Czech Republic is only permitted for those with a valid reason. Valid reasons include: Holders of permanent or long-term (more than 90 days) residence permits; EU citizens travelling to the Czech Republic for business if the stay does not exceed 72 hours and a negative PCR test is provided; Students of EU universities under certain conditions (see the website of the Ministry of the Interior for details); Third-country nationals working in key sectors (see the website for details); EU nationals transiting through the Czech Republic to their home countries; Cross-border workers who must submit all relevant documentation when crossing the national border and provide a negative test for COVID-19 every 14 days to be able to enter the country. The government has lifted the ban on non-essential movements and travel abroad. This only applies to Czech citizens and residents who wish to leave the country; tourism into the country is still not permitted. Upon their return from abroad, they will have to produce a negative certificate for COVID-19 (the test should not be older than four days) or self-quarantine for a 14-day period. No test has to be provided if the stay abroad was less than 72 hours long. Foreigners who are exempt from entry restrictions are also obliged to present a valid certificate or self-quarantine. Authorities announced that internationals whose visas or residence permits have expired, amid the Coronavirus, will be allowed to stay in the Czech Republic until July 17.\\n \\nInternal restrictions:\\nAll individuals outside of their home must cover their mouth and nose with either a prospective medical mask, self-made mask or scarf.\\n\\nRelaxation in restrictions\\nShopping centres, restaurants, cafes and pubs with gardens have reopened. All shops and other establishments are due to have reopened by 25 May (although this remains tentative). Gatherings up to 300 people will be allowed from 25 May. On 20 May, national authorities proposed a further easing on border restrictions from 8 June, when people coming from low-risk countries, such as Austria, Croatia or Slovakia, would not need a negative test to enter the country.\"},KP:{info:\"All entries into DPRK are subject to quarantine measures of 30 days in a government designated facility. \",updated_at:\"2020-04-30\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nBorders closed for all foreign tourists.\\nAll foreign nationals have been released from a 30-day quarantine.\\nChina-North Korea border (Dandong-Sinuiju border) remains closed indefinitely. \\n   \\nInternal restrictions: \\nThe COVID-19 national emergency has been extended to the end of the year.\"},CD:{info:\"Self-quarantine requirement on all travelers arriving in the DRC who have been to COVID'-19 affected countries in the 14 days prior to their arrival in the DRC.\",updated_at:\"2020-05-19\",source:\"UNHAS\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://cd.usembassy.gov/covid-19-information/\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"City of Goma will be under confinement for 14 days (OSAC, 20.05.2020)\\n\\n1. Flights to Congo (Dem. Rep.) are suspended.\\n- This does not apply to pre-approved repatriation flights.\\n2. Passengers and airline crew must go through medical screening upon arrival and present a completed Health Sanitary Card provided by Health Authorities.\\n\\nUNHAS is flying but very reduced and restricted.  \\n\\nInternational restrictions:\\nAll air, land and maritime borders are closed until further notice. Only cargo trucks/planes will be granted access. Should entry be permitted on an exceptional basis, all travellers entering the DRC are to be subject to screening, including temperature checks. Those suspected of having coronavirus will be placed into quarantine, likely in local health centres, for up to 14 days.\\n\\nInternal restrictions:\\nThe \\u2018state of emergency\\u2019 has been extended until at least 22 May nationwide. All flights and other types of transportation between Kinshasa and other urban centres have been banned, with exceptions for transportation of cargo. Access to the capital Kinshasa\\u2019s Gombe is restricted and requires access badges. Only five access points with security control remain open to access Gombe district. The wearing of face masks in public across Kinshasa is mandatory (infractions may be punished with fines). All public gatherings in Kinshasa have been prohibited. Bars, restaurants, schools and universities are closed until further notice. Wearing a face mask when in all public places is compulsory in Lubumbashi. Those who fail to comply with the measure will be subject to a 5000 CFA franc fine. Travellers entering Ituri province have to self quarantine for 14 days. North Kivu province: Passage into and out of Goma and the surrounding Rutshuru territory will be barred for 14 days from 19 May. In addition, a dawn-to-dusk curfew will be imposed from 20 May. The restriction will affect domestic flights and boat traffic to/from Bukavu. Only markets selling essential supplies are permitted to stay open and it is compulsory to wear a facemask. Kongo central: it is now compulsory to wear a face mask while using public transport and in public places. South Kivu province: all transport hubs (port and airport) and roads with neighbourhood provinces are closed in order to isolate the regional capital Bukavu until further notice. Only essential movements are allowed. It is mandatory to wear a face mask in Bukavu and the rest of the province. Self-isolation for people at risk (over 60 or with existing health issues) is mandatory in all the provinces. Lualaba province: nightly curfew between 22.00 to 05.00.\\n\\nRelaxation in restrictions\\nAir traffic has been reopened between North-Kivu province and Ituri, Maniema and Tshopo provinces.\\nA temporary easing of restrictions in Gombe has started with the reopening of supermarkets, grocery stores and bank counters amid sanitarian checkpoints at Gombe district entrances.\"},DK:{info:\"Danish authorities recommend that those who have traveled to a risk area take measures to isolate at home and avoid close contact with others for 14 days after return to Denmark. The Danish authorities say this measure applies to both children and adults.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://dk.usembassy.gov/u-s-citizen-services/security-and-travel-information/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nBorders are closed at least until 1 June. Citizens, EU nationals with a Danish social security card, and third country nationals with Danish residency permits will still be allowed to enter. Non-residents of other nationalities will need a valid reason to travel to Denmark to be allowed in. Internal border controls with other Schengen area members will remain in place until 12 November. The restrictions do not apply for passengers in transit or with connecting flights, and who can provide/present a valid ticket for their next destination which must be non-domestic. Swedish passengers are allowed to arrive in CPH if they are going straight to Sweden via train or car. The border closures will impact a significant number of train, air and ferry routes. Only transport of goods into Denmark will continue. Only three land ports between Denmark and Germany will remain operational: Fr\\xF8slev, Krus\\xE5 and S\\xE6d. \\n \\nInternal restrictions:\\nA ban on gatherings of more than ten people remains in place. Large gatherings of 500 people or more will be banned until September.\\nAll commercial internal flights are suspended.\\n \\nRelaxation of restrictions\\nFrom 8 June, gatherings with 30-50 participants, cultural activities, indoor sports and other activities shall be authorised.\"},DJ:{info:\"Quarantined cases are currently being held at Bouffard Hospital in Djibouti City. Al Rahma hospital was added as a secondary COVID-19 treatment site supplementing the Arta Regional Hospital in Arta.\",updated_at:\"2020-05-20\",source:\"UNHAS source:  \\nhttps://dj.usembassy.gov/covid-19-information-26-march-2020/\\nhttps://www.osac.gov/Content/Report/afff3e75-13cd-4a8f-be9d-18942a94479e\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Public transport will resume as government plans to begin lifting lockdown measures; border restrictions remain in place (France24,11.05.2020)\\n\\nUNHAS ops suspended. \\n\\nInternational restrictions:\\nAll international travel in and out of Djibouti is suspended, including humanitarian flights, until 1 September. Cargo movements are permitted. Railway and boat travel is also suspended. Land and sea borders are closed until 1 September. Those who arrived in Djibouti in the past 14 days to be tested for COVID-19 and stay home for a period of 14 days.\\n\\nConditions and internal restrictions:\\nA lockdown will continue to be eased from 17 May. Under the lockdown all public and private entities are closed for a week and staff must stay at home on paid leave. Essential services are exempt (food markets, pharmacies, banks and gas stations). \\nInternal transport is subject to restrictions, including passenger limitations and additional sanitisation practices. Passengers buses and trains will be limited. Schools, mosques, sport events and bars were also closed prior to the lockdown.\\n\\nRelaxations of restrictions: \\nDjibouti plans to begin lifting lockdown measures from Monday 11 May largely for economic reasons. (France 24, 11.05.2020) \"},DM:{info:\"A 14-day mandatory quarantine is in place.\",updated_at:\"2020-05-11\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1.Passengers are not allowed to enter Dominica.\\n-This does not apply to nationals of Dominica who will be placed in a 14-day mandatory quarantine.\\n2.Airline crew is not allowed to disembark.\\n \\nInternational restrictions:\\nDouglas Charles Airport is closed effectively restricting all entry into the country. \\nThere are currently no known restrictions on individuals seeking to depart the country.\\n   \\n Internal restrictions:\\nA nightly curfew is in place from 19.00 to 05.00 on weekdays and a total lockdown during the weekends and holidays until 25 May.\\nAuthorities established a hotline number +1 767 448 2151. \"},DO:{info:\"The Ministry of Health advises of mandatory quarantine or self-quarantine for COVID-19 positive patients.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://do.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Major US airlines plan to resume flights to the Dominican Republic as soon as the end of May and the beginning of June. (Dominican Today, 04.05.2020) \\n\\nInbound restrictions:\\nBorders are closed to foreign visitors until at least 1 June. There is a quarantine requirement for visitors who have been in Europe, China, South Korea or Iran during the previous two weeks.\\n \\nOutbound restrictions\\nAll borders are closed until 1 June. Exemption only granted for flights repatriating foreigners and all-cargo flights.\\n \\nConditions and internal restrictions:\\nNationwide curfew from 19.00 to 05.00 on Monday-Saturday and from 17.00 to 05.00 on Sundays until 1 June. Government plans to reopen the economy in four phases, beginning on 20 May. During the first phase, businesses will be allowed to operate with up to 50% of their workforce. State public transport will resume operations from 06.00 to 18.00 at 30% of its passenger capacity. Educational institutions and recreational and leisure facilities will remain closed. Social distancing measures and facemasks are required in public. Details of the remaining phases have yet to be announced.\\n\"},EC:{info:\"Current nationwide quarantine and travel restrictions in place. People who experience coronavirus symptoms during quarantine isolation \\u2013 or at any time \\u2013 should immediately report themselves to local health authorities, to activate corresponding health protocols. Individuals with symptoms may call 171 or 911.\",updated_at:\"2020-05-23\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ec.usembassy.gov/covid-19-information-ecu-2/\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passenger flights will be resumed starting from June. The resumption will be gradual depending on the demand and airlines' readiness to do that. (UP, 23.05.2020) \\n\\nInbound restrictions:\\nEntry restrictions are in place until at least 31 May. Air, land and sea borders are closed. Entry is prohibited to all travellers, including Ecuadorian nationals and residents.\\nThe Minister of Transport announced airport operations to resume on 1 June with restrictions in place.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country, but flight availability is limited. Several flights are available to the US between 15-25 May, information available on the US Embassy in Ecuador website.\\n\\nConditions and internal restrictions:\\nDomestic flights and interstate travel are suspended until 31 May.\\nAll individuals are required to wear masks in public.\\nFrom 4 May, provincial authorities will determine the alert level applicable for their region based on a three-tiered system announced by the government: red, yellow and green. Each level entails varying degrees of restrictions and curfews.\\nAs of 4 May, all areas of the country are under the \\u2018red\\u2019 level alert. This entails a daily quarantine from 14.00 to 05.00. Non-essential businesses may resume limited operations; these must remain closed to in-person customers and may only fulfill online and telephone orders by delivery. Taxis may now operate until 22.00.\\nAll persons are required to use face masks when in public until further notice.\\nPersons over 60 years old or with underlying medical conditions are required to self-isolate until 31 May.\\nPrivate car traffic is permitted on certain days according to license plate; prohibited during weekends.\\nPublic gatherings and events are suspended until the end of May.\"},EG:{info:'News reports (Egytian Streets, 19.05.2020) indicate that \"Egypt Reduces Mandatory Quarantine for Overseas Arrivals to Seven Days\".\\nThe Egyptian authorities may impose mandatory quarantine for visitors who test positive for coronavirus in a government isolation hospital, potentially in a remote location. Access for family members could be heavily restricted or impossible. \\nAll returning citizens have to sign an acknowledgement agreeing to go through mandatory quarantine before allowed to board flights home. They will be quarantined for 14 days in a place determined by the Health Ministry. ',updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://eg.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends halt to all international passenger flights until further notice (Reuters, 19.05.2020) Egypt Reduces Mandatory Quarantine for Overseas Arrivals to Seven Days (Egyptian Streets, 19.05.2020)\\nThis does not apply to: a. Aircraft in state of emergency; b. Technical landing; c. Humanitarian, medevac or repatriation flights; d. United nations flights; e. Domestic flights.\\nExcept for aircraft in state of emergency, all other exemptions flights must obtain a pre-authorization from the Egyptian Civil Aviation Authority.\\n\\nInternational restrictions:\\nInternational passenger flights are suspended. Cargo flights and domestic flights are unaffected.\\nEgypt has banned Qataris from entering the country after Qatar banned Egyptian citizens from entering the Gulf state.\\nEgyptAir has suspended its daily flights to Kuwait; flights to Khartoum (Sudan) are suspended until further notice.\\nPeople who have been in Bahrain, China (Hong Kong and Macao SARs), France, Germany, Iran, Iraq, Italy, Japan, Kuwait, Malaysia, Singapore, South Korea, Spain, Switzerland, Thailand, or Vietnam will be screened upon arrival, and followed up with for a period of 7 days.\\nAll returning citizens have to sign an acknowledgement agreeing to go through mandatory quarantine before allowed to board flights home. They will be quarantined for 14 days in a place determined by the Health Ministry.\\n\\nInternal restrictions:\\nA night-time curfew is in place from 21.00 until 06.00 until 23 May. All public transport is closed during the curfew.\\nFrom 24 to 29 May, the curfew will run between 17.00 and 06.00 coinciding with the six-day Eid holiday period. During those days, public transport will be halted and non-essential shops, restaurants and parks will continue to remain closed.\\nStarting on 30 May and until further notice, the curfew will run from 20.00 to 06.00.\\nAll retail stores and shops remain open (including during the weekends) although they are required to close at 17.00.\\nThe state of emergency was extended on 28 April for at least three months.\\nCurfew was also announced in some areas of North Sinai governorate from 19.00 to 06.00, with an exception to the capital of governorate al-Arish, where night-time curfew timing is 01.00-05.00.\"},SV:{info:\"For travellers: Anyone with flu-like symptoms will not be allowed to board a flight. Travelers exhibiting flu-like symptoms should not come to the airport. These individuals should self-quarantine and seek medical attention if their symptoms worsen.\\n\\n\",updated_at:\"2020-05-06\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iata.org/contentassets/da272263fc544d48b09f67792c332a17/el-salvador-ncov-measures.pdf\\nhttps://sv.usembassy.gov/covid-19-information/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends lockdown until 6 June (Reuters, 19.05.2020)\\n\\nEl Salvador International Airport San Oscar Arnulfo Romero y Galdamez is closed until further notice. \\n- This does not apply to US military flights (CSL), humanitarian aid flights, ambulance flights, ferry/maintenance flights, repatriation flights with a special clearance.  \\n\\nCivil Aviation Authority has lifted restrictions of operations to/from Mexico (effective when the authorities reopen the airport). \\n\\nAir cargo employees are exempt from this measure. \\n\\nPresident Bukele issued a \\u201Cred alert\\u201D which imposes several emergency measures that limit free movement in the country. Refusal of entry for any person who is not a resident of El Salvador or diplomat accredited in the country. Passengers in transit are allowed.  \\n\\nQuarantine: 30 days for citizens and diplomats accredited in El Salvador who return to the country. \\n\\nConditions and internal restrictions:\\nThe current state of emergency in El Salvador expires on 22 May.\\n\\nDuring this time, only one person per household may leave their homes twice a week for essential purposes, according to the last number on their ID. Workers considered essential personnel are exempt from these laws.\\nOnly banks, pharmacies, and supermarkets are allowed to be open for services. Restaurants may only have the option of food delivery; take-out or dine-in services are prohibited. \\nTravel between municipalities is prohibited.\\nBreaking quarantine may result in the seizure of the vehicle. Furthermore, persons violating the quarantine will undergo a medical examination and if considered \\u201Csuspected case of COVID-19\\u201D they will undergo a 15 day quarantine at a containment center.\"},GQ:{info:\"All travellers who recently travelled to countries hard-hit by COVID-19 will be subject to quarantine upon arrival for 14 days at a government-designated quarantine site.\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://gq.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll travellers from affected countries, both nationals and expatriates, will be quarantined for 14 days. All international inbound and outbound commercial flights are suspended, with the exception of cargo transport flights and the weekly flight for international carriers. All maritime and air land borders are closed with the exception of ships with commercial merchandise, work materials and equipment. Internal flights are operational. Cronos Airlines has suspended all domestic flights.\\n\\nInternal restrictions:\\nA \\u2018state of alarm\\u2019 is in place until at least 31 May. The countrywide lockdown and the total containment of Malabo and Bata has been extended until 31 May. Movement within the country has been restricted to essential reasons only. The use of masks and gloves when outside has been made compulsory. All shops and factories are closed, except for those providing essential services such as food and medicine. Restaurants are also closed - except for food delivery. All gatherings of more than ten people are prohibited until further notice. Additional measures for the mainland include: The wearing of face masks in public is mandatory. Additional sanitary measures have been implemented at border crossings of Ebebiyin, Mocomiseng and Rio Campo.\"},ER:{info:\"Eritrean health authorities may quarantine travelers with risk factors for COVID-19.\",updated_at:\"2020-04-29\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://er.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAsmara International Airport is closed indefinitely. Land borders are also closed.\\n\\nInternal restrictions:\\nA nationwide lockdown is in place until further notice.\\nSchools and universities are closed until further notice.\\nSporting events, festivals, and gatherings larger than ten people have been banned.\\nNon-essential domestic movement remains proscribed. \\n\\n\"},EE:{info:\"If a case is identified, the individual will be put in isolation. The Health Board will reach out to those who were possibly in close contact with an affected individual, and advise them to limit their social engagements.  If possible, people who were potentially exposed to the virus are encouraged to voluntarily quarantine themselves at home and continuously monitor their own health.\",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ee.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government lifts Emergency Situation; some restrictions still in place (OSAC, 18.05.2020) The Estonian government has banned direct flights to several high-risk coronavirus countries in Europe: Belarus, Belgium, Denmark, The Russian Federation, Sweden, Turkey, U.K. from 17 May. (ERR, 18.05.2020) \\n\\nThe only travellers that will be allowed to enter will be: citizens of Estonia, holders of an Estonian residency permit or right of residence, including so-called grey passport holders, as well as foreign citizens whose family members live in Estonia. Foreigners will be allowed to transit Estonia on the way to their home country if they do not show symptoms of COVID-19. No exit ban will be imposed.\\nCitizens of Estonia, Latvia and Lithuania are free to move between the three countries without restrictions or quarantine - however anyone crossing the border should wear a face mask.\\n\\nDue to new restrictions from Finnish authorities, effective April 11, all passenger traffic on ferries from Tallinn to Helsinki is currently suspended. \\n\\nInternal restrictions:\\nThe state of emergency will be lifted at 00.00, 18 May.\\nAll public events indoors are banned until 30 June.\\nSchools and universities are closed until further notice.\\nMuseums, movie theatres, shopping centres will remain closed until further notice.\\nA two-meter distance should be kept between people in public places.\\nGatherings of more than two people are prohibited; the ban does not apply to people living in the same household.\\n\\nRelaxation of restrictions:\\nAnnouncement on 17 May confirms:\\nSchools are gradually re-opening.\\nSports can be played with up to ten people participating with available disinfectants.\\nPublic meetings of up to ten people are allowed.\\nFrom 1 June the following are opening: entertainment venues, saunas, spas, water centres, informal education and hobby classes, sports can be played with up to 100 people watching, or up to 50% capacity without an audience. Public meetings of up to 50 people will be allowed.\\nFrom 1 July: catering establishments can open without restrictions, cinema, concerts, conferences, festivals and more are allowed to restart operations up to 50% capacity. Public meetings of up to 500 people will be allowed.\"},SZ:{info:\"Persons exposed to an individual with possible infection are requested to self-quarantine for 14 days with follow-up by the Ministry of Health.\",updated_at:\"2020-05-16\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://sz.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Neighbouring South Africa is the only foreign destination served by eSwatini's international airport. However, the suspension of all international flights by South African authorities means that there will be no flights to and from eSwatini in the coming weeks.\\n\\nThe country\\u2019s borders are closed, except for returning citizens and legal residents who are subject to a 14-day quarantine upon arrival.\\n\\nForeign nationals from high-risk countries will not be allowed to enter Eswatini until further notice. Visas already issued are revoked.\\n\\nThe current state of emergency will be in place until at least 19 June.\\n\\nA partial lockdown has been extended until at least 19 June. Unnecessary travel within cities, towns, communities and beyond, except for instances of providing or acquiring essential services such as healthcare, food, or banking services, is halted. All gatherings of more than 20 people are prohibited, those with fewer than 20 people should observe proper hygiene standards and social distancing of one-two metres. Businesses have been told to allow employees to work from home. Essential businesses are allowed to operate but non-essential businesses are advised to reduce the number of staff working in the premises.\\n\\nAll travel between cities and regions require written permission given by the local authorities. The police have set up checkpoints along the highways to assure public adherence. Individuals must carry a permit with them at all times.\\n\\nPublic transport is only available for essential movement.\"},ET:{info:\"For travellers arriving in Ethiopia as a final destination:  Individuals must quarantine at their own expense at one of these designated hotels:\\nSkylight Hotel \\u2013 reservation@ethiopianskylighthotel.com or +251 116 818 181\\nGhion Hotel \\u2013 info@ghionhotel.com or +251 115 513 222\\nThe Skylight Hotel should be the first choice since it is in close proximity to the airport.  \\nTransit passengers are also strongly advised to have their onward ticket be for a same-day connecting flight. Bole International Airport authorities are not allowing passengers to stay overnight in the airport. Transit passengers who do not have same-day connecting flights will be required to spend the night in a designated hotel at their own expense.\\nSymptomatic Passengers: If any transiting passengers appear symptomatic for COVID-19 (likely manifested through the presence of a fever), they will be taken to Bole Chefa Health clinic to be further tested.  These individuals must remain under the supervision of medical professionals within Ethiopia until cleared.\",updated_at:\"2020-05-18\",source:\"Media \\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://et.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"A national state of emergency was declared on 8 April for five months. \\nEffective 23 March 2020, all passengers arriving in Ethiopia will be placed in a mandatory quarantine at the Ethiopian Skylight Hotel for 14 days at their own expense. \\n\\nUHHAS Cargo ops still ongoing.  \\n\\nInternational restrictions:\\nEthiopian airlines has suspended air traffic to over 110 countries. Domestic flights and cargo flights are still operational.\\nTransit through the capital Addis Ababa is still possible if passengers have onward tickets in hand upon arrival at Bole International Airport for a same-day connecting flight. Otherwise, they are likely to be quarantined in a designated hotel at their own expense. Transit passengers are not allowed to stay overnight in the airport. Those who do not have same-day connecting flights will be required to spend the night in a designated hotel at their own expense.\\nAll incoming travellers will undergo a mandatory quarantine at the Ethiopian Skylight Hotel for 14 days at the passenger expense. \\nDiplomats will be quarantined at their respective embassies. \\nThe 14-day quarantine does not apply to transit passengers. \\nTransit passengers holding connecting flight bookings will stay at the Ethiopian Skylight Hotel until their connecting flight.\\nAll land borders have been closed except for cargo traffic. \\n   \\nInternal restrictions: \\nA national state of emergency is in place until September.\\nHandshakes and religious, political and other official gatherings of more than four people are prohibited. While exceptions might be made for funeral services and essential services under special circumstances, all attendees will be required to maintain a two metre distance.\\nWhile some public transport services remain operational, passenger occupancy cannot exceed 50 percent of all seats. The same applies to private vehicles, which are also only allowed to travel on alternating days according to the last number of their license plate. \\nEducational institutions, bars and nightclubs remain closed. \\nState-of-emergency provisions prohibit employers from terminating employment contracts, while landlords are not allowed to evict tenants or raise rent.\\nWithin the Tigray region, an emergency-rule order has been imposed until June: inter-state long travel is banned, as well as weddings and other festivities which could lead to large gatherings. Markets, night clubs, bars and khat places are also closed.\\nThe Afar, Amhara, Benishangul-Gumuz, Harari, Oromia, Somali, and the Southern Nations, Nationalities, and People\\xE2\\u20AC\\u2122s region state governments have banned cross-country public transportation through their regions and personally-owned vehicles are restricted to three passengers. Travellers should expect checkpoints during travel for COVID-19 related screenings.\"},FK:{info:null,updated_at:\"2020-05-11\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers are not allowed to enter Falkland Isl. (Malvinas).\\n- This does not apply to returning residents, passengers with Falkland Isl. (Malvinas) status, passengers with a residence or work permit.\\n- This does not apply to passengers traveling on official business for the Falkland Isl. (Malvinas)'s Government and passengers with a permission to travel given by the Falkland Isl. (Malvinas)'s Government. They must have evidence of proof of travel.\"},FO:{info:null,updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Faroe Islands has banned entry for foreign travellers until at least 30 June, unless their travel is essential.\"},FJ:{info:\"All foreign nationals who have visited or transited through mainland China, Iran, South Korea, the US and all of Europe including the UK within 14 days prior to arrival will be denied entry. All cruise ships are banned from entering the country. Returning nationals are required to undergo a self-quarantine for 28 days. \",updated_at:\"2020-04-30\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttp://www.immigration.gov.fj/\\nhttps://fj.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Travelers to Fiji will be asked to complete a health declaration form that will be examined by health officials upon arrival in Fiji. Travelers will also be screened on arrival with handheld temperature scanners, and their travel history and health status will be screened by border agents. Arriving travelers may be required to self-isolate for 14 days at the discretion of local officials.\\n\\nInternational restrictions:\\n  Nadi Airport is closed to all scheduled passenger travel. \\n Transit through Fiji is banned until further notice.\\n All passenger travel to the outer islands has ceased.\\n All foreign nationals who have visited or transited through mainland China, Iran, South Korea, the US and all of Europe including the UK within 14 days prior to arrival will be denied entry. All cruise ships are banned from entering the country. Returning nationals are required to undergo a self-quarantine for 28 days.\\n National carrier Fiji Airways has suspended all domestic flights; only Fiji Link flights are operating at reduced frequency between Nadi and Suva.\\n Cruise ships are barred from entry.\\n   \\n Internal restrictions:\\n  A nationwide curfew operates from 20.00 to 05.00. \\n The lockdowns of the Greater Lautoka Area (Western division) and Suva (Central division) have been lifted, though the nationwide curfew remains in place. Schools in Fiji will remain closed until 15 June. Fiji Link airlines has resumed limited domestic services between Nadi and Suva.\\n Gatherings of more than 20 people are banned. \"},FI:{info:\"Effective May 14, a person arriving in the country must restrict unnecessary close contacts and enter self-isolation for 14 days. Under self-isolation, the person is allowed to move between their workplace and place of residence and for other essential reasons. Further guidance is available at this website. At-risk travelers experiencing symptoms are advised to contact medial authorities.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://fi.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAll land, sea and air borders remain closed at least until 14 June. Groups that are allowed to cross the border: Entry is permitted for Finnish nationals and their family members, nationals of other EU and Schengen member countries who are residing in Finland with their family members and third country nationals with a Finnish residence permit. Transit is allowed for EU and Schengen nationals, third country nationals residing in another EU or Schengen country with a residence permit. Any foregin traveller wishing to leave Finland A number of groups are allowed to travel for work and other essential reasons, these include: employment or commission-related commuting, health care and emergency professionals, diplomats, staff of international organisations, military personnel and humanitarian aid workers, commercial and transport personnel; for a full list see the Finnish Border Guard\\u2019s website. Travellers arriving into the country will have to self-isolate for 14 days, during which travel is only permitted to the workplace, residence and essential movements. Air travel is suspended, however, Helsinki-Vantaa airport and Mariehamn airport still operate some approved international links. Cargo traffic is not impacted by the restrictions.\\nAll ferry services to Germany and Sweden are suspended and will remain so until at least 31 of May. Ferries to Estonia resumed on 14 May.\\n\\nInternal restrictions:\\nA state of emergency is in place until at least 1 June. Gatherings of more than ten people are banned. All restaurants and bars will remain closed until 31 May. \\n\\nRelaxation of restrictions:\\nAuthorities have announced a gradual three-phases plan to ease the restrictions: From 14 May, commuting traffic through the Schengen border has partially resumed, under conditions to be reviewed before that date. Schools and outdoor recreational facilities will reopen. From 1 June, bars and restaurants will partially reopen when it is safe to do so. The ban on gatherings will be applied only to groups of more than 50 people. From 31 July, all public events are expected to resume if it is safe to do so.\"},FR:{info:\"Only travelers returning on government-provided evacuation flights are placed in quarantine. A confinement order was put into effect throughout France starting  17 March, for a minimum of fifteen days.\",updated_at:\"2020-05-20\",source:\"https://fr.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nFrench citizens, permanent residents and nationals of the EU/ Schengen area and assimilated countries (Andorra, Iceland, Liechtenstein, Monaco, Norway, San Marino, Switzerland, the Holy See and the UK) are authorised to enter the country only for specific reasons below, until at least 15 June:\\nPersons who have their main residence in France, and their spouses and children; persons in transit through France to their residence, and their spouses and children; Healthcare professionals for the purposes of combating COVID-19; transporters of goods, including sailors; crews and personnel operating passenger and cargo flights, or travelling as passengers to reach their departure base; personnel of diplomatic and consular missions, as well as international organisations headquartered or having an office in France, holding a special residence permit or a visa D \\u201Ccarte PROMAE\\u201D; cross-border workers at internal land borders. Details are available on the government website.\\nLand border checks have been put into place until 30 October. Filling in an INTERNATIONAL TRAVEL CERTIFICATE TO MAINLAND FRANCE is compulsory and can be downloaded in French or English here.\\nFollowing the extension of the state of emergency, all travellers, except for those arriving from the UK/Schengen area/European Union, face a 14-day compulsory quarantine and possible isolation when entering the country until further notice. Spanish travellers are subject to a 14-day mandatory quarantine, in a reciprocal move after Spain\\u2019s decision to quarantine all arrivals, including from the Schengen area.\\nEurostar services: While trains continue to operate from France to the UK and Belgium, they do so at a reduced capacity. Passengers must wear a facemask or any other type of face covering at the stations and on board.\\nThalys services: All passengers are required to wear a facemask. From 9 June, the rail operator will increase train frequency, to five daily round trips between Brussels and Paris (except on Sundays), and more trains linking Amsterdam, Dortmund and Paris.\\n\\nInternal restrictions:\\nA level-three emergency (on a three-tier scale) has been declared allowing for additional restrictions and measures to stem the spread of COVID-19. From 11 May, the first stage of relaxation of measures began nationwide, except for in Mayotte. The authorities have divided the country into two zones; a green zone where the risk and spread of the virus is lower, and a red zone where restrictions will be lifted more slowly to limit the spread of the virus. The red zone comprises Ile-de-France (including Paris), Hauts-de-France, Grand Est and Bourgogne-Franche-Comte regions.\\nSince 11 May, movements within 100km of one\\u2019s residence have been allowed without the need to fill in a certificate. Travel over 100km remains limited to essential business and family-related reasons: such movements need to be justified using a certificate available on the interior ministry\\u2019s website in both printable and digital formats.\\nThe use of facemasks by anyone aged over 11 years is mandatory on public transport, with offenders subject to a 135-Euro fine. In public places, the wearing of facemasks is highly recommended. Further related measures may vary by location.\\nGatherings of a maximum of ten people are now allowed.\\nMost businesses have reopened, but cafes, restaurants, nightclubs, ski resorts and all other non-essential businesses remain closed. Those travelling in Ile-de-France during rush hour periods require a certificate from their employer explaining that they cannot work from home.The certificate is available on the government website.\\nSchools have been allowed to reopen progressively, subject to social distancing measures; no more than 15 students per class and ten children in nurseries. Wearing a facemask will be compulsory except for children under 3 years old. Universities will remain closed until the summer.\\nNightly curfews remain in place in several cities, including in Compiegne, Creil and Nogent-sur Oise (all Hauts-de-France region).\\nWhile most airports remain open, several major airports are closed. Paris Charles de Gaulle (CDG) will remain open until further notice. Paris-Beauvais Airport (BVA) has announced a suspension of all commercial flights until further notice. Paris Orly Airport (ORY) is closed until further notice.(LINK)\\nInter-city plane, train and coach services have been reduced.\\nFlights to the overseas departments and regions of Guadeloupe, Guyane, La R\\xE9union, Martinique and Mayotte, Saint Barthelemy and San Martin have been reduced until 15 June.\\nTravellers arriving in La Reunion must quarantine for 14 days.\\nNo cruise ships/passenger ships of over 100 people are allowed into the territorial waters of the French islands.\\nPublic parks and secondary education institutions have reopened in green zones from 18 May.\\n\\nRelaxation of restrictions:\\nA review of further measures is due in late May. From 2 June, public transport should operate at normal capacity. France has agreed to reopen borders with Germany from 15 June.\"},GF:{info:null,updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting French Guiana. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr.\\n2. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (COVID-19).\\n             \\nInternational restrictions: Most international flights remain suspended. Travellers entering French Guiana through Cayenne's Felix Eboue Airport (CAY) will be required to complete an International Travel Certificate and undergo a 14-day quarantine. \\n\\nInternal restrictions: A curfew between 23.00 and 05.00 remains in place. Saint-Georges de l\\u2019Oyapock commune is on lockdown. Shops are allowed to reopen, with a limited number of customers to ensure social distancing. Restaurants, theatres, cinemas and gyms are closed until further notice. The use of face masks is mandatory on public transport. Gatherings of more than ten people are prohibited. However, funerals can be attended by a maximum of 20 people\"},PF:{info:\"All passengers arriving on an international flight will be required to self-quarantine at home or in other housing accommodation on the island of Tahiti for 14 days. Travel to other islands will be granted only after the 14-day period.\",updated_at:\"2020-05-12\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://fj.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. Passengers are not allowed to enter French Polynesia.\\n- This does not apply to passengers who reside in French Polynesia.\\n2. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting French Polynesia. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr.\\n3. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (Covid-19).\\n- This does not apply to airline crew.\\n4. Airline crew for repatriation flights are subject to a medical control and will complete a declaration on honour stating they will have to respect the sanitary measures requirements of self-isolation for 14 days.\\n- This does not apply if they are in transit and stay in the aircraft.\\n- This does not apply if they are authorized to go back on their company flight in case there is layover for one day or one night.\\n\\nInternational restrictions: Non-residents are denied entry until further notice. All passengers arriving in or transiting via French Polynesia are required to present an International Travel Certificate obtained from the French consular office before departure. Travellers coming from mainland France are required to be tested negative for COVID-19 before departing for French Polynesia. Arriving passengers from international flights will be subject to a 14-day self quarantine at their residence. Following the suspension of flights by Air Tahiti Nui until further notice, as well as other suspension by Air France, French Bee, Air New Zealand and United Airlines, commercial air routes out of Tahiti will not be viable until suspensions are lifted. All travellers who have been in Cambodia, mainland China, Hong Kong (SAR China), India, Iran, Italy (Emilia-Romagna, Lombardy and Veneto regions), Japan, Macao (SAR China), Malaysia, Nepal, Philippines, Singapore, South Korea, Sri Lanka, Taiwan, Thailand or Vietnam must have a medical certificate. The medical certificate must be dated from a maximum five days prior to their arrival and must describe the passenger's health condition.\\n\\nInternal restrictions: The authorities have announced a lightened lockdown from 29 April to 13 May. A nightly curfew has been lifted on 7 May. Non-essential movement outside of residences is prohibited until further notice. Those leaving their residences for essential purposes such as food shopping, medical services and essential work, must carry a certificate valid for each trip. Internal restrictions in the outer islands are being eased due to effective containment of the virus. The above restrictions only apply in Tahiti and Moorea. A nightly curfew remains in place in the whole territory from 21.00 until 05.00 daily until 13 May. Domestic air services are suspended. All private and public events are prohibited except for church services. Inter-island travel is banned except for journeys between Tahiti and Moorea. Ferry passengers between Tahiti and Moorea must show they are using the ferry either for work, health issues or an urgent family matter.\"},GA:{info:\"Asymptomatic individuals who test positive for COVID-19 will be placed in home confinement. If conditions for home confinement are not met, they will be confined in another structure reserved for that purpose. Hospitals will be reserved for those with more serious cases.\",updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ga.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All international commercial flights are cancelled. \\nGabonese citizens can enter the country and will be subject to immediate mandatory quarantine. \\nAll land, sea and air borders are closed until further notice, exception for freight and emergencies. \\n\\nInternational restrictions: The nationwide state of emergency ended 12 May. \\nAll parts of the country are subject to a curfew between 6:00 pm and 6:00 am.\\nAir, land, and sea borders remain closed except for repatriation and the transport of food, petroleum, gas, and freight.\\nLong-distance travel between cities is prohibited in the absence of a special authorization from the Gabonese government.\\nPlaces of worship, performance halls, museums, game rooms, motels, bars, and nightclubs will remain closed until further notice.\\nInternational and national conferences, sporting events, political demonstrations, cultural, religious, and sporting events are prohibited.\\nAll persons must wear masks in public.\\n\\nRelaxation of restrictions: Authorities on 8 May announced the end of the state of emergency from 11 May. Restrictions measures and lockdown continue to be in place. Libreville\\u2019s confinement was lifted on 5 May in order to restart the economy. The lockdown has been eased since 27 April, Non-food shops are starting to gradually reopen. Businesses can operate from 7.30 to 14.00 (local time) as well as administration from 7.30 to 15.30. Internal travel within the districts of the capital Libreville can resume. However, exiting Greater Libreville \\u2014 the capital and three bordering communes \\u2014 remains banned.\"},GM:{info:\"All travellers originating from a country with confirmed COVID-19 cases will have to undergo a mandatory quarantine for 14 days in one of the Governments designated facilities. Those held at these facilities will be provided with proviant, shelter and medical assistance at the expense of the government. \",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://gm.usembassy.gov/country-specific-coronavirus-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends state of public emergency until 10 June (OASC,20.05.2020) . \\n\\nFlights to Gambia are suspended.\\n\\nInternational restrictions:\\nLand borders with Senegal closed (with the exception of essential supplies and security personnel) and authorities have suspended all flights. Cargo and medical flights are exempt from this measure. All travellers originating from a country with confirmed COVID-19 cases will have to undergo a mandatory quarantine for 14 days in one of the Governments designated facilities. Those held at these facilities will be provided with proviant, shelter and medical assistance at the expense of the government.\\n\\nInternal restrictions:\\nAll public gatherings, including international and local conferences, have been suspended. All schools and universities as well as entertainment venues have been closed. A state of emergency was declared and will last until at least May 17, and it has been extended until 10 June. This resulted in: Closure of all non-essential food markets, madrassas, places of worship, majilis and daras. A maximum of ten people are allowed to attend weddings, baptisms, funerals, and all other social gatherings. All public transport shall carry only half of the total number of passengers permitted to transport by law.\"},PS:{info:\"Anyone entering Gaza, regardless of origin, is subject to a 28-day quarantine in a specialised isolation centre.\\nEach governorate in the areas of the West Bank under Palestinian Authority control has a designated quarantine location. \\n \",updated_at:\"2020-05-06\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"West Bank to Jerusalem: Authorities will evaluate case by case to identify if 14 days quarantine is needed when entering Jerusalem and Israel (GOI); No travel between Palestinian villages and cities in the West Bank, including to/from East Jerusalem, except for emergencies (PA).\\nAl Jib Checkpoint is closed in both directions until further notice. Hizma and Qalandiya Checkpoints should be used as alternatives (GOI). All checkpoints between Jerusalem and Bethlehem and its surrounding suburbs in the West Bank are closed until further notice. \\n\\nWithin West Bank: No travel between and within Palestinian villages and cities in the West Bank except for emergencies, or essential movement within each city or village from 10.00 to 17.00hrs. \\nAuthorities have increased movement restrictions in four additional villages of the west Bank: Bani Na'em, Sa'er, Bituniya and Aljdeireh. Currently there are a total of 17 locations in the West Bank with these restrictions, including cities (Bethlehem and Hebron), villages and one refugee Camp.\\nEntry into Bethlehem is not allow, all those exiting Bethlehem must enter 14-days home quarantine.\\n\\nA state of emergency is in place across Area A of the West Bank. This includes the limiting of movement between Palestinian cities to essential travel only, the closure of all educational institutions, tourist and religious sites, and the cancelling of all bookings for foreign tourists (banning foreign tourists from West Bank hotels).\\nThe West Bank city of Bethlehem is under lockdown. Palestinians working in West Bank Israeli settlements are no longer permitted to enter these settlements.\\nA ban on all non-essential movements outside one\\u2019s own accommodation is in place. Key workers, including health workers, pharmacists, bakers, public administration staff and those working in grocery stores are exempt from this ban.\\nThe Palestinian authorities have extended an ongoing state of emergency until at least 5 June.\\nAnyone entering Gaza, regardless of origin, is subject to a 28-day quarantine in a specialised isolation centre.\\n \\nRelaxation of restrictions:\\nOn 5 May authorities said Palestine is entering the phase where barber shops and hair saloons can open on Fridays and Saturdays.\\nThroughout the week; constructions sites, clothing, footwear and home appliances stores are planned to re-open.\\nPublic transportation will resume in Jenin, Jericho, Qalqilya, Salfit, Tubas and Tulkarem.\"},GE:{info:\"Anyone\\u202Fwho\\u202Fshows\\u202Fsymptoms\\u202Fassociated with COVID-19\\u202F(fever\\u202Fof 100.4 degrees Fahrenheit/38 degrees Celsius, cough, shortness of breath) will be taken\\u202Fto the nearest infectious disease\\u202Fhospital for testing and\\u202Fmay be\\u202Fquarantined\\u202Ffor at least\\u202Ftwo\\u202Fweeks.\\u202F \\nAnyone who\\u202Ftests positive\\u202Fwill be held in quarantine for treatment that may last two to three weeks.\\u202F\\u202F \\nAnyone who\\u202Frecently\\u202Ftraveled\\u202Fto\\u202Fany\\u202Farea with a significant number of infections\\u202Fremain in voluntary isolation for two weeks, even if they\\u202Fdo not have symptoms.\\u202F\\u202F  \",updated_at:\"2020-05-18\",source:\"Reuters, https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ge.usembassy.gov/covid-19-information-on-georgia/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Georgia is working to resume flight connections with the Baltic states after tourist bans will be lifted starting July 1. (Agenda.ge, 18.05.2020) \\n\\nInternational restrictions:\\nAll commercial flights, both inbound and outbound, are indefinitely suspended until further notice. Exceptions will be made under government mandate through the flag carrier Georgian Airways; several repatriation flights will be conducted.\\nThe land movement of citizens between Georgia and Russia is temporarily suspended, with the exception for Georgian and Russian citizens who wish to return home as well as freight traffic.\\nBatumi International Airport (BUS) and David the Builder Kutaisi International Airport (KUT) have been closed until further notice.\\nThe movement of citizens via Sarp border crossing between Georgia and Turkey is temporarily suspended for all nationalities.\\nThe movement of citizens between Armenia, Azerbaijan and Georgia is suspended until further notice; border closure between Azerbaijan and Georgia is extended until 22 May.\\nGeorgian citizens will be required to undergo a 14-day quarantine when they come back from Austria, China, Denmark, France, Germany, Iran, Italy, Norway, South Korea, Spain or Switzerland.\\n \\nDomestic restrictions:\\nGovernment to lift COVID-19 state of emergency after 22 May (Reuters, 15.05.2020)\\nA curfew is in effect between 21.00 and 06.00.\\nResidents over 70 years of age are not permitted to leave their homes except to visit the nearest store, pharmacy or hospital.\\nAlthough intra-city movement by vehicles is allowed again, most of the intercity travel remains prohibited. Traffic from and to cities of Batumi and Kutaisi has reopened since 5 May. Restrictions will remain in place in the capital Tbilisi and Rustavi (Kvemo Kartli region).\\nFood establishments, pharmacies, banks, petrol stations and postal services remain operational amid the state of emergency. People travelling outside their homes are required to carry their passports or official IDs at all times.\\n\\nRelaxation to restrictions: \\nGovernment lifts lockdown of Tbilisi on 11 May, Rustavi on 14 May. \"},DE:{info:\"On Monday, April 6, German authorities announced that all travelers will be placed under a mandatory 14-day quarantine upon arrival as of Friday, April 10. Health sector employees living in border regions outside Germany, as well as business travelers, or technicians entering the country for a short period of time, will be exempted from the restriction. \\n\\nInfected individuals are treated in hospital isolation until infections have passed and patients are judged to no longer pose a risk to others. \\nThe German health ministry advises that anyone who has been in contact with a person diagnosed with the COVID-19, or who have spent time in a risk area, should contact the health office responsible for their location, even if they have no symptoms. You can find the search function for locating the responsible health office here.\\n\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://de.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Berlin's busiest airport will close on June 15 for at least two months, though authorities say the closure may be permanent. All flight traffic will be handled by Berlin Schonefeld Airport. (DW, 20.05.2020) \\n\\nInternational restrictions:\\nA number of land and sea border crossing points with Austria, Denmark, France, Luxembourg, and Switzerland have been limited, and temporary border controls have been introduced at the remaining crossing points to those countries. In addition, air passengers travelling from Italy and Spain to Germany will be subject to immigration checks. These measures will remain in place until 15 June. A full explanation of the restrictions in place is available (in German only) on the Bundespolizei website.\\nThe border crossings with Austria, France and Switzerland have reopened and systemic checks have been replaced by spot checks. In addition, the border with Luxembourg has fully reopened and no restrictions are in place between the countries. The border with Denmark continues to be in place until an official statement from Denmark has been released. It is expected that the remaining controls at these borders would be lifted on 15 June. Travelers without an urgent travel reason are not allowed to enter Germany. Groups that are allowed to cross the border include: Citizens, residents, long-term visa holders returning to Germany. EU citizens and third-country nationals transiting through Germany to their home country or place of residence if they can demonstrate with a ticket that there's no alternative to travelling through Germany to reach their destination. All persons travelling for urgent reasons (including medical treatment, family deaths, caring for underage children). All persons moving goods, travelling for work-related reasons or to carry out a professional activity. This must be documented by carrying suitable documents (including employment contract, order documents, cross-border commuter card). Commuters also have a form. Spouses and registered partners. Travel to Austria and Switzerland is authorised for visiting life partners, relatives, attending family events or tending to agricultural areas. Which cross-border travel is considered mandatory remains at the discretion of border authorities. To discuss whether an exception would apply due to your individual circumstances you can contact the dedicated federal police office at +49 800 6 888 000. Currently, most travellers allowed to enter Germany following several days abroad will have to undergo self-quarantine for 14 days. This does not apply for travellers arriving in Bavaria, Lower Saxony and North Rhine Westphalia states. In practice, the quarantine is self-enforced. Police will hand the traveller a form and instruct them to self-isolate and contact the health department. Exceptions are provided for asymptomatic cross-border workers, business travellers on urgent business and transiting travellers. Full information on quarantine rules is available from the ministry of the interior\\u2019s website.  Pending approval, travellers arriving from EU/EEA member states and the UK will be exempt from quarantine requirements. In the future, the quarantine requirement will depend on the state of outbreak at the point of departure. All travellers with COVID-19 related symptoms are referred to the local health authorities, who may require medical screenings or quarantine measures. Flag carrier Lufthansa is operating a revised flight schedule until further notice. Flights with suspected COVID-19 cases aboard will be diverted to dedicated airports, where medical teams have been posted. Thalys services: all passengers are required to wear a face mask from 11 May. From 9 June, the rail operator will increase train frequency, including on the route linking Amsterdam, Dortmund and Paris.\\n\\nInternal restrictions:\\nWearing masks (non-medical) while using public transport and shopping is mandatory in all states. Major events prohibited at least until 31 August. In public, at least 1,5m distance must be maintained except between members of the same household.\\n\\nRelaxation of restrictions\\nOn 6 May the federal government handed authority for relaxing restrictions over to state governments. A partial relaxation of restrictions involves: Between 9 and 22 May, pubs and restaurants are planned to reopen with 50% capacity.\\nFrom 15 June softer guidelines for travel abroad could be issued depending on coronavirus infections. (Reuters, 18.05.2020)   \"},GH:{info:\"14 day Mandatory quarantine for any traveller at a hotel or designated facility at their own expense\",updated_at:\"2020-05-21\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.osac.gov/Content/Report/22c4e630-b2cc-462d-b65d-1842fc781262\\nhttps://gh.usembassy.gov/ghana-covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nSources\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. International flights to Ghana are suspended. Domestic flights will resume after 1 May with Kotoka International Airport reopening to serve internal flights to Tamale, Takoradi and Kumasi.\\n- This does not apply to emergency flights, humanitarian flights, technical landing for refuel and medical evacuation flights.\\n2. Airline crew will undergo mandatory quarantine during their rotation/rest period. \\n\\nBorder closure extended until 31 May,  (OSAC, 12.05.2020)\\n\\nUN Staff: UNLP holders do not require a visa to enter Ghana. \\n\\nInternal restrictions: \\nInternal restrictions limiting movement in the Greater Accra region (including the capital Accra) and Greater Kumasi (Ashanti region) have been lifted. However, public gatherings are still banned until 31 May. Face masks are compulsory for each citizen nationwide when in public places. Suspension of all public gatherings, both private and business (including conferences, workshops, funerals, festivals, political rallies, sporting events, religious activities). \\nPublic transport operators are required to limit the number of passengers and enforce social distancing and hygiene protocols on board.\\nAll schools are to remain closed until further notice. Beaches are closed and will be patrolled by police to enforce restrictions.\"},GI:{info:\"A lockdown is in place from 24 March.\",updated_at:\"2020-04-30\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers are not allowed to enter Gibraltar.\\n- This does not apply to passengers with a British passport with nationality \\\"British Overseas Territories Citizen\\\" issued by Gibraltar.\\n- This does not apply to passengers with a British passport born in Gibraltar.\\n- This does not apply to British nationals with a national ID card issued by Gibraltar.\\n- This does not apply to residents of Gibraltar.\\n- This does not apply to merchant seamen with an Immigration pre-clearance letter issued by the Borders and Coastguards Agency.\\n- This does not apply to nationals of Spain on their way to Spain.\\n- This does not apply to residents of Spain on their way to Spain.\\n- This does not apply to passengers who are taking up employment or carrying out a work activity in Gibraltar.\\n- This does not apply to military personnel with a travel order issued by NATO or the United Kingdom.\\n- This does not apply to passengers with an authorization letter issued by the Borders and Coastguards Agency.\\n\\nInternational restrictions:\\nThere are no restrictions or ban to travel from/to Gibraltar. Airport operations remain functional. However, local authorities have advised to avoid crossing La Verja \\u2013 La Linea de la Concepcion (Cadiz, mainland Spain) by foot or vehicle due to the state of emergency currently in place in Spain.\\n\\nInternal restrictions:\\nA lockdown is in place. Only essential services will remain open. Residents can exit their accommodation for essential reasons, including reaching their workplace and exercise.\\nAll public activities have been closed as well as bars and restaurants (home-delivery remains an option). Schools remain open. Adults over 70 years old have been advised to minimise movements.\"},GR:{info:\"Most travellers are subject to a 14 day quarantine upon arrival in the country.\\nThe following categories of travellers are excluded: passengers on transit flights, flight crews, state flights, medical and humanitarian flights, military flights, cargo flights and Frontex flight passengers. From 1 June, travel to Bulgaria and Serbia for business, family and humanitarian reasons is allowed for all Greek travellers without the need to quarantine.\",updated_at:\"2020-05-23\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://gr.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"The government has decided to open Greek borders for tourists from the European Union, the Schengen area and Israel by July 1 at the latest, but possibly even earlier, from mid-June. (eKathimerini,  19.05.2020) \\n\\nInternational restrictions:\\nMost travellers are subject to a 14 day quarantine upon arrival in the country.\\nThe following categories of travellers are excluded: passengers on transit flights, flight crews, state flights, medical and humanitarian flights, military flights, cargo flights and Frontex flight passengers.\\nCommercial flights to/from Italy, the Netherlands, Spain,  the UK and Turkey are suspended until 31 May.\\nAll flights to and from Albania, North Macedonia are suspended to June 14.\\nAll flights from Turkey to Greece are suspended to June 14.\\nBorders and ferry services with Albania, Italy and North Macedonia are closed until 15 June with the exception of trade and persons of Greek nationality or those resident in Greece.\\nGreece has prohibited the docking of cruise ships and international sailboats in Greek ports.\\nFlights to/from Germany from Athens International Airport (ATH) will continue to run. Cargo, humanitarian and repatriation flights are also exempt from the measure.\\nFrom 1 June, travel to Bulgaria and Serbia for business, family and humanitarian reasons is allowed for all Greek travellers without the need to quarantine.\\nAn entry ban for non-EU citizens remains in place (see related Schengen area alert), with the exception of necessary travel authorised by Greek consular offices, at least until 14 June.\\nExceptions apply for: Health workers; those with a long-term visa in a European and Schengen country; those who have obtained a travel permit from a Greek consulate; government, diplomatic, military and humanitarian staff; and aircraft crews will be allowed to enter Greece.\\n\\nInternal restrictions:\\nThe wearing of masks is now mandatory in public transit, taxis, elevators and healthcare facilities. The state also strongly recommends the use of a mask in all areas but it is not mandatory.\\nThe violation of restrictions is punishable by fines of between 150 and 5000 Euros.\\nOnly local residents are allowed to board ferries to the islands. Ships carrying essential provisions are exempt from the ban. Pleasure boats out at sea must dock permanently. These restrictions are expected to be lifted in mid-June.\\nRestrictions on migrant and refugee camps extended until 21 May.\\nAegean islands/Lesbos island: Additional restrictions remain in place until further notice in migrants\\u2019 camps on the Greek islands. No volunteers are allowed in the camps, and school classes for migrant children have been suspended. Entry will be allowed only to staff and there will be a compulsory temperature check for new arrivals. For regular updates, the ministry will post updates and instructions for/to the five island camps\\u2019 residents twice a day in Arabic, English, Farsi, French and Greek.\\nMigrant camps in Ritsona and Malakasa have been placed under full sanitary isolation. No one is allowed to leave or enter the camp. Additional security forces have been deployed.\\n\\nRelaxation of restrictions\\nNo more restrictions for travel within the country.\\nMosques and churches are now allowed to resume services.\\nTravel by ferry to all other islands will resume on 25 May.\\nCafes and restaurants are due to open between 25 May and 1 June; Hotels that operate year round from 1 June.\\nEntertainment and sports venues (cinemas, theatres, entertainment centres, gyms, etc.) should be allowed to reopen in early June. Social distancing should be respected and capacity will be at 60 % max.\\nIn mid-June, touristic seasonal accommodation will reopen and ferries will be at almost 100% capacity.\\nFrom 1 June there will be no more mandatory COVID-19 test nor 14 day quarantine.\"},GL:{info:null,updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Travel between Greenland and Denmark with Air Greenland will begin on 1 June.\\nInternational links will remain suspended until 1 June as well as entry of foreign citizens.\"},GD:{info:null,updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://bb.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions: Maurice Bishop International Airport (GND) and Lauriston Airport (CRU) are closed to commercial flights until further notice. All official ports of entry have been closed to passenger traffic, foreign nationals will not be allowed to enter until further notice. Arriving nationals and residents will be subjected to self-quarantine for 14 days upon arrival.\\n\\nOutbound restrictions: Cruise ships will be barred from departing until further notice.\\n\\nInternal restrictions: A nationwide curfew is in effect from 19.00 to 05.00 until further notice. Businesses may reopen with approval from the government and operate from 08.00 to 17.00. Travel for essential business only on designated days. It\\u2019s mandatory to wear facial masks when in public.\"},GP:{info:null,updated_at:\"2020-05-12\",source:\"https://www.iata.org/contentassets/339c723a99aa45e99d6aa2a868f53a0c/guadeloupe-ncov-measures.pdf \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. Passengers are not allowed to enter the French West Indies.\\n- This does not apply to passengers who reside in the French West Indies.\\n- This does not apply to passengers traveling for urgent health reasons.\\n- This does not apply to passengers traveling for imperative business reasons.\\n2. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting the French West Indies. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr\\n3. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (Covid-19).\\n- This does not apply to airline crew.\\n\\nInternational restrictions: All international flights suspended until at least 11 May. Only residents and citizens are allowed entry. Arriving passengers must undergo a mandatory 14-day quarantine. US citizens who are attempting to return to the US from the Eastern Caribbean should complete the provided form for each person wishing to return to the US. \\n\\nInternal restrictions: From 11 May, the first stage of relaxation of measures will begin nationwide. From 11 May, the use of face masks by anyone aged over 11 years will be mandatory on public transport, with offenders subject to a 135-Euro fine. In public places, the wearing of face masks is highly recommended. Further related measures may vary by location. Gatherings of a maximum of ten people are now allowed. Many businesses have reopened, but cafes, restaurants, nightclubs, ski resorts and all other non-essential businesses remain closed. Public parks and secondary education institutions may reopen 18 May.\"},GU:{info:\"Passengers who enter Guam without proper documentation will be quarantined.\",updated_at:\"2020-05-11\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAll incoming passengers, including those in transit, will be subject to a 14-day quarantine at a government-designated facility. Travellers who have been in a COVID-19-affected country for more than a week will be barred entry if they do not hold a document recognised and certified by Guam Department of Social Health and Services (DPHSS) confirming that they are not infected with COVID-19. The test must be dated no more than 72 hours before the date of arrival. Returning residents are exempted.\\n\\nInternal restrictions:\\nA state of public health emergency is in place until at least 5 June. However, roadblocks were lifted from 28 April.\\nThe authorities have eased restrictions slightly, allowing gatherings up to ten people to take place. From 10 May, retail outlets, shopping malls, salons, and government services that adhere to social-distancing measures have been allowed to operate. Several roads remain closed from 10.00 to 22.00 daily for essential or authorised services only. \\n\"},GT:{info:\"Guatemalan citizens arriving from Europe will be quarantined for seven days at Villa Nueva hospital in the capital if presenting symptoms, or required to self-quarantine for the same period of time if asymptomatic.\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://gt.usembassy.gov/alert-covid-19/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nAll arrival flights are suspended until further notice. Border closure (air, sea, land) for all foreign travellers until further notice. Guatemalan nationals and residents and accredited diplomats will be permitted entry via land crossing only; however, they will be subject to mandatory self-quarantine. Citizens will be interviewed, evaluated, and transferred to isolation, if required. Guatemalan citizens arriving from Europe will be quarantined for seven days at Villa Nueva hospital in the capital if presenting symptoms, or required to self-quarantine for the same period of time if asymptomatic.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nInternal Restrictions:\\nA nationwide lockdown is in effect from until 05.00 on 18 May. During this time only employees of essential businesses are allowed to drive; non-essential businesses remain closed. Beginning 18 May there is a national daily curfew in place from 17.00 to 05.00. From 04.00 to 18.00. Residents are required to adhere to a social distancing measure of 1.5 metres and the use of masks in public spaces is mandatory. Transport between departments is prohibited; essential travel between all other departments is allowed. Public transportation has been suspended. All shops aside from those selling essential goods are to remain closed. The sale of alcohol is allowed from 04.00 to 15.00 but drinking in public places is prohibited. Masks must be worn in public.\"},GN:{info:\"Suspected cases of COVID-19 will be sent to a Ministry of Health center for testing and will be required to remain at the center until test results are available, in approximately 10 hours.\\nNegative cases will be required to report their temperature to Ministry of Health officials twice a day for fourteen days.\\nPositive cases will be treated at the Ministry of Health center.\\nThere are four laboratories in Guinea that can test for COVID19.\",updated_at:\"2020-05-18\",source:\"https://www.osac.gov/Content/Report/43657e78-8bc0-406b-b678-1842fa9a6420\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://gn.usembassy.gov/u-s-citizen-services/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll inbound travel and non-essential outbound travel to countries with more than 50 confirmed COVID-19 cases, with the exception of freight, have been suspended until further notice.\\nCargo and humanitarian flights will continue to operate normally.\\nLand borders are closed.\\n\\nInternal restrictions:\\nExit from the capital Conakry has been prohibited. Entry to the city is not affected.\\nThe state of emergency has been extended at least until 15 June.\\nThe night-time curfew from 22.00 until 05.00 was lifted except in Conakry, Coyah and Dubreka.\\nAll internal travel is prohibited except under exceptional circumstances.\\nNon-essential facilities, such as places of worship and schools, have been closed, while gatherings of more than 20 people have been banned and public transport in Conakry reduced. This triggered a strike in the public transport network to denounce this decision.\\nThe wearing of face masks in public is mandatory across the country.\\nAll suspected COVID-19 cases are sent to one of the four laboratories in the country available for COVID-19 testing. People are required to stay in the laboratories until the test result comes back.\"},GW:{info:null,updated_at:\"2020-05-12\",source:\"https://www.osac.gov/Content/Report/ad35b884-c374-4467-910c-183b06a7468b\\nhttps://gw.usmission.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions: The country\\u2019s land and maritime borders are closed, and all international flights are suspended until further notice.\\n\\nInternal restrictions: An ongoing state of emergency has been extended until 26 May; movements are restricted to essential ones, while citizens are asked to stay at home. Schools, restaurants/bars and non-essential shops are closed until further notice. Circulation and trade of goods are only restricted from 07.00 to 11.00. The nationwide curfew between 17.00 and 06.00 will be maintained; people are allowed to leave their houses for grocery shopping between 07.00 and 14.00. Wearing face masks is now mandatory in public places. Public transport countrywide has been suspended.\"},GY:{info:\"On March 16, the government of Guyana issued a Public Health Ordinance, granting the Ministry of Public Health authority to forcibly (if necessary) quarantine any person who tests positive for COVID-19 in either a hospital or camp created for the reception, isolation and treatment of persons suffering from COVID-19\",updated_at:\"2020-05-15\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://gy.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nThe country\\u2019s airports will remain closed until at least 31 May. The land and sea borders remain open.\\nTravellers coming from Brazil, China, Dominican Republic, French Guiana, Iran, Italy, Jamaica, Japan, Malaysia, Panama, Singapore, South Korea, St Vincent, Thailand and the US should anticipate increased screenings upon arrival. There is also a possibility that these individuals would be denied entry into the country, according to government officials.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country but there are no commercial flights.\\nThe US Embassy has posted instructions for US citizens wishing to return to the US.\\n\\nInternal restrictions:\\nA curfew is in effect between 18.00 and 06.00 (local time) until 3 June; all non-essential businesses are closed, barring hospitals, healthcare and medical facilities.\\nIn the capital Georgetown gatherings exceeding five persons are prohibited.\"},HT:{info:\"The Haitian Ministry of Health (MSPP)  have set up isolation mechanisms for suspected patients while they are conducting the test for COVID-19. Also, a 14-day quarantine is mandatory for anyone entering the country.\",updated_at:\"2020-05-06\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All flights to Port Au Prince International airport and Tocap Haitian International airport are suspended.\\n- This does not apply to domestic, emergency, humanitarian, medevac and government flights. As a result, UNHAS Ops are still running.\\n\\nInbound restrictions:\\nAll ports, airports and borders have been closed indefinitely, with the exception of goods traffic.\\nThe border with Dominican Republic is closed to all travellers, with the exemption of trade. \\n\\nA 14-day quarantine is mandatory for anyone entering the country. \\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nConditions and internal restrictions:\\nAuthorities have introduced a nationwide curfew from 20.00 (all times local) to 05.00.\\nA state of emergency, with associated restrictions on mobility, will remain in place until at least 20 May.\\nThe use of masks in public is mandatory from 11 May until further notice.\"},HN:{info:\"Individuals with symptoms consistent with COVID-19 who within the last 14 days have been in contact with a confirmed case of COVID-19 or traveled to a country with confirmed cases may be isolated in a medical center for monitoring by the Ministry of Health for up to 14 days.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://hn.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nHonduras\\u2019 borders remained closed to foreign visitors until further notice.\\nHonduran nationals and residents and accredited diplomatic personnel will still be permitted to enter the country on approved flights and by land via the El Florido border crossing with Guatemala, which is only open from 06.00 to 21.00; however, they will be subject to mandatory self-quarantine for 14 days.\\nTravellers arriving to Honduras on cruise ships will be able to use the ports, but will not be allowed to disembark.\\nTravellers with suspected cases or those who have been in contact with a confirmed case will be placed in quarantine for 14 days in a medical centre; all other travellers will be asked to self-isolate for 14 days.\\nTravellers arriving from highly affected countries will be required to provide precise trip details regarding the countries they visited and transited through in the last 30 days.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nConditions and internal restrictions:\\nThe Honduran government has locked down the entire department of Cortes (including San Pedro Sula), as well as the El Progreso municipality (Yoro department), Las Vegas (Santa Barbara department) until 24 May. Individuals in these locations are not permitted to leave their homes for any reason, including to shop for food, medicine or fuel. Some professionals are exempt from the lockdown.\\nA nationwide curfew has been extended until at least 24 May for all other municipalities. Residents are under curfew except from 07.00 to 17.00 on weekdays, when essential shopping is permitted according to the last digit of their individual identity document. Elderly people, pregnant women and individuals with disabilities are limited to shopping on weekdays from 07.00 to 09.00. Personnel for essential services are exempt from the curfew, but must carry documentation. No one is allowed to circulate on Saturdays and Sundays, except essential personnel.\\nAll establishments excluding markets, grocery stores, hotels, fuel stations, private banks, hospitals and other medical facilities have been ordered to close and restrictions have been placed on public gatherings.\\nRestrictions on road travel have been put in place.\\nAccess to the cities of Tegucigalpa, MDC, San Pedro Sula, Choluteca and La Ceiba will continue to be closed to prevent people from entering or leaving the city indefinitely.\\nThe use of facemasks in public spaces is mandatory, violators are subject to fines, 24 hour detention and community work.\\nCheckpoints have been established on major roadways at entrances and exits of cities, such as the capital Tegucigalpa.\"},HK:{info:\"Quarantine is usually spent at home or a residential address, but arrivals may be placed in a Hong Kong government quarantine centre. Family members of someone who tests positive, or those who have been in close contact, will also be required to go in to a government quarantine centre. Hong Kong residents who have been to Daegu or Gyeongsangbuk-do in Korea; Iran; or Emilia-Romagna, Lombardo or Veneto in Italy within the last 14 days will be allocated a government quarantine facility.\\nFor all quarantine arrangements in Hong Kong:\\nYou are not allowed to leave your designated quarantine location for 14 days. This means you are also unable to leave Hong Kong for the duration of the quarantine.\\nYou are not able to serve your 14 day quarantine in a hotel.\\nIf you are allocated a government quarantine centre, you may be asked to contribute around \\xA320 (HK$200) per night towards the cost.\\nItems that can be taken in to government quarantine are restricted. There is no smoking allowed and no alcohol. Depending on your centre, facilities may be basic: there may be no fridge and no air-conditioning.\\nIf you are quarantined at your home address you will be expected to activate sharing of your real-time location with the Hong Kong government, or be tagged electronically.\\nIf you are arriving in Hong Kong from Europe and the US, during an initial trial of the technology, you will be issued with a bluetooth-enabled wristband which will be activated at the airport and linked to a mobile app \\u2018StayHomeSafe\\u2019 on your phone.\\nArrivals from other destinations may be issued with non-bluetooth wristbands.\\nThe bluetooth-enabled wristbands will alert the authorities if the wearer leaves home with or without their phone.\\nFailure to comply with the quarantine conditions may result in you being immediately taken to Government quarantine facilities. You could face a six month prison sentence and a substantial fine.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://hk.usconsulate.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Entry restrictions\\nNon-Hong Kong residents arriving from mainland China, Macau, or Taiwan will be denied entry if they have been to any overseas countries and regions in the past 14 days. Hong Kong residents and non-Hong Kong residents arriving from mainland China, Macau, or Taiwan with no travel to any overseas countries and regions in the past 14 days will be subject to a 14-day compulsory quarantine with exceptions to those arriving for educational and business activities considered to be of economic interest. These measures will remain in place until at least 7 June, while the requirement for travellers to declare their health and travel history will remain in place until 31 August.\\nAll transit/transfer services, including air transit/transfer, cross boundary land transport and cross boundary ferry transfer, are suspended for all passengers at Hong Kong International Airport.\\nResidents with travel history in Daegu and Gyeongsangbuk-do in South Korea, Iran, as well as Emilia-Romagna, Lombardy and Veneto regions in Italy in the past 14 days will be required upon entry to stay in a quarantine centre for 14 days. Residents with travel history in any other overseas locations in the preceding 14 days will be subject to a 14-day mandatory quarantine.\\nAll inbound travellers from all flights to Hong Kong are required to take a shuttle bus from Hong Kong International Airport immediately to the temporary specimen collection centre at AsiaWorld-Expo to collect deep throat saliva samples and submit the samples at the venue for conducting COVID-19 test.\\nMost routes between Hong Kong and mainland China remain closed, leaving only Hong Kong International Airport (HKG), the Shenzhen Bay checkpoint and the Hong Kong-Zhuhai-Macao Bridge open. However, only dual license plate vehicles are allowed to cross the Hong Kong-Zhuhai-Macao Bridge. Hong Kong-Zhuhai-Macao shuttle bus services have resumed, albeit with reduced frequency. The Kai Tak and Ocean cruise terminals remain closed.\\nThe authorities have suspended the Hong Kong section of the Guangzhou-Shenzhen-Hong Kong Express Rail Link and the Intercity Through Train which is served by Hung Hom Station.\\nForeign travellers are denied entry to Macao. Residents from mainland China, Hong Kong and Taiwan with travel history overseas in the past 14 days have been banned entry. Among the other residents from mainland China, Hong Kong and Taiwan, those with travel history to Hong Kong and Taiwan in the past 14 days are subject to medical monitoring at designated locations, while those from selected areas (Guangdong, Henan, Zhejiang provinces, as well as Beijing, Chongqing and Shanghai) are subject to 6-8 hour medical checks. Travellers from Hubei province and those with travel history to Hubei province in the past 14 days should present a medical certificate proving that they are free of COVID-19 infection.\\n\\nInternal restrictions:\\nHong Kong: The authorities have relaxed social-distancing rules from 8 May. Businesses will gradually resume activities and the ban on public gatherings has increased from four to eight. Social distancing measures are expected to remain in place until 4 June.\\nSchools will resume in three phases from 27 May until 15 June.\\nFrom 8 May, entertainment and sports premises will reopen in stages. The first stage includes reopening of entertainment venues excluding karaoke bars, nightclubs and party rooms, as well as cinemas, gyms, and beauty and massage parlours. Each venue should not exceed more than 50 people or half of its capacity, though this restriction does not apply to restaurants. A 1.5m (5 feet) social-distancing rule remains applied in all businesses and public premises, as well as a maximum of eight people at a table.\\nMost civil servants have returned to workplaces since 4 May.\\n\\nRelaxation of restrictions: \\nThe authorities have relaxed social-distancing rules from 8 May. Businesses will gradually resume activities and the ban on public gatherings has increased from four to eight. Social distancing measures are expected to remain in place until 21 May.\"},HU:{info:\"There are individuals who have been quarantined in Hungary as precautionary measure due to the possibility they may be infected. The Hungarian government has stated that if such individuals remain symptom-free for more than two weeks they can be released.\",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://hu.usembassy.gov/covid-19/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Hungarian, Slovenian Governments agree on gradual reopening of the border by 1 June (Reuters, 18.05.2020). Government plans to gradually lift COVID-19 lockdown restrictions in Budapest from 18 May (Reuters, 16.05.2020)\\n\\nAll foreign citizens are barred from entering the country - except for commuters who can cross the border at three specific border checkpoints with Serbia. Budapest airport remains open and everyone is free to depart. Measures do not apply to Hungarian citizens.\\nAll individuals entering Hungary are obliged to undergo a medical examination at the border to check for signs of COVID-19 infection. Those individuals suspected of infection will be put into officially designated quarantine for 14 days. If there is no suspicion of infection, individuals will still be required to quarantine at home for 14 days. The government has closed its land borders with Austria and Slovenia, closed all schools and placed restrictions on public gatherings. The border with Slovenia should reopen by 1 June. (Reuters, 18.05.2020) \\nBorders with Serbia have reopened for commuter workers only.\\n\\nInternal restrictions: \\nOther aspects of the indefinite nationwide lockdown are still in place. Authorities review the need to extend lockdown measures each Wednesday. People are allowed to leave their homes for work, to buy essential supplies, for physical exercise and health reasons. Shops will remain open exclusively for those over the age of 65 between 09.00-12.00. Restaurants and cafes are only allowed to be open for takeaways and deliveries. Universities and schools are closed. \\nSince 27 April, face masks are mandatory for passengers on public transport in the capital Budapest.\\nBudapest and Pest County: in these areas, stricter rules remain in force. Individuals are allowed to leave home only for essential purposes (work, shopping for essential products, banking and postal services, and to help people unable to provide for themselves). \\nOutdoor exercise is permitted, but people must either be alone or only with people from their household.\\nAll restaurants will offer takeaway services only.\\n\\nRelaxation of restrictions: \\nFrom 4 May, nationwide, in areas other than Budapest and Pest County, shops and restaurants may reopen without time limits (while maintaining the 09.00-12.00 shopping time for over 65s). Cafes, restaurants and bars may reopen but guests will only be allowed to sit outside.\\nThe use of face masks in public, shops, on taxis and public transport will remain mandatory. \\nFor business purposes only, borders with Austria, Czech Republic, Germany, Poland, the Republic of Korea and Slovakia will reopen.\"},IS:{info:\"All travellers are asked to self-quarantine for 14 days and contact local hospitals for help if they experience symptoms. There is a small quarantine facility at the National University Hospital (Landspitali)for residents. The Directorate of Health has commissioned a hotel for use as temporary quarantine facility for non'-residents.\",updated_at:\"2020-05-20\",source:\"https://is.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification subject to special conditions\",restrictions:\"International restrictions:\\nAll travellers, except from Faroe Islands and Greenland, arriving in Iceland will now have to self-quarantine for 14 days until further notice. Passengers arriving will have to fill out a Public Health Passenger Locator form and present it at border inspection and they will need to have an address where they will quarantine. Professionals and others travelling to Iceland for work may be eligible for modified quarantine. Foreign nationals are banned from entering the country until at least 15 June, except for EU/EEA, EFTK and UK nationals. This excluded essential travel: airport transit, health and care workers on professional travel, transportation crew (airlines and freighters), individuals requiring international protection, individuals travelling because of acute family incidents and diplomats, international organisation staff, members of armed forces traveling to Iceland for duty, and humanitarian aid workers.\\nForeign Nationals covered by the travel restriction, who need to travel to a Schengen Member State through Iceland for any of the above-mentioned purposes, are advised to contact the Member State they are travelling to for a written confirmation of their permission to enter the respective state. Without such confirmation, such Foreign nationals cannot be authorised to enter the Schengen Area in Iceland. Authorities decided to introduce temporary border controls within the Schengen area until 15 June.\\n\\nInternal restrictions:\\nGatherings up to 50 people are allowed provided that participants maintain at least a two-metres distance between each other. Universities and secondary education institutions are closed.\\n\\nRelaxation of restrictions\\nFrom 15 June, inbound travellers are expected to be given a choice between a two-week quarantine or being tested for the virus upon arrival, or otherwise proving that they are free of coronavirus infection. Details of the implementation are still emerging.\"},IN:{info:\"Passengers who are symptomatic or screened positive for fever by automated fever scanners will be taken to designated isolation facilities for further evaluation and testing for the virus that causes COVID-19.\\nIf the laboratory test is confirmed positive for the virus, they will be held at the isolation facility for further management.\\nIf two consecutive laboratory tests of samples collected 24-48 hours apart are negative, they will be discharged after the symptoms resolve. They will be provided COVID-19 information material encouraging them to self-report if symptoms recur in next 28 days.\\nThe information on these passengers will be shared with Ministry of Health and Family Welfare staff for further follow-up of these passengers at their homes for next 28 days.\",updated_at:\"2020-05-22\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://in.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Domestic flights will resume operations from 25 May (Hindustan Times, 20.05.2020)\\nFlights to India are suspended. - This does not apply to flights that carry goods for trade or essential goods and supplies, and their crew members, helpers, cleaners.\\n\\nInternational restrictions:\\nStarting from 7 May, 15,000 Indian nationals from abroad will be repatriated back to India. Citizens who arrive via the Indira Gandhi International Airport in New Delhi will be screened and divided into three categories: those with COVID-19 related symptoms will be sent to hospitals, while those who have been in contact with COVID-19 patients will be required to undergo 14 days quarantine at government facilities. The rest of the returning citizens will be required to fill up a declaration form and self-quarantine for 14 days at their residence.\\nAll international commercial flights are suspended until 31 May.\\nAll incoming travellers, including Indian nationals, are prohibited from entering the country through air, sea, land, rail and river ports. Vehicles/Trains carrying goods and essential supplies are exempted, along with crew, driver, helper, cleaner, etc. who are subject to screening upon entry.\\nVisas from all countries are suspended until 31 May. The visa-free travel mechanism for Overseas Citizenship of India (OCI) cardholders are suspended until 31 May. Visas and validity of OCI remain valid for those already in India. Travellers holding diplomatic, official, UN/ international organisations, employment, and project visas are exempted.\\nThe Sikkim government has suspended the issuance of the Inner Line Permit (ILP) for foreign travellers, including Bhutanese nationals. The ILP is an official document that the state government issues to a foreign visitor planning to enter the state and is valid for a limited period.\\nThe Arunachal Pradesh, Sikkim and Mizoram governments have temporarily suspended the issuance of Protected Area Permits (PAP) to foreign travellers until further notice. The PAP is an official document required for all foreign travellers who want to travel to Arunachal Pradesh.\\nManipur and Mizoram states have sealed their borders with Myanmar. Manipur has also sealed its borders with Bangladesh. Movement via land borders will remain restricted to designated check posts including robust screening processes. Details of these facilities should be confirmed with the Ministry of Home Affairs (MHA).\\nThe Indian government has announced that it is possible to extend online free visa procedures for foreign nationals staying in India, whose visas expire between 1 February and 3 May. Those who wish to apply for such an extension should email the relevant Foreign Registration Office listed on their website.\\n\\nInternal Restrictions:\\nDomestic and private aircraft operations will resume gradually from 25 May.\\nThe nationwide lockdown has been extended until 31 May.\\nCommencing 4 May restrictions are partially relaxed depending on the designated area code of \\u2018Green\\u2019, \\u2018Orange\\u2019 or \\u2018Red\\u2019\\nFull List of zones HERE. This list will be updated in the coming days following the latest lockdown extension until 31 May.\\nThe authorities have designated various areas as \\u2018containment zones\\u2019 within urban centres, completely sealing them off and closely monitoring the situation. These zones will be determined based on guidelines issued by the Ministry of Health & Family Welfare, and demarcated by states/union territories/district administration.\\nOn 17 May, the Ministry of Home Affairs (MHA) announced a partial relaxation of restrictions in the \\u2018Red\\u2019, \\u2018Orange\\u2019 and \\u2018Green\\u2019 zones, barring the \\u2018Containment\\u2019 zones across the country.\\nUnder the latest directives, restrictions will be relaxed for non-containment zones. Buses and taxis will be allowed to operate. All shops, except those in malls will be allowed to operate. Non-essential items are now permitted to be delivered. Restaurants are allowed to open for take-away. While inter-state movement has been permitted, this measure requires individual state authorities to establish agreement. Medical professionals and emergency services are allowed to move across states without any restriction. More details will emerge in the coming days.\\nWhile the Ministry of Home Affairs has released the general guidelines to partially ease the restrictions, state- and union territory-level governments can refuse to implement the relaxation or amend the easing of measures depending on their specific situation. \\n\\nAiport/Airline requirements: \\nIMPORTANT- Air Travelers are asked to familiarize themselves with the information in the link[please copy/ paste to your browser]: https://www.civilaviation.gov.in/sites/default/files/Order_of_MoCA_dated_21st_May_2020.pdf\\n \\n\"},ID:{info:\"The Government of Indonesia requires that travellers from countries in which the World Health Organisation (WHO) has evidence of local transmission of COVID-19 should self-isolate for 14 days on arrival in Indonesia.\\n\\nThose who decide to remain in Indonesia should be prepared to shelter in place for an extended period.\\nIndonesian citizens who visit determined countries, an additional inspection will be carried out by the Port Health Office upon arrival. If additional investigations find the initial symptoms of Covid-19, there will be an observation at a government facility for 14 days.\",updated_at:\"2020-05-21\",source:\"https://id.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAll commercial flights to and from Indonesia are expected to be reduced until at least 1 June. Cargo transport, law enforcement operations, and operations supporting COVID-19 containment, repatriation flights as well as flights for state officials, diplomatic staff and representatives of international organisations will continue to operate.\\nThere is a temporary entry and transit ban for all foreign travellers into Indonesia, apart from those with stay permits, on diplomatic missions and in essential services sectors.\\nForeign nationals must provide a health certificate that includes a non-reactive/negative COVID-19 result from a Rapid Test or PCR (Polymerase Chain Reaction) of health (in English or Bahasa Indonesia) issued by the local health authorities no more than seven days prior to arrival. Indonesian nationals are exempt.\\nThose who test negative may be allowed to self quarantine at home.\\nThey must also not have a travel history to any COVID-19 affected countries in the 14 days prior entry into Indonesia. According to the authorities, should there still be many COVID-19 affected countries, the other two requirements would suffice.\\nAll travellers must fill out and submit a Health Alert Card to the Port Health Office prior to arrival at the entrance of the Indonesian International Airport. If additional investigations find the initial symptoms of Covid-19, there will be an observation at a government facility for 14 days.\\nAll Visa services are temporarily suspended for all types of visas until further notice with the exception of Diplomatic Visas, Service Visas and Residence Visas Limited TKA (VITAS TKA) specifically for foreigners who are working on the National Strategic Project (PSN).\\nThe extension of Short Visit Pass for foreign travellers who are currently in Indonesia and have expired shall be conducted in accordance with the Regulation of the Ministry of Justice and Human Rights No. 7 of 2020.\\nThe extension of Residence Permit for holders of Temporary Stay Permit Card (KITAS)/ Permanent Stay Permit Card (KITAP) and holders of Diplomatic Visa and Service Visa who are currently overseas and will expire, shall be conducted in accordance with the Regulation of the Ministry of Justice and Human Rights no.7 of 2020.\\nBorder closures:\\nThe border between East Nusa Tenggara and Timor-Leste is closed.\\nWest Kalimantan has closed its land borders with Malaysia\\u2019s Sarawak state.\\n\\nInternal restrictions:\\nAll domestic transport via air, land and sea was allowed to resume from 7 May. However, operators have to comply with strict health guidelines and not everybody is allowed to travel. Individuals exempt from travel restrictions are required to abide by further directives. These include a travel certificate from a relevant institution, a negative COVID-19 test and declaration of travel plans.\\nThe authorities implemented \\u2018large scale social restrictions\\u2019 (PSBB), which is legally enforceable. The capital Jakarta, has PSBB in place until 22 May.\\nOther areas under PSBB include, but are not limited to, West Sumatra province, Surabaya (East Java province), South Tangerang city, Tangerang city, Tangerang regency (all Banten province), Tarakan city (North Kalimantan province), Bogor regency, Bogor city, Depok city, Bekasi regency, Bekasi city, Bandung City, Bandung regency, West Bandung regency, Sumedang regency, Cimahi city (all West Java province), Tegal city, (Central Java province), Pekanbaru city (Riau province), Makassar city (South Sulawesi province).\\nAreas under COVID-19 \\u2018Red Zone\\u2019 (areas with high case of COVID-19) include, but are not limited to, Batam city, Greater Bandung, Greater Jakarta, Malang city, Manokwari city, Medan city, Palembang city, Semarang city, Surabaya city, Surakarta city and Sorong city.\\nTravel within the Greater Jakarta (Bogor, Bekasi, Depok, Jakarta and Tangerang) via ground transport is permitted.\\nTravel into and out of COVID-19 \\u2018red zones\\u2019 and areas which have implemented PSBB measures, including Jakarta, will be prohibited under the ban. However, inter-provincial toll roads and public transportation will remain open so as to facilitate travel for essential workers and services.\\nFor areas under PSBB, travel by train and sea is restricted until 31 May and 8 June respectively. All public facilities will be closed including places of worship, schools, entertainment venues, as well as some tourist attractions. All businesses in non-essential sectors have been urged to implement working from home arrangements for staff.\\nJakarta: Under PSBB until 4 June, all public facilities are closed including places of worship, schools, entertainment venues and some tourist attractions. All businesses in non-essential sectors have been urged to implement working from home arrangements for staff. Taxi services such as Bluebird continue to operate, though with reduced operations. TransJakarta bus and metro services are only operating at half their passenger capacity and with reduced hours from 06.00 to 18.00. All passengers are required to wear a mask when using public transport in Jakarta. The city\\u2019s Mass Rapid Transit and Light Rail Transit services are limited to 06.00-18.00 under the PSBB.\\nA curfew has been put in place in Aceh province until 29 May, between 20.30 and 05.30. All businesses including tourist attractions and entertainment venues are closed. Public transport is exempted. Further curfews are in place for Mataram (West Nusa Tenggara province), Sikka (East Nusa Tenggara province) and Pekalongan (Central Java province).\\nThe annual exodus of Indonesians from urban centres to their hometowns, known locally as mudik, for the Eid al-Fitr holiday has been banned.\\nAll access both inbound and outbound from airports and seaports in Papua is restricted; a number of local government authorities have ordered this to be extended. However, they have clarified that Papua is not under lockdown. Social distancing measures are in place, and entertainment venues and places of worship are closed. Places such as markets and shops are closed or have limited operation time from 06.00 to 14.00. The authorities have urged people to remain at home unless journey is deemed essential.\\nDuring the period of the PSBB, all passengers of the KRL Commuterline (in Greater Jakarta region) are required to show a letter of assignment indicating that they work for essential sectors that are allowed to operate during PSBB.\"},IR:{info:\"No confirmed reports of Iran quarantining foreigners or its own citizens.\",updated_at:\"2020-05-23\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ir.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Only non-Iranians are able to depart from Iran via a very few airlines (Qatar Airways, Iran Air and Mahan). \\n\\n1. Nationals of China (People's Rep.) with a normal passport, passengers with a Hong Kong (SAR China) passport and passengers with a Macao (SAR China) passport are no longer visa exempt. However, they can obtain a visa on arrival.\\n2. Passengers must go through medical screening upon arrival and will be subject to be tested for COVID-19 and to be placed in quarantine.\\n3. A completed self-declaration form concerning COVID-19 must be presented upon arrival.\\n4. Based on the travel advisory restriction issued by UAE Government, nationals of UAE are not allowed to travel to Iran.\\n\\nIranAir has suspended all flights to and from European destinations until further notice. All flights from mainland China are banned until further notice. All neighbouring countries to Iran - aside from Afghanistan - have closed joint borders, and a number of countries have banned flights from Iran.\\n\\nInternal restrictions:\\nThe ban on inter-city travel has been lifted, and those businesses judged to pose only a \\u2018medium risk\\u2019 of spreading the coronavirus have been allowed to reopen. This excludes gyms, restaurants, shopping malls and Tehran's grand bazaar\\nUniversities, schools, cultural and sports centres will remain closed. \\n\\nRelaxation to restrictions: \\nMuseums and historical sites across Iran will reopen to the public on Sunday 24 May. All government employees working from home must return to their offices on May 30. Limited reopening of holy sites after Eid al-Fitr. (Times of Israel, 23.05.2020) \"},IQ:{info:\"Iraqi citizens who have been in China, Iran, Thailand, South Korea, Japan, Italy, Singapore, Kuwait, Bahrain, Turkey, France, Spain, Qatar, Germany, and Nigeria in the past 14 days will be quarantined for 14 days.\",updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://iq.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll airports across both Federal Iraq and the Kurdistan Region will be closed to commercial passenger flights until at least 1 June, subject to an additional extension.\\n\\nInternal restrictions:\\nFederal Iraq\\nThe nightly curfew timing has changed to 17.00-05.00, applicable to weekends as well, in place until further notice. A 24-hour curfew will be enforced during the Eid el-Fitr holiday from 22 to 30 May.\\nAll individuals are required to wear face masks when outside of their homes, or will face legal consequence.\\nInterprovincial movement is restricted to only emergency situations, civil servants and business trips. Intraprovincial movements are also restricted in areas under curfew.\\nThe Safwan border crossing with Kuwait is closed. Three border crossings with Iran remain open only to bring back Kurd citizens from Iran. The Ibrahim Khalil border crossing (KR) with Turkey is closed for travel, after Turkey banning all travel to Iraq.\\nKurdistan Region (KR)\\nA 24-hour full lockdown will be in place for the Eid el-Fitr holiday, which will be in effect from 5:00 p.m. on May 21 through 5:00 a.m. on May 31. No traffic will be allowed except security and medical services. Only pharmacies can operate during the full lockdown.\\nAll non-essential overland movement between cities within the KR and between the KR and federal Iraq will be subject to special approval of the Supreme Committee for Coronavirus Response. However, during the three-day lockdown in the Eid holiday, no movement between KR and federal Iraq, as well as inter-provincial movement within KR will be allowed.\\nAll border crossings, including those previously open for residents to return, are closed until 1 June.\"},IE:{info:\"Irish Health Authorities require anyone entering Ireland from abroad, except Northern Ireland, to either self-quarantine or self-isolate on arrival for 14 days.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ie.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAnyone coming into Ireland (apart from Northern Ireland) is advised to self-quarantine on arrival for 14 days. This includes Irish residents.\\nFlights are still operating from Dublin and Cork Airport but at a reduced availability. Most of the flights still operating are to repatriate Irish nationals.\\nTravel restrictions for people coming from China, Iran, Italy and Spain.\\n\\nInternal restrictions:\\nLockdown measures are gradually being eased. Certain businesses, including hardware stores, motor repair shops, IT outlets and opticians, reopened on 18 May, some workers may return to work.\\nCitizens are advised to avoid unnecessary journeys and stay within 5km of their residence.\\nFacemasks are mandatory on public transport and enclosed indoor areas such as small shops.\\nEducational institutions as well as bars and pubs are closed until further notice. All non-essential businesses are closed.\\nThe government banned social gatherings of more than four people.\\n\\nRelaxation in restrictions\\nLockdown measures are gradually being eased. This process will start with increasing the allowed exercise area to 5km and allowing over-70s to go out for exercise.\\nFrom 8 June, people may travel up to 20 km from their home, further retail outlets can reopen and up to four people may visit another household.\\nFrom 29 June, events can take place but will not be open to the public. Organisations where employees have low levels of interaction with people can reopen. Cafes and restaurants may reopen. Public transport will be restricted, measures will be introduced at ports and airports.\\nHotels will potentially reopen from 20 July. Cultural venues can open, social gatherings will be allowed.\\nLarger events may be allowed from 10 August.\\n\\nThe Irish government has established a phone number for\\u202FCOVID-19-related travel queries:\\u202F\\u202F+353 1\\u202F613 1733.\\u200B \"},IL:{info:\"All arriving passengers may be subject to health screening and/or a mandatory 14-day quarantine in a Government of Israel-established quarantine center. \\nThose who demonstrate the ability to maintain proper home isolation (such as those with a housing of their own or a completely separate housing unit with no other occupants) may be allowed to undergo their 14-day required isolation at home or another suitable location available to them. Individuals who are unable to home-isolate according to regulations will be directed to hotel isolation at the expense of the State of Israel. \",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://il.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nEuropean carrier Wizz Air announced that it will resume limited flights between London Luton Airport (LTN) and a few destinations, including Tel Aviv, although, at the moment, only Israeli citizens and residents are allowed to enter Israel, provided they undergo self-quarantine for 14 days. This measure is in place until further notice.\\nQuarantine should be undertaken in a state-designated facility. Isolation at home can be allowed on a case by case basis, but travellers are required to fill in this form 72 hours before departure.\\nEntry exceptions may be made for non-nationals whose \\u2018centre of life is in Israel\\u2019. For further clarification if you qualify for this exception contact the nearest Israeli embassy.\\nBorders with Jordan and Egypt are closed as well as crossings with Gaza.\\nMost checkpoints between Jerusalem and Bethlehem and its surrounding suburbs in the West Bank have been closed until further notice.\\nTel-Aviv airport remains closed (apart from El Al repatriation flights available through Israeli embassies).\\nCommercial flights from Ben Gurion airport to the United States with United Airlines, El AI and Turkish Airlines only.\\n\\nInternal restrictions:\\nUp to 50 people can gather in an open-air space. Visits to first-degree family members are allowed.\\nTwo people can exercise together, while sea sports are allowed, although congregating at beaches remains prohibited.\\nRestrictions requiring shops in Muslim-majority areas to close at 18.00 will be applied in communities designated as virus hotspots.\\n\\nRelaxation in restrictions: \\nA multi-phase exit strategy is underway. The first began on 7 May, when malls and open-air markets and gyms were allowed to re-open.\\nThe re-opening of smaller shops has been approved. These include: increasing the workforce to 30% in the private sector; allowing smaller shops to reopen, removing the 100 metres movement restriction for non-essential reasons; as long as social-distancing rules are adhered to. Schools have reopened for limited classes and under strict preventive measures.\\nThe restriction to only exercise within 1,640 feet (500 metres) from home is lifted.\\nHotels and other guest accommodation venues can re-open.\\nAll people must wear a face mask in public. An initial fine of 200 Israeli Shekel for failing to wear a mask after receiving a first warning applies, and a distance of two metres between people must be maintained.\\nFurther restrictions will be lifted, pending an assessment of the situation, 31 May and 14 June when the majority of restrictions can be lifted (under the condition of adhering to social-distancing rules and additional preventive measures).\"},IT:{info:\"All individuals entering Italy by any means of transportation are obliged to self-quarantine in their home/hotel for 14 days even if they have no symptoms of Covid-19. Prohibition of movement in public places except for justifiable work reasons (commuting, public and commercial transport is allowed), basic necessities (i.e., food shopping), and health emergencies.\\nIf trip to Italy is for working reasons and presence in Italy is less than 72hrs, self-isolation is not required.  In the event of infection with COVID 19, travellers should report this promptly to the local health authority.\",updated_at:\"2020-05-19\",source:\"WFP/ FAO\\nhttps://it.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government announces all airports will start reopening from 3 June (CNN,20.05.2020)\\n\\nIncoming International travel:\\nAll land, sea and air borders will remain partially closed until 3 June. However there are exceptions for work, health or absolute urgency needs. These apply for:\\nItalian citizens and residents who are abroad temporarily (for tourism, business or otherwise) or had been forced to leave a foreign country. This exception doesn\\u2019t apply for those who normally reside abroad and wish to visit Italy.\\nForeign travellers who wish to transit through Italy to reach their country of residence. The transit must not exceed 24 hours (extendable in exceptional circumstances by additional 12 hours).\\nForeign travellers wishing to enter Italy for work reasons.\\nThe travellers should preferably check with the airline/courier if they present the essential reasons for travelling, since further health/documentation checks could be imposed before boarding.\\nAll travellers entering Italy are required to fill-in a certificate (link) stating the reasons for their travel and the address where they will spend a 14-day mandatory quarantine period. The same certificate is required to be filled in by all travellers transiting through Italy.\\nAll arrivals are required to report to the local health authorities and undergo a 14-day self-isolation quarantine and health-monitoring period [Medical has clarified that \\u201Cisolation\\u201D is for those who are already ill, and the correct term is quarantine]. Those without an appropriate location where to spend the quarantine will be accommodated in designated government facilities. Those who enter Italy for work for a maximum period of 72 hours (exceptionally extendable for another 48 hours) are exempt from the requirement to report to the health authorities and observe the quarantine. \\n\\nAll travellers entering Italy are required to reach their home or the chosen address with a private means of transport (personal vehicle, taxi, organised shuttle or member of the family who is living in the same chosen address). Those unable to arrange this will be quarantined in government designated facilities.\\nCross-border workers, healthcare workers, passengers and freight crews are excluded from these rules.\\n\\nA new decree has been issued by the Italian government, which will be in effect from 18 May to 31 July 2020:\\n\\nOutbound International travel: \\nUntil 2 June, international travel is prohibited except for proven work needs, situations of urgent need, or health reasons. From 3 June, international travel to and from the following will be allowed without restrictions or quarantine requirements:\\na)        European Union member states; b) Schengen area member states; c) United Kingdom; d) Andorra and Monaco; e) Republic of San Marino and Vatican City [article 6, para.1  of DPCM of 17 May] \\nMore restrictive provisions may be applied in relation to specific States and territories, depending on their appropriateness and in proportion with the current epidemiological risk. International travel will also be governed by limits placed by EU rules. \\nFor travel from all other countries, self-certification and quarantine requirements as above remain in force until at least 15 June. [article 6, para.2 and 3  of DPCM of 17 May]\\n\\nInternal restrictions: \\nWithin your region: Movements within regions will no longer be restricted; more restrictive measures may be applied to specific areas, subject to worsening of the epidemiological situation. Inter-regional travel: Until 2 June, journeys outside of one's region, are prohibited except for proven work needs, situations of urgent need, or health reasons. A self-certification form will be needed for such journeys. From 3 June, journeys across the national territory will be allowed; however, more restrictive provisions may be applied in specific geographical areas, depending on their appropriateness and in proportion with the current epidemiological risk.\\n\\nQuarantine: Persons subject to quarantine are prohibited from leaving their own residence unless they are hospitalized or their recovery is confirmed. Precautionary quarantine may be applied by health authorities to persons having had close contact with confirmed COVID-19 cases.\\nGatherings: are prohibited in public or places open to the public. Demonstrations, events, and shows of any type with the presence of an audience, including cultural, recreational, sports or trade show events or any conference or convention activity can ONLY take place where it has been determined that it is possible based on epidemiological data trends and with the adoption of the provisions of Article 2 of the 25 March 2020 decree.\\nMayors may temporarily close areas open to the public in which it isn't possible to ensure that the minimum interpersonal distance of 1 meter is respected\\nMeetings: must respect minimum interpersonal distance of 1 meter and preferably should be held remotely\\nReligious services: are conducted in compliance with the protocols and appropriate measures to prevent the risk of contagion\\nIn-person Teaching activities: of schools of educational institutions of all grades and levels continue to be suspended\\nEconomic, productive, and social activities: are permitted so long as they comply with national guidelines or protocols suitable for preventing of reducing the risk of contagion. Failure to comply may result in the suspension of the activity until safe conditions are restored\\n\\nSelf-certification form - not necessary within one's region, but required to go to another region until 2 June (justification will be required - either work, health, or other urgent needs). After 2 June, movements within Italy will be allowed without a self-certification form.\\nGatherings - Not allowed in public spaces and 1m-distance must also be respected inside homes. Distances will be indicated in locations open to the public. Private and public parties and events of any size continue to be prohibited.\\nVisits with friends are allowed, but 1-m distance must be respected. Masks - required in enclosed spaces and in shops. Gloves will also be required in grocery stores. Masks recommended in open but crowded areas\\nShopping centers - will reopen, with entrances staggered. Cafes & restaurants - to reopen with new safety protocols.       \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"},JM:{info:\"All travelers from countries where there is local transmission of the COVID-19 will now be required to self-quarantine for up to 14 days, either in their hotel or place of residence in Jamaica. If travelers are asymptomatic, but required to self-quarantine, they will be allowed to depart the island within the 14-day quarantine period. Those presenting symptoms will be immediately isolated in isolation facilities at a public hospital.Quarantine facilities will be provided by the Government of Jamaica. \",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://jm.usembassy.gov/covid-19-information-jamaica/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll air and sea ports remain closed to incoming passenger traffic until at least 31 May. Re-entry of Jamaican nationals will be permitted. Outgoing and cargo flights continue to operate, but flight availability is likely to be very limited. \\nThe Government of Jamaica has implemented enhanced screening and quarantine measures to reduce the spread of COVID-19.  \\n\\nInternal restrictions:\\nThe nationwide curfew has been extended until 24 May from 20.00 to 05.00, and will adjust for the Labour Day holiday; the holiday curfew will begin 24 May at 15.00 and end at 08.00 on 26 May, then resume at 21.00 and end on 31 May at 05.00. Essential workers are exempt. Anyone entering Jamaica must remain in quarantine for 14 days from the day of entry. All non-essential businesses, including educational institutions and recreational, tourist and leisure facilities, will be closed until 31 May. It\\u2019s mandatory to wear masks when in public spaces. Gatherings of more than ten people are prohibited.\"},JP:{info:\"The Government of Japan requests all travelers entering the country, including Japanese nationals  to self-quarantine at home or in a hotel for 14 days. The Japanese Quarantine Act permits detention and isolation of those suspected of or confirmed to be carrying the virus.\",updated_at:\"2020-05-20\",source:\"https://jp.usembassy.gov/covid-19-information/\\nhttps://www.gov.uk/foreign-travel-advice/japan/coronavirus\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Japan plans to lift the state of emergency in the western prefectures of Osaka, Kyoto and Hyogo  from the list of eight remaining ones but keeping curbs in Tokyo area and the northern island of Hokkaido (Reuters, 20.05.2020)\\n\\nInternational Travel:\\nEntry for foreign travellers who have been to the following countries in the 14 days prior to arrival remains prohibited until at least 31 May:\\nAfrica: Cabo Verde, Cote d'Ivoire, Congo (DRC), Djibouti, Equatorial Guinea, Gabon, Guinea-Bissau, Mauritius, and Sao Tome and Principe.\\nAmericas: Antigua and Barbuda, Barbados, Bahamas, Bolivia, Brazil, Canada, Chile, Colombia, Dominica, Dominican Republic, Ecuador, Honduras, Mexico, Panama, Peru, St Kitts and Nevis, Uruguay and the US.\\nAsia-Pacific: Australia, Brunei, China, Hong Kong (China SAR), Indonesia, Macao (China SAR), Malaysia, Maldives, New Zealand, Philippines, Singapore, South Korea (all regions), Taiwan (China), Thailand and Vietnam.\\nEurope & CIS: Albania, Andorra, Armenia, Austria, Azerbaijan, Belarus, Belgium, Bosnia and Herzegovina, Bulgaria, Croatia, Cyprus, Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Italy, Ireland, Kazakhstan, Kosovo, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Moldova, Monaco, Montenegro, Netherlands, North Macedonia, Norway, Poland, Portugal, Romania, Russia, San Marino, Serbia, Slovakia, Slovenia, Spain, Sweden, Switzerland, Ukraine, the UK and Vatican City.\\nMiddle East: Bahrain, Egypt, Iran, Israel, Kuwait, Morocco, Oman, Qatar, Saudi Arabia, Turkey and the United Arab Emirates\\nThe application of visa exemption arrangements for the following countries are temporarily suspended:\\nAPAC: Bangladesh, Brunei, Cambodia, Hong Kong (SAR), India, Indonesia, Laos, Macao (SAR), Malaysia, Mongolia, Myanmar, Nauru, Palau, Papua New Guinea, Samoa, Singapore, South Korea, Solomon Islands, Thailand and Vietnam.\\nAmerica: Argentina, Bahamas, Barbados, Colombia, Costa Rica, Dominican Republic, El Salvador, Guatemala, Honduras, Mexico, Paraguay, Peru, Suriname and Uruguay.\\nEurope: Andorra, Austria, Azerbaijan, Belgium, Bulgaria, Croatia, Czech Republic, Cyprus, Denmark, Estonia, Finland, France, Georgia, Germany, Greece, Hungary, Iceland, Ireland, Italy, Kazakhstan, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Monaco, Netherlands, Norway, Poland, Portugal, Romania, San Marino, Slovakia, Slovenia, Spain, Sweden, Switzerland, Turkmenistan, Ukraine, Uzbekistan and Vatican City.\\nMiddle East: Bahrain, Egypt, Iran, Israel, Oman, Qatar and UAE.\\nAfrica: Lesotho and Tunisia.\\nOther: British National (Overseas).\\nPermanent residents, spouses of Japanese nationals, spouses of permanent residents and long-term residents are only permitted to enter the country if they left their departure countries by 00.00 on 3 April.\\nJapanese nationals as well as foreign travellers who are allowed entry into the country are required to take a COVID-19 test and must self-quarantine for 14 days. They are also requested to refrain from using public transport. Foreigners without a residence in Japan are permitted to self-quarantine in hotels or any other short-term accommodation arranged by themselves or a local host prior to their arrival. The restrictions will last until at least 31 May.\\nPRC nationals holding passports issued in Hubei and Zhejiang provinces will also be denied entry. This does not apply to the spouses and children of Japanese nationals.\\nSingle entry and multiple entry visas issued before or on 27 March by Japanese diplomatic missions in Bahrain, Brunei, Congo (DRC), Indonesia, Israel, Malaysia, Philippines, Qatar, Singapore, Thailand and Vietnam remain suspended.\\nAll visas issued by Japanese embassies and consulates in China and South Korea are temporarily suspended. Visa exemption arrangements are also temporarily suspended for passport holders of Hong Kong, Macao and South Korea, as well as British National (Overseas) passport holders.\\nThe authorities have implemented stringent health screening measures in all ports of entry, including airports and seaports.\\nThose who are allowed to enter Japan as a transit country are not subject to the quarantine measures, as long as they do not disembark. Anyone disembarked will be requested to stay at a place designated by the Chief of the Quarantine Station, and not to use public transportations, but they may leave Japan before finishing the 14-day period.\\nAll flights from South Korea and China can only arrive at Narita International Airport and Kansai International Airport.\\n\\nTo confirm eligibility, before travelling you should consult with the consular section of your nearest Japanese Embassy if you are abroad, or the Immigration Services Agency if you are in Japan.  \\n\\nInternal restrictions:  A nationwide state of emergency (SoE) has been extended to 31 May. Meanwhile, the government on 14 May lifted the SoE in 39 out of 47 prefectures.\\nThe SoE remains in place in the following prefectures: the capital Tokyo,\\nChiba (all Kanto region), Hokkaido (Hokkaido region), Hyogo (all Kansai region), Kanagawa, Kyoto, Osaka and Saitama. Earlier, these prefectures were declared \\u2018special alert\\u2019 areas, where measures to contain the pandemic are focused. The measures include school closures and strongly promoting working from home or staggering commuting hours.\\nUnder SoE, respective governors are allowed to order the closures of facilities such as schools, cinemas, departments stores as well as ban the gathering of large crowds. Essential services, such as medical facilities, pharmacies, supermarkets, convenience stores, factories, public bathhouses and restaurants, will continue to operate.\\nThe authorities on 4 May announced gradual easing of restrictions on social and economic activities in prefectures not on \\u2018special alert\\u2019. Some businesses, such as restaurants and department stores that were temporarily closed resumed operations by taking social distancing measures and operating in shorter hours. Public transport such as busses, trains and taxis continue to operate, though a reduction in services can be expected.\\nRestrictions on social and economic activities will be eased in prefectures no longer under the SoE. Venues such as restaurants, department stores, museums and movie theatres will be gradually reopened on the condition that social distancing measures are in place.\\nPrior to the announcement of the state of emergency, the authorities had already requested all people to avoid large gatherings and for those already in areas with an uptick in COVID-19 cases to stay inside their homes. While no nationwide directive to cancel events has been issued, event sponsors have been asked to consider whether events are necessary. It is expected that various public events and access to places such as entertainment places, national museums and sports stadiums will be suspended until further notice. \\nFrom May 28, East Japan Railway Company (JR East) will reduce the number of regular services on the Tohoku, Joetsu and Hokuriku Shinkansen lines, as well as some standard trains, by as much as 50 percent. (The Mainichi, 20.05.2020)   \\n\"},JO:{info:\"Curfew in place. Jordanians in neighbouring countries who return to Jordan will face quarantine measures for fourteen days, in designated hotels.The Jordanian Ministry of Health has designated the following seven hospitals for COVID-19 testing and isolation: Al Bashir Hospital, Amman; Jordan University Hospital, Amman; Prince Hamzah Hospital, Amman; Zarqa New Public Hospital, Zarqa; King Abdullah University Hospital, Irbid; Karak Public Hospital, Karak; Prince Hashim Military Hospital, Aqaba\",updated_at:\"2020-05-17\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://jo.usembassy.gov/covid-19-information/\\nhttps://www.osac.gov/Content/Report/41931194-fdc5-4751-8844-18839adbdcfb\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Government to impose three-day comprehensive curfew beginning 21 May (Jordan Times, 20.05.2020)\\n\\nInternational restrictions:\\nAll flights to/from Jordan, with the exception of cargo flights and those carrying diplomatic personnel and/or staff of international organizations will be suspended until further notice. All land and sea crossings are closed except for cargo vehicles until after Ramadan. Jordanians in neighbouring countries who need to return to Jordan will be allowed to do so but will face quarantine measures for 14 days, enforced by the authorities in designated hotels.\\n\\nInternal restrictions\\nA \\u2018state of emergency\\u2019 that restricts overland movements between governatores is in place; checkpoints placed around the capital Amman, other major urban centres and major thoroughfares. Manned by Jordan Armed Forces. Curfews also to be enacted. Throughout the Islamic holy month of Ramadan a nightly curfew from 19.00-08.00 is in place. Exceptions for movement restrictions will be made for emergencies, but require special permission applied for through the online portal. In the capital Amman residents are allowed to use their private vehicles from 08.00. In governorates of Aqaba, Irbid, Karak, Ma\\u2019an, Mafraq and Tafila, which were previously on lockdown, people are allowed to move on foot or move by car outside of curfew hours. Entry and exit from these governorates remains prohibited, except for authorised persons. People caught breaking rules will be quarantined for 14 days and could also face up to one year of jail time. During the first day of Eid Al Fitr holidays (expected between 23 and 25 May), vehicular movement will be prohibited, except for medical staff, epidemiological teams and a limited number of employees working for vital services. On the following days, a system allowing vehicles with even/odd plate numbers to move around will be in place in Amman, Balqa and Zarqa governorates. Further specific details on the exact schedule are expected to be determined by the Public Security Directorate in the coming days. From 26 May, civil servants will return to work.\"},KZ:{info:\"Those traveling to Kazakhstan from abroad will be held in quarantine for up to two days and tested for COVID-19. Individuals either displaying symptoms of COVID-19 or who test positive for COVID-19 will be hospitalized. Those who test negative will be released after the two days of monitored quarantine and allowed to self-isolate from home for 12 days. Individuals in self-isolation at home may be required to download the Smart Astana app, which will be used to monitor compliance with self-isolation restrictions. \\n\",updated_at:\"2020-05-23\",source:\"\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.osac.gov/Content/Report/28d22011-27ed-4ee9-b8b0-184298f8e0d5\\nhttps://kz.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Kazakh and Turkish airlines may resume passenger flights between the two countries in late June. (Reutera, 23.05.2020) \\n\\nInternational restrictions:\\nAll foreign nationals are barred entry into the country until further notice due to the imposition of a state of emergency. Categories of foreign nationals that are exempt from this restriction are:\\nDiplomatic personnel and their family members.\\nMembers of official delegations invited by the Ministry of Foreign Affairs of Kazakhstan.\\nMembers of train, locomotive, aircraft and sea crews.\\nFamily members of citizens of Kazakhstan (subject to confirmation of kinship \\u2013 spouses, parents and children).\\nForeigners (stateless persons), holders of Kazakh residence permits.\\nService personnel of foreign cross-border facilities on the territory of Kazakhstan\\nAll foreigners currently in Kazakhstan are allowed to depart.\\nKazakh nationals are exempt from inbound travel restrictions but are not allowed to leave the country.\\nMost international flights remain suspended except for limited repatriation flights for foreign nationals to depart and Kazakhs to return. \\n\\nCOVID-19 Testing for Certain Travelers:  \\nIn the event the Kazakhstani authorities determine that you have likely been exposed to the COVID-19 virus, they may require you to go to a medical treatment facility in order to be tested.  In that event, please comply with instructions while at the same time taking such personal items as you may need if the testing process requires an overnight stay or a longer period of quarantine. \\n\\nInternal restrictions:\\nThe state of emergency has ended on 11 May though many domestic restrictions remain.\\nDomestic flights have gradually resumed since 1 May.   Limited flights have resumed between Nur-Sultan and Almaty and other cities, including Kyzylorda, Oskemen, Semey, Petropavlovsk, Aktobe, Pavlodar, Taraz, Karaganda, Taldykorgan, Kokshetau, Shymkent, Aktau, Uralsk, Zhezkazgan, Balkhash, Zaysan, and Urdzhar. As of May 11, passengers will no longer be required to provide documentation of a negative COVID-19 test. At the airport, passengers will be required to wear masks and follow social distancing guidelines of one meter. Staff at the airport will measure passengers\\u2019 temperature.\\nKazakhstan\\u2019s border largely remains closed to foreign citizens with highly limited exception, including diplomats, direct-family members of Kazakhstani citizens, residency permit holders, and some employees of designated companies in critical industries. \\nNur-Sultan and Almaty have been placed under quarantine with the following restrictions in place:\\nResidents can now leave their houses but they must wear masks and adhere to strict social distancing. Gathering of more than three people is banned.\\nEntry and exit to these cities is restricted.\\nThere will be increased patrolling by the police forces, with an additional number of spot checks for identification documents. However, in the Almaty region checkpoints between districts and cities will be removed from 18 May.\\nMeasures that are similar to what is in place in Nur-Sultan and Almaty have also been introduced in Akmola province, Atyrau (Atyrau province), Shymkent, and several towns in Karaganda province, all of which have also been placed under so-called quarantine.\\nSome form of movement restrictions have also been introduced in Aktobe (Aktobe province), Aktau (Mangystau province), Kostanay province, Pavlodar province, Turkistan province, West Kazakhstan province, and Zhambyl province; in some of these provinces both exit and entry are banned, while in some only entry is restricted. Intercity bus and rail services linking these cities and provinces with other major urban centres have been limited or suspended.\"},KE:{info:\"Those coming into the country must undergo a mandatory 14-day quarantine at a government designated facility at their own expense.\\nIf any person exhibits symptoms such as cough, or fever, they should present themselves to the nearest health facility for testing.\\nMedical quarantine will be extended an extra 14 days for those who test positive for COVID-19 in government quarantine facilities. \",updated_at:\"2020-05-19\",source:\"UNHAS\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ke.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"UNHAS Ops Limited are still running domestic  flights'- no cross border flights.\\xA0\\n\\nInternational restrictions:\\nAll incoming and outgoing international passenger flights are suspended until further notice. The Kenyan government affirms that evacuation flights organised by foreign governments for their citizens will still be permitted. Kenya\\u2019s borders with Somalia and Tanzania are closed to passenger traffic and those ferrying automobiles across the borders until at least 15 June. While cargo vehicles are exempt from the measure, truck drivers are required to undergo mandatory health screening for COVID-19.\\n\\nThose coming into the country must undergo a mandatory 14-day quarantine at a government designated facility at their own expense.\\n\\nInternal restrictions:\\nThe nationwide curfew from 19.00 to 05.00 has been extended by the authorities until at least 6 June; essential sectors remain exempt from the measure. No movement in or out of the capital Nairobi, as well as Kilifi, Kwale, Mandera and Mombasa counties is permitted during this time. Police controls have been put in place to ensure compliance with the movement restrictions. No entry and exit movement is permitted into and out of the Eastleigh area in Nairobi and Mombasa\\u2019s Old Town until 21 May (closure of markets and restaurants in both areas). A ban on movement in or out of Kilifi, Kwale, Mandera Mombasa and the capital Nairobi is in place until at least 6 June. All people should acquire a mask and wear it when in public. Nakuru CBD has been put on lockdown. The governor of Murang\\u2019a has banned incoming travellers from other counties. Residents exiting or travelling within Murang'a will be questioned on the necessity of their journeys to reduce non-essential movement. Markets have been closed indefinitely in Gakoe, Gatukuyu, Jamhuri, Kamwangi, Kiambu and Madarak counties. In Homa Bay, roadblocks are in place on all primary routes into the county, and health officials are conducting screenings on those entering. Similar checkpoints are in place in Naivasha (Nakuru), though primarily targeting Public Service Vehicles (PSVs).\"},KI:{info:\"Travelers \\u201Cfrom countries with ongoing local transmission of novel coronavirus\\u201D to spend at least 14 days in a country free of the virus before traveling to Kiribati, and to provide a medical clearance to confirm that they are virus-free. Travelers arriving earlier than the required 14-day waiting period may be subject to quarantine and/or deportation.\",updated_at:\"2020-04-30\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://fj.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Tarawa (TRW) is closed.\\n\\nInternational restrictions:\\nAll passengers who have been in a country with confirmed cases of COVID-19 must have stayed in a country with no confirmed cases for at least 14 days and provide medical clearance to confirm that they are free of the virus prior to entry.\\nExemptions for the medical clearance requirements will be considered only for travellers transiting through Kiribati from countries with no confirmed COVID-19 cases.\\n\\nInternal restrictions:\\nA state of emergency has been declared. The public are urged to minimise public gatherings and maintain social distances of two metres.\"},KW:{info:\"Kuwaiti citizens who enter Kuwait from any country will be put in home quarantine for 28 days upon arrival unless they display COVID-19 symptoms in which they will be put in institutional quarantine. \",updated_at:\"2020-05-19\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://kw.usembassy.gov/covid-19-information/\\nhttps://simpleflying.com/kuwait-passenger-flights/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to Kuwait are suspended.\\n- This does not apply to diplomatic, humanitarian or repatriation flights approved by the DGCA Air Transport Department.\\n- This does not apply to aircraft operated by Kuwait Air Force, Kuwait Police Wing and Kuwait Ameri Flight.\\n- This does not apply to aircraft exempted by the authority.\\n\\n        \\nInternational restrictions: All flights to/from Kuwait, with the exception of cargo flights are suspended until further notice. Land border crossings with Iraq remain closed, while only commercial trucks are permitted to enter Saudi Arabia. The issuance of all visas (except for diplomatic purposes) is suspended indefinitely. All types of visas are automatically extended until 31 May.\\n\\nIt is our understanding that passengers traveling directly to the airport to depart Kuwait will be permitted to travel with their passport and a copy of their booking and/or ticket showing departure.  They should allow additional time for possible stops by relevant authorities and should be wearing face masks while outside their homes.\\n\\nInternal restrictions:The current nightly curfew from 16.00 to 08.00 will become a 24-hour curfew on 10 May until May 30. Nonetheless, people will be allowed to walk inside their residential areas from 16.30 to 18.30. Businesses in essential sectors (e.g. health, security, electricity, oil and municipality, etc.) will be allowed to continue operating. Additionally, supermarkets will be allowed to operate and grocery stores located in areas frequented by expats will remain open.\\nThe use of face masks is mandatory in all public spaces, including grocery stores and during the daily 2-hour walking period.\\nAll non-emergency government offices are closed at least through Thursday, May 28, unless otherwise notified. \"},KG:{info:\"Travellers (including Kyrgyz citizens) arriving from countries with more than 1,000 confirmed cases of COVID-19 will be subject to 14 day quarantine at a medical facility. All other travellers have to undergo mandatory 14-day home quarantine.\",updated_at:\"2020-05-19\",source:\"Reuters\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://kg.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Government will lift most of remaining COVID-19 restrictions during the next few days, reopening public transportation and hotels (Reuters, 19.05.2020)\\nInternational restrictions: \\nAll foreign nationals are barred entry into the country. \\nThe following categories of foreign travellers are exempt from the inbound travel ban:\\nImmediate family members of citizens of Kyrgyzstan (subject to confirmation of kinship);\\nForeign diplomatic (UN) and consular staff and their family members (given an advance notice of arrival to the Ministry of Foreign Affairs of Kyrgyzstan). Travel by car between cities is prohibited, however UN vehicles are allowed to move between provinces.\\nMembers of train, locomotive and aircraft crews; freight drivers.\\nKyrgyz Temir Zholu employees working in Kazakhstan and Uzbekistan.\\nAll visa services have been suspended.\\nEntering the country or crossing at land borders with national IDs is temporarily suspended; this includes Kyrgyzstan residents. All residents are only allowed to enter Kyrgyzstan with valid passports.\\nAll land borders with China and Uzbekistan are closed. Borders with Kazakhstan remain open only for transportation of goods and movement of Kazakh and Kyrgyz citizens returning to the country of origin.\\nTravellers (including Kyrgyz citizens) arriving from countries with more than 1,000 confirmed cases of COVID-19 will be subject to 14 day quarantine at a medical facility. All other travellers have to undergo mandatory 14-day home quarantine.\\nInternational flights have been suspended until further notice.\\n\\nInternal restrictions:\\nA countrywide situation of emergency has extended until further notice. However, the regulation has been lifted in the capital Bishkek, Osh (Osh province), Jalal-Abad (Jalal-Abad province).\\nPrime Minister Muhammadkaly Abylgaziev reported that \\u2018quarantine\\u2019 will be introduced in areas particularly impacted by COVID-19, including Bishkek and Osh cities, as well as, at-Bashy district (Naryn province) and Kanysh-Kiya village (Jalal-Abad province) without confirming exact regulations.\\nPublic transport services are suspended until further notice.\\nRestrictions on outbound travel from Issyk-Kul province are in place from 00.01 on 4 May, only holders of special permits issued by regional authorities will be allowed to exit the region. All inbound travellers will be required to present test certificates and will be subject to mandatory 14-day home isolation. \\n\\nRelaxation of restrictions: \\nKyrgyzstan will lift most of the remaining coronavirus-related restrictions in the coming days, reopening the retail and services sectors and public transportation, the government said on Tuesday 19 May. Public transit will also restart work from May 25. Higher-risk facilities such as public pools and saunas will remain closed and so will schools, although kindergartens may reopen in June. (Reuters, 19.05.2020) \\n\"},LA:{info:\"The GOL has prepared isolation rooms at some hospitals for handling suspected COVID-19 cases.\",updated_at:\"2020-05-18\",source:\"https://www.osac.gov/Content/Report/cc11d328-6a61-453e-8662-18387ca598a3\\nhttps://www.osac.gov/Content/Report/abd2af6f-8fc8-41ab-8461-1847bcd8b7c6\\nhttps://www.osac.gov/Content/Report/39411001-3e28-4652-b3b3-1851a0fe4fad\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"government announces new measures, some restrictions continue to reduce spread (OSAC, 18.05.2020)\\nFlights to Lao People's Dem. Rep. are suspended.\\n\\nInternational restrictions:\\nAll international checkpoints remain closed, and all inbound and outbound passenger flights are suspended until further notice. From 18 May, foreigners in Laos will be permitted to return to their home countries given prior registration with their own diplomatic missions in Laos, and approval from the Laos Ministry of Foreign Affairs. The Ministry of Foreign Affairs has been designated as the lead government agency to oversee assistance for foreign nationals seeking to return to their home countries. Lao nationals who work abroad and currently in Laos are also allowed to travel overseas, provided that entry is permitted by their country of arrival. Lao nationals who wish to return home are required to register with the Lao diplomatic mission in their current location, for further consideration by the authorities. The issuance of visa on arrival, visas issued by Lao diplomatic missions, eVisas and the provision of visa exemptions (including for ASEAN nationals) are suspended until further notice . However, individuals deemed by the government as experts, technicians and foreign workers that are crucial for major projects may be granted visas at the discretion of relevant authorities. Those intending to enter Laos must first obtain the approval of the National Steering Committee for COVID-19 Prevention and Control before proceeding to apply for a visa at the nearest Laos embassy. In addition, the traveller will also have to obtain a medical certificate indicating that he/she is tested COVID-19 negative, issued within 72 hours prior to embarking on the journey. Exempted travellers must undergo COVID-19 testing and will be subject to a 14-day mandatory quarantine at designated facilities. Foreigners currently in Laos with expiring visas from 4 May can apply for extensions at the department of immigration in Vientiane or the various provincial headquarters of the Public Security Department. Visas will be issued for non-tourist purposes only. Visitors must submit requisite information on their health and related documents to the Lao diplomatic missions in the country they are resident for approval before the intended date of travel. Visitors who arrive in the country without the necessary approval will be denied entry. The application form is available on the official website of the Ministry of Foreign Affairs. All traditional and international border checkpoints remain closed, exceptions apply to those with prior authorisation issued by the government and cargo.\\n\\nInternal restrictions:\\nBusinesses, government agencies and transport services are allowed to resume operations amid further easing of domestic restrictions from 18 May until 1 June. The authorities also continue to encourage work from home arrangements. Indoor and outdoor sport activities are permitted. Schools have gradually reopened. Social distancing and strict disease prevention measures remain in place for all activities. However, entertainment venues remain closed. Unofficial gatherings, cultural and celebrative events with more than 50 people are banned. The relaxation of movement restriction until 1 June is temporary. The authorities might impose further lockdown measures in areas when there are new COVID-19 cases reported.\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \"},LV:{info:\"\\u2022Per Latvia\\u2019s Centre for Disease Prevention and Control (SPKC), any person, including children, with recent travel to any foreign country must monitor their health for 14 days, and must self-isolate and call the emergency hotline 8303 for those with mild symptoms  to apply for free testing. If you experience severe high body temperature, cough, sore throat, difficulty breathing, etc. please call 113.\\n\\u2022A hotline for COVID-19 questions: 8345\\n\\u2022A general physician hotline, available 24/7 for all medical issues except for COVID-19, call 6601 6001.\\n\",updated_at:\"2020-05-17\",source:\"https://lv.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll international travel, by air, railway, sea and road is cancelled. Latvians and foreigners with residency rights are allowed to enter the country, and tourists are allowed to leave.\\nBorders are closed to entry except for citizens and residents. Lithuanians and Estonians are allowed to cross the border for work and are no longer required to undergo a mandatory two-week quarantine. In order to cross the border, workers must show employment documents proving they have a job in Latvia.\\nCitizens of Estonia, Latvia and Lithuania are free to move between the three countries without restrictions.\\n\\nInternal restrictions:\\nA state of emergency is in place until 9 June.\\nAll public gatherings of more than two people have been banned (except if in the same household) and many public venues have been ordered to close.\\nSchools and universities are currently closed. Pre-schools and childcare services are still in operation.\\n\\nRelaxation of restrictions:\\nFrom 12 May, public gatherings of up to 25 people will be allowed. However, people will need to observe a two-metre distance from each other as a precaution.\\nSport activities without physical contact, libraries and all shops will be able to reopen during weekends only. Leisure and entertainment venues can open from 07.00 to 23.59.\\nFrom 12 May travel for tourism will be permitted within the Baltic states.\\nAirBaltic has resumed operations as of 18 May for flights from Riga to Tallinn, Vilnius Osland and Frankfurt; for flights from Tallinn to Amsterdam, Copenhagen and Oslo; and for flights from Vilnius to Riga. Flights between Tallinn and Vilnius will resume on 25 May.\"},LB:{info:\"Travelers displaying symptoms of the virus and/or with travel histories indicating possible exposure may be detained for a 14-day quarantine\",updated_at:\"2020-05-19\",source:\"https://lb.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends state of emergency until 7 June  (Urdu Point, 19.05.2020)\\nInternational Restrictions:\\nAll air, land and sea ports remain closed. This includes Rafic Hariri International AIrport (BEY) although some repatriation flights continue to be scheduled for citizens/residents abroad.\\n\\nInternal Restrictions:\\nEconomy will gradually reopen following four-day shutdown; no date set for reopening airport for commercial flights (Reuters, 17.05.2020)\\nThe government on 18 May resumed with a five-step plan to gradually ease restrictions, including allowing some businesses to reopen. A nightly curfew is in place between 19.00 and 05.00.\\nRestaurants and coffee shops are permitted to resume dine-in operations at 50% capacity between 05.00 and 19.00. Other food shops, including sweet shops, are only allowed to offer delivery services. Millers, bakeries, hospitals, factories, hotels and petrol stations can operate on a 24/7 basis.\\nCurrency exchange services are permitted to operate between 08.00 and 18.00.\\nVehicles with number plates ending with an odd number are only allowed on the roads on Mondays, Wednesdays and Fridays, while those ending with an even number (including zero) are allowed on Tuesdays, Thursdays and Saturdays. All vehicles can be used on Sundays. Vans and buses are only allowed to operate at one-third capacity.\\nCinema halls, public parks and malls remain closed until further notice.\\nIndividuals are required to wear masks and observe social distancing. Coffee shops, entertainment venues and places of worship remain closed.\"},LS:{info:\"Individuals who have been in coronavirus affected areas within the past 14 days, including the UK, may be required to self-isolate for 14 days. \",updated_at:\"2020-05-06\",source:\"https://www.gov.uk/foreign-travel-advice/lesotho/health#coronavirus\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound and outbound travel is restricted due to neighbouring South Africa\\u2019s national lockdown and border closure. While no official travel ban is in place, reaching or leaving Lesotho is essentially impossible due to these restrictions.\\n\\nPassengers will be tested for COVID-19 and placed in quarantine for 14 days.\\n\\nOnly five land border crossings between South Africa and Lesotho remain open: Caledonspoort (06:00-22:00), Maputsoe (24 hours), Maseru Bridge (24 hours), Qacha\\u2019s Nek (06:00-22:00) and Van Rooyen\\u2019s Gate (06:00-22:00). \\n\\nInternational restrictions:  \\nThe national lockdown was lifted on 5 May. Non-essential businesses will gradually resume operations from 6 May. However, wearing face masks is compulsory in public places. Public gatherings are also restricted to up to 50 people.\"},LR:{info:null,updated_at:\"2020-05-19\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to Liberia are suspended.\\n- This does not apply to aircraft in state of emergency, technical landing.\\n- This does not apply to humanitarian, medevac, Red Cross, repatriation, charter and special flights.\\nLand borders with Guinea and Cote d\\u2019Ivoire are closed.\\n\\nInternational restrictions:\\nAll flights will be suspended until further notice. The measure does not apply to cargo flights.\\nLand borders with Guinea, Sierra Leone and Cote d\\u2019Ivoire are closed.\\n\\nInternal restrictions:\\nA state of emergency is in effect until 16 June.\\nThe Stay at home measures in the capital Monrovia have been extended on 10 May for two weeks.\\nAll 15 counties are quarantined until further notice. Movement between counties is strictly prohibited except for Montserrado and Margibi which are quarantined as a single unit.\\nResidents are allowed to leave their homes only for essential journeys and be limited to a single person per household for a maximum of one hour.\\nA curfew is in place nationwide from 15.00 to 06.00.\\nThe wearing of face masks in public is mandatory.\\nAll schools, places of worship, cinemas, bars and beaches will be closed until further notice.\\nGatherings of more than ten people are banned.\\nReligious venues (mostly churches and mosques) have reopened from 15 May (mosques on 15 May and churches on 17 May), with 25% of the regular worship-hour occupancy for each service.        \\n\"},LY:{info:\"The Ministry of Health has multiple designated quarantine sites where individuals can be held in quarantine for 14 days.\\n\\nLibyan authorities are carrying out enhanced temperature screenings of passengers arriving at air, land, and sea ports of entry.\\n\\nTravelers should be prepared for new quarantine restrictions to be put into effect with little or no advance notice.\",updated_at:\"2020-05-13\",source:\"UNHAS: sources\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"\\nInternational restrictions:\\nThe GNA-imposed state of emergency officially expired on 6 Aprilt. Civil aviation in all Libyan airports remains suspended. Exemptions will be made for individuals who critically need medical attention abroad. Since 5 May, Misrata Airport is open to repatriation flights to and from Istanbul International Airport.\\nCurfew in GNA controlled areas is extended until at least 17 May from 18.00 to 06.00.\\nThe Municipal Council of Misrata reduced its 24-hour lockdown. Daily curfew is in place from 14.00 to 07.00.\\nIn eastern Libya, the parallel government led by Khalifa Belasim Haftar reduced its total lockdown to a daily curfew from 18.00 to 6.00. In-city movement is prohibited. \\n\\nUNHAS flights are suspended.\\n\"},LI:{info:\"There aren\\u2019t any quarantined locations at this time.\",updated_at:\"2020-03-27\",source:\"https://www.gov.uk/foreign-travel-advice/liechtenstein/health#coronavirus\\nhttps://ch.usembassy.gov/covid-19-info/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"The Liechtenstein authorities have introduced a number of  measures in response to the coronavirus (COVID-19) pandemic. You should comply with any additional screening measures put in place by the authorities. \"},LT:{info:\"Returning nationals and residents of Lithuania are subject to 14 days isolation. Lithuania introduced a nationwide quarantine at midnight on March 16. This quarantine is currently in effect through April 13. \",updated_at:\"2020-05-20\",source:\"https://lt.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nMost foreigners are prohibited from entering Lithuania at least until 31 May. Exceptions apply for: residents, spouses and children of Lithuanian citizens, diplomatic and NATO staff, and international commercial transportation personnel. \\nReopening of borders with Estonia and Latvia.\\nPassenger flights at Vilnius Airport began on 13 May. Starting with three flights a week (Monday, Wednesday and Fridays) to Frankfurt with air-carrier Lufthansa. airBaltic resumes flights to Riga that same day.\\nSince 4 May Lithuanian citizens are no longer prohibited from leaving the country.\\nCitizens of Estonia, Latvia and Lithuania are free to move between the three countries without restrictions or quarantine.\\nPolish nationals are allowed to enter the country for business and educational reasons. Self quarantine will not be necessary for Lithuaniuan nationals returning from Poland.\\nSome international flight operations have resumed to government-approved destinations, but authorities said that air travel to countries that do not apply quarantine restrictions or are COVID-19 hotspots will not resume for now.\\nEntry of cruise ships into Klaipeda State Seaport is prohibited.\\nAll ferry traffic suspended. Ferry Route Kiel (Germany) - Klaip\\u0117da (Lithuania) to be maintained. Other exceptions will need authorisation from the Lithuanian Transport Safety Administration.\\nSimplified transit of persons from the territory of the Russian Federation to the Kaliningrad region of the Russian Federation and back through the territory of the Republic of Lithuania shall be carried out only through the Kena railway border checkpoint and Kybartai railway border checkpoint under the conditions established by the Minister of Foreign Affairs.\\n\\nInternal restrictions:\\nIt is no longer mandatory to wear face masks anywhere, not even indoors, it is however recommended.\\nMost non-essential businesses, including cafes and restaurants, have reopened.\\n\"},LU:{info:\"Individuals are asked to self-quarantine if they believe they are at risk.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nLuxembourg Airport (Findel) is closed to passenger flights.\\nOnly essential journeys across borders are allowed.\\nBorders with France are closed until 15 June.\\nBorders with Germany have reopened on 16 May.\\nNational air carrier Luxair will not resume its operations until 30 May at least.\\n\\nInternal restrictions:\\nThe wearing of masks is compulsory in public places where the two-metre social distance rule cannot be respected.\\nThe government decided to extend stay permits until the end of the crisis for all non-EU nationals in Luxembourg.\\nVisits to elderly care homes or hospitals are banned.\\n\\nRelaxation in restrictions\\nAll businesses except cinemas, sports halls and restaurants have now reopened.\\nGatherings of up to 20 people are allowed and a maximum of six guests can visit a home.\"},MO:{info:\"The Macau government announced that effective beginning at 12:00 am on March 25, travelers who have been to Hong Kong or Taiwan in the past 14 days will be subject to a 14-day compulsory quarantine. Macau residents may complete the quarantine period at a location in Macau deemed appropriate by health authorities. Non-Macau residents complete the quarantine period at a designated hotel at their own expense.\",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.iata.org/contentassets/b8aa40e5e8154592be036a1e5aa461bb/macao-sar-china-ncov-measures.pdf\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://hk.usconsulate.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification subject to special conditions\",restrictions:\"From 17 May 2020 people crossing the border between Zhuhai and Macau must present a certificate which confirms that they tested negative for COVID-19 in the past 24 hours. The certificate is valid for seven days. \\n\\n1. Passengers are not allowed to enter Macao SAR, China.\\n- This does not apply to residents of Macao SAR, China.\\n- This does not apply to residents of the Mainland of China if they have not visited a foreign country 14 days prior to arrival.\\n- This does not apply to residents of Chinese Taipei or Hong Kong SAR, China if they have not visited a foreign country 14 days prior to arrival.\\n2. Passengers who reside or have been in the Hubei Province, China in the past 14 days are not allowed to enter Macao SAR, China unless they prove with a valid certificate that they are not infected with the Coronavirus (COVID-19).\\n3. All passengers must obtain a Coronavirus (COVID-19) nucleic acid test report issued by a local medical institution within 7 days confirming that they have been tested negative for Coronavirus (COVID-19) before they can board their flight.\\n4. Macao SAR, China registered non-resident workers (holders of the Non-resident Worker's Identification Card) are banned from entering Macao SAR, China except holders of non-resident worker's identification card who have resident status in the Mainland of China, Hong Kong SAR, China and Chinese Taipei. They will have to undergo medical observation at the designated place for 14 days if they have been to Chinese Taipei or Hong Kong SAR, China in the past 14 days.\\n5. Residents of Macao SAR, China must:\\n- undergo medical observation at the designated place for 14 days if they have been to foreign country, Hong Kong SAR, China and Chinese Taipei in the past 14 days;\\n- go through a six-to-eight hour medical examination if they have made multiple unusual entries into the Mainland of China on one day;\\n- present a medical certificate of no infection with Coronavirus (COVID-19) upon entry into Macao SAR, China if they have been to Hubei Province, China in the past 14 days.\\n6. Residents from Chinese Taipei or Hong Kong SAR, China who have not visited a foreign country 14 days prior to arrival will need to go to designated places for a 14-day medical observation.\\n7. Residents from the Mainland of China who have not visited a foreign country, Hong Kong SAR , China or Chinese Taipei 14 days prior to arrival will need to go through a six to eight hour medical examination if they come from Guangdong, Henan, Hunan, Anhui, Jiangsu, Shandong, Sichuan, Heilongjiang, Zhejiang, Chongqing, Beijing or Shanghai. If they have visited Hong Kong SAR, China or Chinese Taipei 14 days prior to arrival, they will need to go to designated places for a 14-day medical observation.\\n\\nInternal Restrictions\\nThose who have visited mainland China, Hong Kong or Taiwan in the previous 14 days may enter Macao but have to undergo 14 days of medical observations at a designated location. If they have not visited a foreign country, Hong Kong or Taiwan in the past 14 days, they will have to go through a 6-8-hour medical examination if they come from a region of high number of COVID-19 cases (Beijing, Chongqing, Guangdong, Henan, Shanghai or Zhejiang). Travellers who have been to Hubei province in the 14 days prior to arrival are required to present a medical certificate proving they are free from COVID-19. On 3 May, the authorities introduced a three-colour QR code system at border checkpoints and for entry into public administration premises and other areas. The three-tiered code requires people to confirm if they have been in self-quarantine at their residence or a government designated facility. Visitors with red or yellow codes may be subject to further testing and movement restrictions.\"},MG:{info:\"For passengers arriving from or having transited through China quarantine is mandatory for a period of 14 days; Authorities have asked airlines not to bring in passengers who have been in Italy, South Korea, or Iran within the past 14 days. Should such passengers arrive, they may face a 14 day quarantine.\",updated_at:\"2020-05-17\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://mg.usembassy.gov/u-s-citizen-services/security-and-travel-information/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government has extended State of Health Emergency for another 15 days (OSAC, 18.05.2020)\\n\\nInternational restrictions: All international flights have been suspended until further notice. (French embassy currently organising repatriation flights with Air France). No cruise ships can dock until further notice. \\n\\nInternal restrictions: All domestic flights have been suspended until further notice. Transport between urban centres is banned. A nationwide curfew remains in place from 21.00 until 04.00. Wearing a face mask is now compulsory nationwide, including when using public transport. Those caught breaching the order will be sentenced to participate in community services and cleaning. The state of health emergency has been extended until 31 May. Gatherings of more than 50 people are prohibited. All social and sport gatherings are suspended.\\n\\nRelaxation in restrictions: \\nRestrictions are gradually being lifted. All activities are allowed to resume between 06.00 and 13.00 (local time).\\nThe lockdown in the capital Antananarivo and the cities of Toamasina (Atsinanana region) and Fianarantsoa (Fianarantsoa region) has been lifted. However, entry and exit bans are still enforced. Public transport has resumed in all three regions but is operating with limited capacity (no more than 18 passengers in a bus; no more than three in a taxi).\\nSchools and commercial venues, including restaurants, are open from 06.00 to 13.00 (local time). \"},MW:{info:\"Travelers who are symptomatic and have a travel history to mainland China, Iran, South Korea, the United Kingdom, Japan, Norway, the United States, South Africa, Seychelles, the Democratic Republic of the Congo, Namibia, Tanzania or any of the countries in the European Union  in the preceding 14 days are taken to an isolation room at the airport for further medical investigation. Travelers who have been to mainland China, Iran, South Korea, the United Kingdom, Japan, Norway, the United States, South Africa, Seychelles, the Democratic Republic of the Congo, Namibia, Tanzania or any of the countries in the European Union recently but are asymptomatic are referred for self-quarantine either at home and daily check-ups for 14 days. Travelers to Malawi arriving from countries on this list who are made to self-quarantine will not be allowed to self-quarantine in hotels or lodges in Malawi. As the COVID-19 outbreak continues to evolve daily, travelers should be prepared for this list to change and for travel restrictions to be put into effect with little or no advance notice.\",updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://mw.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nInternational flights are suspended until further notice. Exemption will be made for flights carrying medical personnel and emergency relief items. Repatriation flights will be handled on a case-by-case basis. All land borders but three have been closed. Those open allow transit of essential services and goods such as petroleum products. The Government of Malawi cancelled visas issued prior to 20 March 2020 and has suspended issuance of visas on arrival. Returning residents who are symptomatic and have a travel history to Australia, Brazil, Canada, Chile, mainland China, Congo, (DRC), Ecuador, Iran, Israel, Japan,  Malaysia, Norway, Pakistan, Saudi Arabia, South Africa, South Korea, Switzerland, Thailand, Turkey, the UK, the US, or any of the countries in the European Union in the preceding 14 days are taken to an isolation room at the airport for further medical investigation. Returning residents who have been to these countries but are asymptomatic are referred for self-quarantine either at home and daily check-ups for 14 days. Returning residents to Malawi arriving from countries on this list who are made to self-quarantine will not be allowed to self-quarantine in hotels or lodges in Malawi. \\n\\nInternal restrictions:\\nMalawi High Court indefinitely barred lockdown implementation. COVID-19 has been declared a national disaster. The national security forces have been ordered to enforce restrictions. The following measures will be in place until further notice: closure of all bars, pubs and restaurants, except for take away services. All religious, social and cultural gatherings are to be suspended, except for funerals, which cannot be attended by more than 50 people.\"},MY:{info:\"From 3 April, there is a 14-day mandatory quarantine for passengers, including Malaysians, foreigners holding long-term pass, diplomats and other diplomatic and consular staff, arriving into the country.\\nUpon arrival, travellers will undergo screening by the Malaysian health authorities before being sent to designated government quarantine centres around Negeri Sembilan and Selangor. \\nTravellers with onward domestic connections must undergo the mandatory 14-day quarantine before being allowed to proceed to their domestic destinations. \\nHowever, passengers with connections to Sabah and Sarawak (both East Malaysia) are allowed to undergo quarantine upon arrival in their respective states. These travellers are not allowed to leave the airport building and must have a transit time of less than 24 hours. \",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://my.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nThe restrictions under the \\u2018Movement Control Order\\u2019 have been extended to 9 June. Under the MCO, all foreigners are banned from entering the country. However, exceptions apply to permanent residents, holders of diplomatic and official passports and long-term pass holders working in the country\\u2019s essential services sector will be allowed entry; essential service workers must obtain a letter of confirmation from their employers and liaise with the Malaysian Immigration Department. From 4 May, foreign spouses of Malaysian citizens with long-term social passes and dependent social passes are also allowed entry.\\nMalaysians in Singapore must obtain approval from the High Commission of Malaysia in Singapore, before returning to Malaysia by land. Affected people should email the High Commission at least two days before departure, attaching a copy of their work passes. Only 400 permits will be issued daily. The permits should be obtained through emailing stmsg@mhc.org.sg at least 2 days before scheduled entry into Malaysia.\\nInternational flights to and from Penang International Airport (PEN) are suspended.\\nMalaysian citizens and permanent residents holding work permits from third countries who wish to return to their place of work will be allowed to do so but will not be able to re-enter before the current restrictions order is lifted. Supporting documents need to be provided at the point of departure. This supersedes the previous order banning all Malaysian citizens from leaving the country.\\nHolders of Expatriate Pass, Student Pass, Dependent Pass and Temporary Work Pass are not allowed to enter Malaysia during this period.\\nForeigners holding the Malaysia My Second Home (MM2H) pass are allowed to return to the country. A certificate proving that the traveller has tested negative for COVID-19 will be needed prior to departure. A 14-day quarantine is still required upon arrival.\\nAll Malaysian citizens and permanent residents are banned from leaving the country. However, transit across the Malaysia-Brunei border is at the discretion of the immigration authorities.\\nQuarantine Order for Passengers Entering Malaysia:\\nThere is a 14-day mandatory quarantine for passengers, including Malaysians, exempted foreigners arriving into the country.\\nUpon arrival, travellers will undergo screening by the Malaysian health authorities before being sent to designated government quarantine centres around Negeri Sembilan and Selangor.\\nTravellers with onward domestic connections must undergo the mandatory 14-day quarantine before being allowed to proceed to their domestic destinations.\\nHowever, passengers with connections to Sabah and Sarawak (both East Malaysia) are allowed to undergo quarantine upon arrival in their respective states. These travellers are not allowed to leave the airport building and must have a transit time of less than 24 hours.\\nForeign travellers are allowed to leave Malaysia.\\nPassengers transiting in Malaysia will be allowed to do so as long as they do not need to clear immigration to board their connecting flight.\\nInter-terminal transit between the two terminals (KLIA to KlIA2) at Kuala Lumpur International Airport (KUL) is not possible during this time.\\n\\nInternal restrictions:\\nWith conditional MCO coming into effect from 4 May, most business and social activities are permitted, provided they adhere to stringent health and social-distancing guidelines. Activities involving large gatherings such as religious congregations or activities that may involve close body contact such as food bazaars remain prohibited. Details of the activities that are allowed can be found on the National Security Council\\u2019s website or the government agency\\u2019s social media page (both in Malay). Alternatively, translated details of the CMCO can be found here. Interstate travel remains banned and applications through the authorities should still be made.\\nUnder the CMCO, public transportation is operating at half of its usual capacity, to maintain social-distance. Transport services to and from the airport also remain available.\\nWhile all states are moving towards easing restrictions and resuming business activities, the adoption of the CMCO differs in each state. States with different separate plans include the following:\\nPenang: Adjusted CMCO - the Penang Gradual Recovery Strategy (PGRS); limited businesses have resumed operations from 8 May, remaining businesses are expected to resume from 13 May.\\nNegeri Sembilan: Adjusted CMCO; limited business have resumed operations from 4 May.\\nSelangor: Adjusted CMCO; limited businesses have resumed operations from 4 May.\\nSarawak states: CMCO will be implemented from 12 May. Details of the state-specific guideline can be found on the Sarawak Disaster Management Committee (SDMC) social media page.\\nAnyone intending to undertake interstate travel to major cities should apply online through the Gerak Malaysia mobile application or at the local police station.\\nDomestic travellers, including Malaysian nationals and foreigners in Malaysia, are not allowed to travel between West Malaysia and the states of Sabah or Sarawak (East Malaysia). Residents of Sabah or Sarawak who were already in West Malaysia, or vice versa, before the MCO are allowed to return to their respective states. They are required to present their flight tickets and identification documents (identification card or passport) to clear immigration. However, they will be subject to the following measures:\\nSabah: Sabah identity card holders entering the state may be subject to a 14-day quarantine. Permanent residents, long-term pass holders (including student pass, work permit, and spouses and children holding long-term social visit pass), and non-residents working in the essential services sector are allowed to enter the state but are subject to a mandatory 14-day self-quarantine.\\nSarawak: Sarawak residents, permanent residents, employment pass holders or those working in essential services who are allowed to enter will be given a 14-day stay home notice.\\nRoad closures, roadblocks and checkpoints have been implemented across the nation.\"},MV:{info:\"On 24 March 2020, following the Director-General of Public Health\\u2019s announcement that all incoming passengers will be quarantined for 14 days, the Ministry of Economic Development announced new restrictions for foreign nationals working in the Maldives. \",updated_at:\"2020-05-03\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://mv.usmission.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Velana Airport (MLE) is closed every day from 16:00 to 01:00.\\n2. All visas on arrival are suspended.\\n- This does not apply to passengers with a special permission granted by the Maldives government.\\n3. Passengers traveling as tourists and airline crew who have been in Bangladesh, China (People's Rep.), Iran, Italy, Malaysia, Spain, Sri Lanka, United Kingdom or in North Gyeongsang and South Gyeongsang Provinces in Korea (Rep.), Ile-de-France and Grand Est (regions of France) and Bavaria, North Rhine Westphalia and Baden-Wuerttemberg (regions of Germany) in the past 14 days are not allowed to enter the Maldives.\\n- This does not apply to nationals of Maldives and their spouses.\\n4. Nationals and residents of Maldives will be subject to 14-day quarantine upon arrival. Carriers intending to carry nationals of Maldives on inbound flights shall seek prior approval from relevant authorities.\\n5. All passengers traveling to the Maldives for a purpose other than tourism will be quarantined for 14 days at a place designated by the Government.\\n6. A completed \\\"Health Declaration Card\\\" and an \\\"Immigration Arrival Card\\\" must be presented upon arrival.\\n\\nInternal restrictions:  \\nInter-island travel is banned (except for cargo supplies).\\nNational airline Maldivian has suspended domestic flights indefinitely while all other public transport has been banned.\\nA public health emergency is in place until 30 May.\\nThe Health Protection Agency (HPA) has imposed a lockdown on Male City until at least 14 May. Under this lockdown:\\nNo one is allowed on the streets of Hulhumale, Male and Vilimale;\\nPublic transportation between these areas has been stopped;\\nNo one is allowed to enter or exit Gulhifalhu, Hulhumale, Male, Thilafushi and Villimale;\\nOnly the authorities, healthcare professionals and persons holding a pass issued by the National Emergency Operation Centre (NEOC) are exempt from these measures;\\nThose violating this lockdown will be quarantined at a facility for 14-days.\\nA two week curfew has been extended until 14 May in the Greater Male\\u2019 area, including Vilimale and Hulhumale.\\nAll public gatherings and recreational activities, including swimming, are banned across the country. All mass prayers in mosques across Maldives are suspended until further notice.\\nAll islands with suspected cases are on lockdown until test results of the involved persons are received. The government\\u2019s main hospital, Indira Gandhi Memorial hospital, has suspended visitation rights to the hospital, barring exceptions such as guardians to patients.\\nAll foreign travellers are barred from checking-in into all Guest Houses and City Hotels operating in Male City (Male, Hulhumale, Villimale). Travellers who are already in hotels will be allowed to stay for the duration for their booking.\"},ML:{info:\"The Government of Mali has implemented enhanced screening and quarantine measures to reduce the spread of COVID-19.  Travelers should be prepared for additional travel restrictions to be put into effect with little or no advance notice. All travelers who present themselves in Mali will receive at air and land ports of entry a systematic temperature measurement, as well as the recommendations of the Government of Mali on measures of self-isolation, individual and collective hygiene, and a toll free number (36 0 61).\\n\\nTravelers arriving with fever (temperature above 37.5 degrees C/99.5 degrees F) from countries severely affected by COVID-19 will be subjected to self-isolation for 14 days and will receive daily follow-up by a Government of Mali medical team. Travelers arriving with fever (temperature above 37.5 degrees C/99.5 degrees F) and other respiratory signs and symptoms from countries severely affected by COVID-19 will be transported to an isolation site for further testing.\\n\",updated_at:\"2020-05-12\",source:\"UNHAS\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://ml.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"The government announced that all commercial flights arriving from affected areas would be suspended, with the exemption of trade related flights and cargo. \\nUNHAS Ops still running.\\nAll land borders closed except for freight trucks.\\n\\nInternational restrictions: All commercial international flights from countries impacted by COVID-19 are suspended (cargos excluded). All land borders closed except for freight trucks.\\n\\nInternal restrictions: On 9 May, authorities decided to lift the curfew imposed from 21.00 to 05.00. The wearing of face masks in public is mandatory. Public and private schools at all levels of education (including religious schools commonly known as madrasas) are to remain closed until at least 2 June.\\nAll public and social, cultural, political, sport related gatherings of more than 50 persons are suspended until further notice. All clubs and bars are closed until further notice.\"},MT:{info:\"Persons entering Malta from any other country from 13:00CET on 13 March 2020 onwards must spend 14 days in mandatory quarantine, which 14 days start from the last day that they were in any of these countries.  \\nPersons living in the same households as any of the above persons must also spend 14 days in mandatory quarantine. If you are in quarantine and need help, including food or medicine delivery, call +356-2141-1411\\n\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://mt.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll travellers arriving into the country will be required self-quarantine for 14 days. Malta International Airport in Luqa is operational to facilitate the arrival and departure of cargo, humanitarian and repatriation flights. All inbound flights are suspended until further notice. The authorities may in special cases exempt individual flights. Ports in the capital Valletta remain closed. Boats transport and ferries connections are suspended.\\n\\nInternal restrictions:\\nAll bars and restaurants are closed. All public gatherings of more than four people are forbidden. Schools will only reopen for the next academic year. Relaxation in restrictions. Restrictions began gradually being lifted on 4 May. The wearing of face masks is mandatory in public, shops and public transport. Travel between Malta and Gozo is possible. Gatherings of a maximum of four people will be allowed, under the conditions of social distancing measures. Non-essential shops, except beauty shops as well as restaurants and cafes, open again.\"},MH:{info:\"The RMI government announced on February 15, 2020 the construction of a new eight-bed isolation unit to be built and ready within the next 30 days\",updated_at:\"2020-04-30\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://mh.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Total suspension of international travellers coming into the Marshall Islands has been extended to 5 May.\\nTen countries have been placed on its \\u201Cno fly\\u201D list (from which all travellers are banned from entering) \\u2013 these are China, France, Germany, Hong Kong, Iran, Italy, Japan, Macao, South Korea and Spain.\\nUnited Airlines, the only international airline to service the Marshall Islands, has suspended flights.\\nDomestic passenger air travel between Kwajalein and Majuro will only be permitted on Air Marshalls.\\n\"},MQ:{info:null,updated_at:\"2020-05-12\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. Passengers are not allowed to enter the French West Indies.\\n- This does not apply to passengers who reside in the French West Indies.\\n- This does not apply to passengers traveling for urgent health reasons.\\n- This does not apply to passengers traveling for imperative business reasons.\\n2. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting the French West Indies. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr\\n3. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (Covid-19).\\n- This does not apply to airline crew.\\n\\nAll international flights suspended until at least 11 May. Only residents and citizens are allowed entry.\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nInternal restrictions: From 11 May, the first stage of relaxation of measures will begin nationwide. From 11 May, the use of face masks by anyone aged over 11 years will be mandatory on public transport, with offenders subject to a 135-Euro fine. In public places, the wearing of face masks is highly recommended. Further related measures may vary by location. Gatherings of a maximum of ten people are now allowed. Many businesses have reopened, but cafes, restaurants, nightclubs, ski resorts and all other non-essential businesses remain closed. Public parks and secondary education institutions may reopen 18 May.\"},MR:{info:\"\\u2022According to press sources, the last travelers entering Mauritania have been quarantined in dedicated local hotels.\\n\\u2022Due to the constantly evolving situation, we cannot confirm the quarantine procedures upon entry into neighboring countries or upon entry into Mauritania.\\n\",updated_at:\"2020-05-20\",source:\"https://mr.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"IInternational restrictions:\\nThe lockdown measures will remain in place until further notice. International flights remain banned for the duration of the lockdown unless explicitly stated otherwise. People in direct contact with someone who tested positive will be quarantined. A number of border crossing have been closed with screening measures deployed to the crossings that remain open at: Bir 75 (Wilaya Tiris Zemour), Bogh\\xE9 (Wilaya Brakna), Rosso (Wilaya Trarza), Douinkara (Fassala, Wilaya Hodh Echarghi), Gougui Zemal (Wilaya Hodh El Gharbi), Gouraye (Wilaya Of Guidimagha), Kaedi (Wilaya Gorgol) and PK 55 (Wilaya D. Nouadhibou).\\nThe land border with Mali is closed, except for freight trucks.\\n\\nInternal restrictions:\\nAll non-essential industries and businesses are closed. All large public gatherings have been banned. A curfew is in place from 18.00 to 06.00 - which has been modified from 23.00 to 06.00 for Ramadan until approximately 24 May. All internal movements between the different wilayas of the country are prohibited until further notice. Exceptions will be made for health care teams and freight trucks. Schools, universities, markets, bars and restaurants are closed until further notice.\\n \\nRelaxation in restrictions\\nThe isolation of the city of Kaedi has been lifted by the government. However, on 19 May, national authorities decided to isolate the two cities of Kiffa and Nouakchott due to an increase of confirmed cases. On 6 May, restaurants (only for home delivery) and markets in the regional capitals were allowed to reopen. As of 8 May, collective prayers have reconvened.\"},MU:{info:\"\\u2022Individuals who have had possible exposure to COVID-19 are placed into quarantine for approximately 14 days.\\n\\u2022There are at least 25 quarantine centers, including resort hotels, over the island. \\n\",updated_at:\"2020-05-07\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://mu.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Passengers are not allowed to transit or enter Mauritius.\\n- This does not apply to nationals or residents of Mauritius, their spouses and children. They will be placed in quarantine.\\n2. Airline crew must stay in their hotel rooms.\\n\\nInternational restrictions: \\nBorders are closed indefinitely. \\nInternational commercial flights have been suspended although outbound/inbound repatriation flights, as well as ad-hoc commercial and chartered cargo flights are operating.\\n\\nInternal restrictions: \\nA lockdown is in place until 1 June. Only essential services such as police, medical services, and fire and rescue services are currently available. Some businesses will be allowed to open from 15 May. Supermarkets are open (until 20.00), although movement is severely restricted to two days per week depending on the first letter of the surname: A-F: Monday and Thursday, G-N: Tuesday and Friday, O-Z: Wednesday and Saturday. Supermarkets are closed on Sunday. Clinics and hospitals will remain open; pharmacies and banks are open with reduced hours. Residents can order essential goods through a new website. A curfew was implemented in April during which movement was restricted from 20.00 to 08.00 (local time) except in emergencies.\"},YT:{info:null,updated_at:\"2020-05-11\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting Mayotte. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr.\\n2. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (Covid-19).\\n- This does not apply to airline crew.\\n\\nInternational restrictions: Only French nationals and residents are authorised to enter (see France). Dzaoudzi Pamandzi International Airport remains closed until further notice.\\n\\nInternal restrictions: Mayotte is under alert level two, implementing confinement rules for France. While mainland France will begin to ease some of the rules on 11 May, these will remain in place in Mayotte until further notice. A related announcement is expected on 14 May.\\nA curfew from 20.00 to 05.00 is in effect.\\nGatherings of more than two people are prohibited.\\nOnly essential movements are allowed with a certificate valid for each trip. All non-essential movements are subject to a fine of 135 euros.\"},MX:{info:\"There are no mandatory quarantine policies currently in effect in Mexico for confirmed or suspected cases.  The Mexican government encourages people experiencing the symptoms of COVID-19, fever, cough, headaches, throat pain, or constant sneezing, to stay at home for 14 days, consult with, and comply with the instructions of your local healthcare provider. \",updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://mx.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"U.S. government extends ban on nonessential travel with Canada and Mexico shared borders through 22 June (Reuters, 19.05.2020) \\nInternational restrictions:\\nThe shared border with the US is closed to non-essential travel until at least 20 May. Mandatory health screening measures have been implemented at several ports of entry, causing significant travel disruption, particularly in Nuevo Leon and Sonora. Authorities in Tamaulipas state have prohibited entry into Mexico for non-essential travellers based on the last digit of their license plate through May 30. Travel is prohibited as follows: 0-1 for Mondays, 2-3 for Tuesdays, 4-5 for Wendesdays, 6-7 for Thursdays and 8-9 for Fridays. Non-essential travel is not prohibited on the weekends in Tamaulipas and only four individuals are allowed to travel in the same vehicle. Flag carrier Aeromexico announced that it would suspend 17 international routes and reduce flights in another 23, including a 40% reduction in its scheduled flights to Europe. Several international airlines have also announced suspensions or reductions.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\n\\nConditions and internal restrictions:\\nSchool and non-essential business closures in most municipalities until at least 31 May. Non-essential businesses in rural areas with low transmission rates will be permitted to reopen from 18 May. Most of these areas are located in Oaxaca state. Beginning 1 June, the Health Ministry will announce a tiered system to guide reopening. The system will consist of different phases outlining loosening of restrictions, and will be assigned to each state and updated weekly. Scheduled electoral processes and census collections have been postponed until further notice. Essential events and gatherings of more than 50 people are suspended until 30 May. A strict home isolation protocol is in place for people over 60 years old, pregnant women, or those considered to be at high medical risk. All hotels will cancel new and existing reservations and will close for non-essential business. Masks must be worn in Mexico City while using public transportation. In at least ten other states, including Coahuila, Durango, Guererro, Morelos, Nuevo Leon, Oaxaca, Puebla, Quintana Roo, Tamaulipas and Yucat\\xE1n, masks must be worn in public (while using public transportation and/or while in supermarkets). Aeromexico and fellow national airlines Interjet and Volaris have significantly reduced their domestic flight schedule. The state of Quintana Roo has put numerous restrictions in place. A curfew has been instituted from 19.00 to 05.00. Public transportation has been reduced and Playa del Carmen boulevard has been closed. No more than two people are allowed in each car.\"},FM:{info:\"People who are allowed entry might be subject to a 14-day self-quarantine. Quarantine facilities are available in Pohnpei and Yap and Chuuk States. \",updated_at:\"2020-05-10\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://fm.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All travellers and all cargo vessels and tankers are banned from entry. Airline flight crew, humanitarian support aircraft or vessels are exempted. Those exempted are required to remain in the airport or seaport with no contact with local workers or authorities. \\nAll travellers, cargo vessels and tankers are banned from entry until further notice. Airline flight crew, humanitarian support aircraft or vessels are exempted. Those exempted are required to remain in the airport or seaport with no contact with local workers or authorities.\\nPeople who are allowed entry might be subject to a 14-day self-quarantine. \\n\\nInternal restrictions:\\nDomestic air and sea travel within the states is permitted, provided there are no confirmed COVID-19 cases within any of the states.\\nThe government has banned all citizens from travelling to any country with confirmed COVID-19 cases. Exemptions may be granted for essential purposes recommended by the Federated States of Micronesia Emergency Task Force.\\nThe nationwide state of public health emergency has been extended until at least 22 May.\\nYap State has announced a \\u2018restrictions of movement of people\\u2019 decree. A curfew applies to all Yap State residents between the hours of 19.00 and 06.00 from Monday to Friday. \\n\\n\\n\"},MC:{info:null,updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Internal restrictions: While shops are now allowed to be open, customer numbers are limited to allow for social distancing. The same applies to places of worship. Minimal social distancing of at least 1.5 metres remains in place and should be kept at all times. Masks will remain strongly recommended, and are currently being distributed to the country\\u2019s citizens and all residents. They are compulsory on public transport and indoors. Cruise ships are banned from docking and it remains unclear when this restriction will be relaxed. The Heliport is open to private Helicopter charters only. For questions specifically related to COVID-19 call 92 05 55 00 (available 7/7 from 9.00 to 18.00 (local time) or write to covid19@gouv.mc.\\n\\nRelaxation of Restrictions There will be a further relaxation of measures in June (date not yet announced): Reopening of restaurants and cafes, casinos, and possibility to organise individual sporting activities individually outdoors.\"},MN:{info:\"All travelers to Mongolia are subject to quarantine for 21 days upon arrival. Mongolian public-health authorities request that individuals arriving in Mongolia from any foreign country, i.e., every traveler arriving in Mongolia from overseas, will be quarantined under observation at NCCD for 21 days then self-quarantine at home for another 14 days after dismissed from hospital.\",updated_at:\"2020-05-06\",source:\"https://www.iata.org/contentassets/ac033e419e484f518079d0b26f108579/mongolia-ncov-measures.pdf \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://mn.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Passengers are not allowed to enter Mongolia.\\n- This does not apply to nationals of Mongolia.\\n- This does not apply to residents of Mongolia who are direct family members of a national of Mongolia.\\n- This does not apply to accredited staff and their direct family members of diplomatic missions and offices of international organizations in Mongolia.\\n- This does not apply to international freight transport drivers and railway train personnel of Mongolia, Russian Fed. and China (People's Rep.).\\n2. Nationals of Mongolia will be placed in quarantine for 21 days at designated facilities upon arrival. After the quarantine period ends, they shall be under self-isolation at home for 14 days.\\n3. Residents of Mongolia who are direct family members of a national of Mongolia will be placed in quarantine for 21 days at designated facilities upon arrival. After the quarantine period ends, they shall be under self-isolation at home for 14 days.\\n4. Accredited staff and their direct family members of diplomatic missions and offices of international organizations in Mongolia will be quarantined for 21 days at designated facilities upon arrival. After the quarantine period ends, they shall be under self-isolation at home for 14 days.\\n\\nInternational restrictions:\\nAll foreign travellers will be barred entry to Mongolia until at least 31 May.\\nAll international flights will remain suspended until at least 31 May.\\nReturning citizens will be placed under a mandatory quarantine of 21 days.\\nAll ports, including pedestrian and private vehicles border crossings, are closed.\\nBorder crossings with China and Russia remain closed. The suspension of passenger rail services with China and Russia has been extended until at least 31 May.\\nDue to difficulty departing the country, the authorities will grant visa extensions for foreigners in Mongolia with a temporary entry visa for up to 90 days until 31 May. \\n\\nInternal restrictions:\\nAll public gatherings, events and meetings, such as conferences, sporting events and concerts, are prohibited until at least 31 May.\\nEducation institutions (including universities, vocational training centres, and kindergartens), as well as entertainment venues are closed until at least 31 May.\\nThose in public offices or spaces are required to wear a face mask and are subject to temperature screenings.\\n\"},ME:{info:\"\\u2022Montenegrin travelers or others with residency permits arriving from any country affected by coronavirus (COVID-19) are screened and put under observation as determined by local health officials.\\n\\u2022Montenegrin citizens and non-citizen residents returning to Montenegro from affected areas who display a high temperature or other symptoms are required to report to the Institute for Public Health for examination.\\n\\u2022Local officials noted there is an official quarantine or self-isolation policy lasting for 14 days after arrival.\\n\\u2022On March 19, the authorities announced increased surveillance and enforcement of self-isolation orders for people recently returned from aboard and their family members.\\n \\n\",updated_at:\"2020-05-19\",source:\"Reuters, https://me.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nMontenegro Airlines has suspended all flights until 14 June following a government halt, except for flights from Podgorica and Tivat to Belgrade, which will resume as soon as the airports and borders of Montenegro reopen. All international bus and railway services have also been suspended until 1 June. There is also an entry ban for cruisers and yachts to ports: Bar, Budva, Kotor, Kumbor Port \\u2013 Portonovi, Tivat (Gat I and Gat II) and Zelenika.\\nMontenegrin authorities have banned entry for foreigners - except for those with temporary or permanent residence and cargo drivers - and imposed a mandatory 14-day quarantine for all travellers entering from abroad. People who have been put into self-isolation for 14 days by the Sector for Health and Sanitary Inspection must now serve an additional 14-day quarantine.\\n\\nInternal restrictions:\\nInternal movement restrictions and curfew extended at least until 18 May.\\nThese restrictions include an amended curfew of 23.00-05.00 every day. During curfew hours, no one is permitted to be outside their home, with the exception of individuals carrying out work deemed essential by the government and individuals walking pets.\\nNon-essential businesses are closed. Essential bars, restaurants and other foodstuff establishments may only deliver or sell take-away.\\nSuspension of public transport of passengers in intercity, suburban and urban bus and van transport, except for organised transport of employees. Ban on intercity passenger transport (excluding essential activities). Suspension of public transport of passengers in domestic railway transport and taxi services. It is prohibited to transport more than two adults in a passenger vehicle at the same time (except for members of a shared family household).\\nSchools and universities are closed.\\nBan on public and private gatherings (excluding members of a shared household), including sport, cultural, weddings and religious events.\\nAuthorities stress that non-compliance with measures brings criminal liability: the army is tasked with ensuring quarantine and self-isolation measures are respected.\\nResidents have been instructed to stay at home during these times - key workers may be exempted if they hold special permits.\\nThe validity of residence permits has been extended.\\n\\nRelaxation of restrictions:\\nSince 11 May, travel with personal vehicles and with public transport has been allowed in selected provinces:\\nCentral region: Cetinje, Danilovgrad, Niksic, Pluzine, Podgorica, Savnik and Tuzi.\\nCoastal region: Bar, Budva, Cetinje, Herceg Novi, Kotor, Tivat and Ulcinj.\\nNorthern region: Andrijevica, Berane, BIjelo, Gusinje, Kola\\u0161in, Mojkovac, Petnica, Plav, Pljevlja, Polje, Ro\\u017Eaje and \\u017Dabljak.\\nInternal maritime travel is also allowed and religious rites are possible.\\nSome bus and taxi services have restarted in the country with requirements for social distancing and the wearing of masks. Rental car companies have reopened and a number of businesses including banks, barbers, beauty salons, shops, fitness centres and dentists are allowed to reopen provided they comply with distancing measures.\\nFrom 18 May cafes, restaurants, bars and malls can reopen.\\nSporting events should resume from 1 June - without spectators.\\nFrom 1 June, inter-city traffic will be allowed.\"},MS:{info:null,updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nAll foreign passengers travelling by air are banned from entering Montserrat under further notice. Citizens and residents of Montserrat, as well as their immediate family members, and crew members are still allowed entry.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\nUS citizens who are attempting to return to the US from the Eastern Caribbean and need assistance should complete the provided form for each person wishing to return to the US.\\n\\nConditions and internal restrictions:\\nNo airlines have announced reductions in flights to Montserrat.\\nThe island is transitioning out of a full lockdown beginning 7 May.\\nBeginning 22 May, a curfew will be in place Monday through Sunday from 20.00 to 05.00. The weekend lockdown will be lifted beginning that date.\\nThere are no longer limitations on the hours allowed for exercising.\\nEssential businesses, including supermarkets, banks, pharmacies, and petrol stations, are allowed to operate daily.\\nRetailers are allowed to operate. Schools, bars, and hairdressers remain closed.\\nGatherings of more than four people are prohibited until the curfew is lifted.\\nWhen in public people must maintain social distancing of 6 feet (two meters) at all times.\"},MA:{info:null,updated_at:\"2020-05-19\",source:\"https://www.osac.gov/Content/Report/677054e5-7284-4630-9673-183851a95bd9\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nMorocco has suspended all international flights and ferries until further notice.\\nThe border crossings between Morocco and Spanish enclaves of Ceuta and Melilla are closed. However, passage of foreigners (Schengen area/EU citizens and residents) into the enclaves to transit into Spain is permitted. Travellers have to prove that they are returning into their residence. The viability of this mode of travel is at the discretion of the border authorities and therefore travellers are advised to contact their diplomatic representation for further information.\\nThe country\\u2019s southern border is closed until further notice.\\n\\nInternal restrictions:\\nA curfew will be implemented between 19.00-05.00 from 25 April to coincide with the start of Ramadan.\\nA state of emergency was extended until 10 June, until when:\\nAll domestic and inter-city travel is suspended. Royal Air Maroc announced the suspension of all domestic flights.\\nAll public gatherings of more than 50 people are banned.\\nThe authorities have asked the population to self-isolate and restrict movement outside their accommodation, with the exception of work-related reasons, buying of essential commodities and medical reasons. A document is compulsory and should be carried at all times available on the Ministry of Interior website.\\nA state of sanitary emergency and internal movement restrictions are in place. Only essential movements should be authorised by the local authorities with a stamped document.\\nWearing a mask is compulsory for those authorised to conduct essential movement and non-compliance is punished by one to three months of imprisonment.\"},MZ:{info:\"The Mozambican Government has mandated a 14-day self-quarantine for all arrivals, regardless of citizenship or prior travel.\",updated_at:\"2020-05-13\",source:\"https://mz.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions: \\nOutbound flights are only available to/through Addis Ababa Bole International Airport (ADD). A state of emergency is in place until at least 31 May; entry into the country will be limited to persons on state business only (diplomatic or government personnel only) and health officials. Cargo flights are still permitted.\\nPassengers must be registered upon arrival and self-quarantined for 14 days. \\n\\n\\nInternal restrictions: National carrier LAM Mozambique Airlines continues to operate domestic flights. A state of emergency is in place during which time all public and private events are banned (with the exception of funerals), schools are closed, visas are suspended and entertainment establishments are closed, or will reduce their activities. It is unclear whether the ban extends to restaurants and bars. The state of emergency allows the president to limit the movement of people, but this will only be activated \\u201Cif there is an exponential increase in cases of contamination\\u201D. The nature of such limits has not been specified.\\nA 14-day quarantine period is imposed on anybody who has been outside the country recently, and on anyone who has been in contact with people known to be infected with COVID-19. Authorities have announced automatic extension of all DIRE and temporary visas until 30 June, even if expired; automatic extension of drivers\\u2019 licenses, identity cards, and car vehicle import clearances until June 30. Most non-essential businesses have either been closed or directed to operate at one-third of their workforce to ensure business continuity. Public and private transport is still permitted. The use of masks on public transport and in crowded places is mandatory for all.\"},MM:{info:\"All incoming travellers are required to present a medical certificate showing that they have no symptoms of acute respiratory illness (fever and cough or shortness of breath) before boarding any airline destinated for Burma. They will be required to undergo quarantine in a Burmese government facility for 21 days after arriving in Burma, followed by a 7-day home quarantine.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttp://www.mizzima.com/article/yangon-airport-extends-international-arrivals-ban\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAll inbound international commercial flights are suspended until at least 31 May.\\nExemptions are made for medical evacuation, relief, cargo flights as well as special flights approved by the country\\u2019s Department of Civil Aviation.\\nLand borders with Bangladesh, China, India, Laos and Thailand are closed until further notice. However, the borders remain open for trade.\\nAll types of visa except for diplomats residing in Myanmar and airline/shipping industry professionals are suspended. Those still allowed to enter must complete a 28 day quarantine, which includes 21 days in a quarantine centre and seven days of self-isolation at their residence. They must also have a valid COVID-19 test within 72 hours of their arrival to Myanmar.\\nForeign visitors who are still allowed to enter Myanmar are only allowed to enter Myanmar via Mandalay, Naypyitaw and Yangon International Airports.\\nAll travellers, including Myanmar nationals, will be subject to a quarantine at designated facilities.\\nAll foreign nationals are required to present a health certificate confirming they have not been infected with COVID-19 (dated no more than 72 hours prior to departure), including for domestic flights.\\nDiplomats are also required to present a health certificate confirming they have not been infected with COVID-19 (dated no more than 72 hours prior to departure) and will be subject to 14-day home quarantine upon arrival in Myanmar.\\nForeign travellers coming from or who have been to Hubei province of China or Daegu city and North Gyeongsang province of South Korea in the past 14 days are barred from entry. Myanmar nationals returning from these locations will be quarantined for 14 days at government quarantine facilities.\\n\\nInternal restrictions:\\nDomestic flights have gradually resumed operations from 1 May.\\nMost inter-provincial bus services have resumed from 14 May, with exception to busses to areas with ongoing curfews.\\nGatherings of more than five people for non-essential purposes are banned. Government employees, factory workers, and emergency healthcare workers are exempt from the order.\\nSome businesses have been granted \\u2018workshop certificates' to allow them to reopen from 14 May.\\nMandalay region: A curfew from 00.00 to 04.00 is in effect.\\nNaypyitaw Union Territory: A curfew from 00.00 to 04.00 is in effect.\\nSagaing region: A curfew from 00.00 to 04.00 is in effect. Residents are only allowed to undertake essential movement during curfew hours. Checkpoints have been erected across the region.\\nShan state: A curfew from 00.00 to 04.00 is in effect until 19 May, except for Kokang, Mong La and Wa townships.\\nYangon region: A curfew from 00.00 to 04.00 is in effect until at least 18 June, during which people are only allowed to leave their residences for essential activities. It is mandatory to wear facemasks in public. Large gatherings and celebrations are cancelled.\\nFive townships in Yangon remain under stay-at-home orders, further restricting any non-essential movement outside of residences. These are: Bahan, Insein, Mayangone, Pabedan and South Okkalapa.\\nThe Yangon Region Transport Authority announced the resumption of the majority of inter-township bus services from 14 May. Bus services to townships with enhanced internal restrictions remain suspended.\\nSimilar curfews are also in place in Bago region, Kachin state, Karen state and Myawaddy (Kayin state).\"},NA:{info:\"All returning Namibians and Permanent Residents of Namibia will be subject to a 14-day supervised self-quarantine. Travelers who are considered high-risk of COVID-19 due to symptoms and recent exposure in a country with active transmission may be taken to an isolation facility for treatment.\",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nThere is an entry ban in place for citizens of all countries. All inbound and outbound travel is suspended until at least 30 June. Namibian citizens and permanent residents will be allowed in under special conditions, but will face a 14-day period of self-quarantine. Citizens and residents are also barred from leaving during this period.\\nLand borders and ports are closed.\\nAir Namibia has suspended all flights. However, domestic flights have resumed. Private charter flights can only land at Hosea Kutako International (WDH), which serves the capital Windhoek, and Walvis Bay International (WVB, Erongo region) airports.\\n\\nInternal restrictions:\\nA state of emergency has been declared.\\nNationwide lockdown until 4 May. People have been asked to remain at home during this period, with the exception of critical work, to obtain essential goods and services, and to take exercise. All shops and businesses must close, except those providing essential services such as food outlets. Restaurants and cafes can only provide take-away services. Only one person per household is allowed to leave their home to buy essential supplies at any one time.\\nEntry to and exit from the regions of Khomas, home to the capital Windhoek, and Erongo, where the port town of Walvis Bay is located, is prohibited.\\nAll large gatherings are banned.\\nSchools are closed for the duration of the lockdown.\\nFrom 5 May onwards, some businesses will be allowed to resume operations, and internal travel will be permitted as well. The change in restrictions will allow certain commercial outlets to resume operations again; this includes shopping malls, restaurants and beauty salons, among others. Certain informal trading and open markets in the capital Windhoek will also be allowed to operate. All such establishments can only open under strict hygiene and social distancing rules. Restaurants and cafes can only provide takeaway services. While stage two is expected to last until 1 June, the last two remaining stages are subject to strict monitoring and their implementation depends on the spread of the COVID-19 virus. Gatherings of over ten people remain prohibited and people are required to wear face masks in all public spaces.\"},NR:{info:\"Travellers allowed entry will be subject to a mandatory 14-day quarantine at a government designated facility.\",updated_at:\"2020-05-10\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iata.org/contentassets/904c07ce0448443bbe3665998ae17364/nauru-ncov-measures.pdf\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nOnly Australian and New Zealand citizens and permanent residents are allowed entry into Nauru.\\nAll travellers who have transited through or have been in mainland Asia (except Taiwan), China, Europe, Hong Kong (SAR China), Iran, Macao (SAR China), South Korea or the US in the past 21 days will be denied entry.\\nTravellers allowed entry will be subject to a mandatory 14-day quarantine at a government designated facility.\"},NP:{info:\"Suspected cases already in country will also be quarantined for 14 days.\",updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://np.usembassy.gov/covid-19-information/\\nhttps://english.onlinekhabar.com/nepal-extends-suspension-of-all-flights-until-may-15.html\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Government extends lockdown until 2 June (Xinhua, 17.05.2020)\\nInternational flights to Nepal are suspended until 31 May.\\n- This does not apply to evacuation, rescue and emergency flights with a special permission from Civil Aviation Authority of Nepal.\\n\\nInternational restrictions:\\nAll international commercial flights and land border crossing have been suspended until at least 31 May. Special permission will be required from the Civil Aviation Authority of Nepal for the operation of any passenger evacuation, freighter, rescue or emergency flights.\\nInternational and domestic flights remain suspended until at least 14 June.\\nAll travellers including Nepalis that have transited or arrived to Nepal from all European nations, West Asia (including Iran, Turkey and Gulf countries), Malaysia, South Korea, Japan will be denied entry into the country.\\nVisa services and Visa-on-arrival facilities, including those granted to Non-resident Nepali card holders are suspended until further notice.\\nAll foreign nationals (including those with business, study, diplomatic, official visas) allowed entry to Nepal must stay in self quarantine and Nepali nationals including Non Resident Nepalis (NRNs) must stay in home quarantine for 14 days from the date of their arrival.\\nTravellers must obtain medical certificate clearance signed at most seven days before entry into Nepal, if they have travelled from or transited through China (including Hong Kong and Macao), France, Germany, Iran, Italy, Japan, South Korea and Spain.\\nWhile land borders with China and India are closed, cargo transport can still continue.\\nForeign embassies are allowed to gather their stranded nationals in Kathmandu and fly them out of Nepal. The Nepal tourism board and the Civil Aviation Authority are coordinating flights to repatriate tourists. Embassies and governments from Australia, Canada, France, Germany, the UK and the US have repatriated their citizens from Nepal.\\n\\nInternal restrictions:\\nThe suspension of domestic flights has been extended to 31 May.\\nThe nationwide lockdown has been extended to 2 June. During this period:\\nA stay-home-order is issued to all households: individuals are only allowed to leave their residences to purchase food and medicine. Private and public vehicles are prohibited from non-essential travel during the lockdown.\\nDomestic flights and public transport have also been suspended.\\nPublic gatherings of more than 25 people are banned.\\nAll non-essential businesses and services, including manufacturing, schools, offices, markets a4nd entertainment venues remain closed.\\nStarting 9 May, the lockdown in Kavre district has been eased to allow the production of agriculture and livestock, as well as resumption of industrial work.\\nInter-district travel remains banned. In case of emergency, only the Chief District Officer has the authority to issue the pass to travel within districts, and upon the approval of the Ministry of Home Affairs for vehicles entering Kathmandu. Travellers with scheduled repatriation flights are also required to obtain a pass permit for inter-district travel.\"},NL:{info:\"The Dutch government has implemented a 14-day self-isolation requirement for passengers arriving in the Netherlands on flights from the U.S., China, Hong Kong, South Korea, Italy, Spain, and Austria. Please review the Dutch Government\\u2019s travel site and the letter detailing the self-isolation policy for further details (copy and paste this link into your browser):  https://www.netherlandsworldwide.nl/documents/publications/2020/04/05/letter-self-quarantine-and-other-coronavirus-measures. \",updated_at:\"2020-05-17\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://nl.usembassy.gov/covid-19-information-3/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nForeign travellers who do not fall under the latest authorities exemptions are barred from entering the country until 15 June.\\nTravellers heading to the Netherlands from a high risk Covid-19 transmission country need to fill in a health declaration certificate prior to boarding, which can be found on this website. The definitions of \\u2018high-risk countries\\u2019 can be found on this website .\\nPassengers arriving from a high risk COVID-19 transmission country are required to self-quarantine for 14-days.\\nExceptions include:\\nEU citizens (including nationals of the United Kingdom) and their family members;\\nNationals of Iceland, Liechtenstein, Norway and Switzerland and their family members;\\nThird-country nationals who hold a residence card or residence permit in accordance with Directive 2003/109 / EC (the Long-Term Residents Directive);\\nThird-country nationals who derive their right of residence from other European directives or from the national law of a Member State;\\nHolders of a long-stay visa, including those with a temporary residence permit (MVV).\\nOther persons with an essential function or need, including: Personnel working in Health Care; Border workers; Persons employed in the transportation of goods, where necessary; Diplomats; Military personnel; Personnel of international and humanitarian organizations; Persons who have compelling reasons to visit their families; Transit passengers who wish to travel via the Netherlands to another third country; Persons in need of international protection; the border procedure applies in full; Persons who are admitted for humanitarian reasons.\\n\\nThalys services: all passengers are required to wear a face mask from 11 May. From 9 June, the rail operator will increase train frequency, notably for the route from Amsterdam, Dortmund and Paris.\\n\\nInternal restrictions:\\nGatherings of more than 100 are not permitted. This includes the closure of public places such as museums, concert venues, theatres, sports clubs and the cancellation of sports matches and other events. Such events will be banned until the start of September. No gatherings of more than two people are  permitted and a distance of at least 1.5 metres must be maintained, notably in shops and public transport. All events and public gatherings are banned until 1 June. Gyms, cannabis cafes and sex clubs are closed. All special measures put in place have been extended until at least 19 May.\\n\\nRelaxation in restrictions:\\nAccording to the authorities, measures will gradually start be lifted as below: Primary schools are to start reopening from 11 May. Likewise for small shops such as hairdressers (with appointments). Non-contact outdoor sports, such as tennis and golf, can be practiced again, however competitions remain banned. From 1 June restaurants, cafes and bars with outdoor seating can reopen with social distancing measures. Cinemas, cafes, bars and museums will also reopen subject to the following: a maximum of 30 people (including staff). For cinemas, the limit is 30 people per auditorium. In all cases people must be able to stay 1.5 metres apart; visitors must make a reservation or register beforehand; a check will take place first to assess possible health risks. From 1 July, campsites and holiday parks will be allowed to reopen as well as cinemas and theatres up to a maximum of 100 people. From 1 September, all sports, including contact sports and competitions will be allowed again. Saunas, casinos, cafeterias and coffee shops can open.\"},NC:{info:\"Travelers arriving in New Caledonia are required to self-isolate for 14 days on arrival.\",updated_at:\"2020-05-10\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll international flights to and from New Caledonia have been suspended until 31 May. French residents are able to transit through the country on their way to France.\\nAll passengers arriving in New Caledonia will be self-isolated for 21 days at their home or hotel. Checks will be undertaken by the local authorities.\\nPassengers with symptoms (cough and fever) will be placed in quarantine at the hospital until their screening test is negative.\\n\\nInternal restrictions: \\nThe authorities have lifted the majority of COVID-19 related restrictions.\\nDomestic flights have resumed.\\nFree movement and opening of businesses is allowed. Schools have reopened.\\nHowever, public gatherings of more than 50 people are still not allowed.\"},NZ:{info:\"Passengers and airline crew will be quarantined at a government-designated facility for a period of 14 days.\\n- This does not apply to passengers transiting through New Zealand\\n- This does not apply to airline crew if they use appropriate personal protective equipment (PPE). \\nReturning NZ citizens, permanent residents, and immediate family who have travelled to China within 14 days prior to entering New Zealand can still enter but are required to register with the national health hotline and self-isolate for 14 days. \\n\",updated_at:\"2020-05-19\",source:\"https://nz.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll travellers, except New Zealand citizens, permanent residents, family of citizens and permanent residents, diplomats, and air and marine crew, are barred from entering.\\nImmigration authorities can make exceptions on a case-by-case basis for:\\nhumanitarian reasons;\\nhealthcare and other essential workers;\\nSamoa and Tonga nationals, for essential travel to New Zealand;\\nthe holder of a visitor visa who is the partner or dependent of a temporary work or student visa holder and who normally lives in New Zealand and is currently in New Zealand.\\nAll passengers, including New Zealand citizens and residents, must complete a 14-day quarantine or managed isolation period at approved facilities upon arrival in the country. Arrivals assessed as being at high risk of COVID-19 will be placed in quarantine facilities, while other arrivals will stay in managed isolation facilities.\\nAll passengers (including New Zealand citizens) who have visited mainland China in the 14 days prior to arrival require special approval from New Zealand Immigration to travel.\\nCruise ships are banned from entry until 30 June.\\nTemporary visas expiring between 1 April and 9 July will be automatically extended to late-September. Travellers with a temporary visa expiring before 1 April who are unable to leave the country need to apply for a new interim visa online. Foreigners unable to leave the country can telephone 0508 754 163 for government-arranged temporary accommodation.\\nThe government has announced plans to work with various countries to arrange repatriation of foreign nationals. Information on current transit agreements between New Zealand and other countries is available on the government\\u2019s website.\\nFurther details on entry restrictions are also available on the government's website.\\n\\nTransit:\\nNew Zealand has entered into reciprocal transit arrangements with numerous countries in order to make it easier for citizens to return to their home countries. Nationals of countries party to the transit agreements must also meet strict criteria to transit via New Zealand.\\nThose requirements include that transiting passengers:\\nMust remain airside;\\nCannot enter New Zealand;\\nHave a maximum ten-hour window to leave on their onward flight;\\nMust have no COVID-19 symptoms, no contact with a suspected or confirmed case and not be awaiting test results; and\\nMust have confirmation from the airline that they will be permitted to board for their entire journey \\u2013 as well as confirmation prior to boarding that their destination country will permit arrival.\\n\\nInternal restrictions:\\nThe country has transitioned into Alert Level 2 since 13 May.\\nMost businesses, including retail, malls, restaurants, cinemas, playgrounds and gyms will reopen. School will resume from 18 May and bars can open from 21 May. However, gatherings of more than ten people remain banned. Domestic travel, including for tourism, will be permitted but travellers have to keep note of services used and close contacts during movement. Public transport such as buses and trains will be allowed with no more than 50% occupancy rate. Physical distancing and contact registers where required will remain in place until further notice.\\nA state of emergency has been lifted since 14 May with immediate effect.\\nInternational flights are only available from Auckland, though domestic flights are available from Wellington, Christchurch, Dunedin and Nelson. Travellers are allowed on the domestic flight if they hold a ticket for an international flight scheduled to depart no more than 24 hours from the departure time of connecting domestic flights. In addition to having the right to transit through all the countries in the itinerary. This measure remains in place until 13 May.\"},NI:{info:\"The Nicaraguan government has not officially imposed any quarantine policies.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ni.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Nicaraguan government closes border with Costa Rica (AP, 18.05.2020) \\n        \\nInternational restrictions:\\nAll flights are suspended. Airlines wishing to operate flights must request 72 hours in advance along with the passenger manifest. AeroMexico is the only international carrier still operating flights from Nicaragua. Aeromexico, United Airlines, Avianca Airlines and Copa Airlines have announced that they will resume operations from 4-8 June. Land border crossings with Costa Rica have been closed until further notice. There are no official restrictions in place, however, on 14 May, the US embassy advised US citizens still in Nicaragua to prepare to shelter in place.\"},NE:{info:\"Passengers coming from countries with COVID-19 cases will be subjected to a 14-day quarantine. All travellers suspected to be positive for the virus will be held until confirmed in allocated facilities. \",updated_at:\"2020-05-16\",source:\"UNHAS\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All international flights to and from Niger are suspended until 23 May, when the measure may be extended following a review of the situation. The suspension does not apply to domestic, sanitary, and military flights.\\n\\nAuthorities relax some COVID-19 restrictions on 13 May (Joy News, 15.03.2020)\\nCommercial flights suspended. UNHAS Flights suspended.  \\n        \\nInternational restrictions:\\nAnyone entering Niger will be subjected to a 14-day quarantine. All land borders are closed except for freight transportation. All international flights to and from Niger are suspended until 23 May, when the measure may be extended following a review of the situation. The suspension does not apply to domestic, sanitary, and military flights. All travellers suspected to be positive for the virus will be held until confirmed in allocated facilities.\\n\\nInternal restrictions:\\nBusiness activities may resume provided the mitigation measures outlined below are respected. The nationwide state of emergency has been extended until 11 July. Some lockdown measures remain in place in the country. The closure of educational institutions will be lifted on 1 June, if the health situation improves. The ban on public transport for intercity and suburban travel was lifted on 14 May. All gatherings above 50 people are barred, including family and social gatherings. Social venues, including bars, restaurants and cinema are closed although many restaurants remain open for take away. It is mandatory to wear a mask or mouth cover when out in public in Niamey or Zinder.\\n\\nRelaxation of restrictions:\\nThe curfew from 21.00 to 05.00 has been lifted in Niamey until further notice. However, the curfew remains for the rest of the country. The ban on travel between the capital Niamey and other urban centres was lifted on 15 May. Places of worship have reopened and will stay so subject to practicing good social distancing.\"},NG:{info:\"\\u2022Travelers without symptoms on departure but become unwell in transit are advised to self-report to the Port Health Services on arrival\\nAll travellers allowed into the country will be quarantined for 14 days in a facility identified by the Government\\n\\u2022If travelers from countries with ongoing local transmission feel ill with fever, cough or difficulty breathing within 14 days of arrival in Nigeria, please: \\u2022Observe self-isolation immediately by staying indoors and avoiding contact with people. \\n\\u2022Call the NCDC 24/7 toll-free line IMMEDIATELY on 080097000010. \\n\\u2022 All quarantine related information here: https://covid19.ncdc.gov.ng/media/files/MandatoryQuarantine-2.pdf\\n\\n\",updated_at:\"2020-05-20\",source:\"UNHAS (Sources)\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ng.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"President extends movement restrictions by two weeks (Premium Times, 18.05.2020) \\n\\nEssential and emergency international flights, as well as all domestic flights, are exempted. Exemptions include flight related to humanitarian aid, medical and relief flights and technical stops where passengers do not disembark.\\n\\nUNHAS Ops still running. \\n\\nAll land borders have been closed for travellers.\\n\\nInternational restrictions: \\nLagos\\u2019s Murtala Muhammed International Airport (LOS) and Nnamdi Azikiwe International Airport (ABV) in the capital Abuja are closed until 4 June. Essential and emergency international flights, as well as all domestic flights, are exempted. Exemptions include flight related to humanitarian aid, medical and relief flights and technical stops where passengers do not disembark. Mallam-Aminu Kano International Airport, Akanu Ibiam International Airport in Enugu and Port Harcourt International Airport in Omagwa are closed until further notice. All land borders have been closed for travellers. Quarantine related information can be found here: https://covid19.ncdc.gov.ng/media/files/MandatoryQuarantine-2.pdf\\n\\nInternal restrictions:\\nA multi-state lockdown on movement remains in place nationwide at least until 1 June. All residents with the exception of essential workers are required to stay at home and avoid all travel as part of a state-wide lockdown. All hotels are required to notify the authorities of any guests with suspected COVID-19 symptoms. Public gatherings are limited to 30 participants. A ban on non-essential inter-state travel and state-specific curfews is enforced from 4 May. Unless states have issued specific curfew times, they abide by the nationwide curfew from 20.00 to 06.00. The government is imposing restrictions on offshore oil workers. Most internal airlines have suspended operations across the country until further notice. Abuja (Federal Capital Territory): The lockdown was relaxed on 4 May. However, residents will have to adhere to the countrywide curfew which will be in place from 20.00 to 06.00. The wearing of facemasks in public is mandatory as of 4 May. All inbound and outbound travel from the state is suspended, except for critical reasons such as healthcare and critical work; private security companies are also exempt. Movement of all aircraft (both commercial and private) is suspended except for those issued with special permits. All intra-state movements resume under conditions (capacity, provision of hand sanitiser to all passengers, mandatory temperature checks). Taxis are mandated to carry a maximum of four persons at a time (driver and three persons), while buses are to reduce occupancy to 50% of installed capacity. Ban on social gatherings remains in place until further notice. Selected businesses (essential ones like healthcare providers and construction companies) are allowed to open with specific schedules and sanitizing protocols in place. Banks are to open daily from 08.00 to 14.00 and are to observe temperature checks, hand sanitising protocols and the use of facemasks. Markets are allowed to open on Wednesdays and Saturdays between 08.00 and 15.00. The wearing of facemasks and observing sanitising protocols are compulsory to access the markets. Supermarkets will operate normally from 08.00 to 15.00. All businesses, such as restaurants (except for home delivery services from 08.00 to 15.00) and places of worship remain closed. Gatherings of more than 20 people outside of a workplace is prohibited. Public religious gatherings remain prohibited. All schools remain closed until further notice. Adamawa state: The state\\u2019s borders with Cameroon and other Nigerian states remain closed. Most non-essential establishments and a number of markets remain closed. These measures remain in place until further notice. Akwa Ibom: Shutdown of state borders. A stay-at-home order is in place with residents only allowed to go out to buy essential items. Markets are open on Mondays, Wednesdays and Saturdays from 10.00 to 16.00. State lockdown until further notice; authorities are currently consulting other states to decide on whether to relax the restrictions or not. Anambra state: State borders remain closed until further notice. The use of a facemask is mandatory for all essential movements. All food markets, restaurants and bars are allowed to reopen. Bauchi state: All state borders have been closed. A curfew is in place between 18.00 and 07.00. Bayelsa state: A curfew from 19.00 to 06.00 remains in place. The state borders have been closed. Coughing or sneezing travellers will not be allowed to board public transport. All religious activities are suspended. Restrictions on movement will be in place until further notice. Benue state: Ban on public gatherings, closure of state borders, dusk to dawn (19.00 until 06.00) curfew in place. Borno state: A complete lockdown was suspended from 13 May. Strict entry measures at state boundaries have been lifted. Health screenings are in place at three entry points to the state capital Maiduguri, namely Dalori, Muna and Njimtilo camps for internal travellers. Transports of essential goods will remain possible. Until 6 June, all residents are required to stay in their homes, all gatherings are restricted while offices and businesses are closed. Cross River state: All residents are required to wear a facemask when in public. Closure of the states borders. Closure of schools and ban on all public and social gatherings over five people. Delta state: The state\\u2019s lockdown has now ended, allowing economic and business activities from 6.00 to 19.00. An overnight curfew between 19.00 and 06.00 will remain in place. Schools, entertainment venues including cinemas, bars and nightclubs will remain closed until 31 May. Airports will remain closed for commercial flights. The state\\u2019s borders remain closed. Ebonyi state: Curfew from 19.00-07.00. Closure of schools and social venues. Borders closed until further notice. Edo state: A dusk-to-dawn curfew from 20.00 to 06.00 is in place until 27 May. Public gatherings are limited to 20 participants, while only shops selling essential items are allowed to open. Ekiti: Lockdown was eased on 4 May. Schools remain closed. Public gatherings are banned, except funerals which are limited to 20 participants. Movement is only permitted for essential purposes such as the procurement of food and medicine and essential work. facemasks are compulsory in public areas. Business activities are allowed on Mondays, Wednesdays and Fridays from 07.00-16.00. All travel from and into Ekiti state are banned, except for essential services and with no more than three people within the truck. Enugu state: Shutdown of all states borders and suspension of all interstate transportation until further notice. All except grocery markets and pharmacies to remain closed until further notice. All social gatherings are indefinitely suspended. All civil servants must work from home.\\nGombe state: Interstate travel is banned and all gatherings are prohibited. Curfew from 19.00 to 06.00 until further notice. Imo state: All movement within the state is restricted and state borders are closed. Curfew from 18.00 to 06.00 until further notice. Jigawa state: A lockdown in the local government areas of Gumel, Birnin Kudu, Kazaure and Gujungu in Taura started on 30 April. State borders and markets are closed. Social gatherings are restricted across the state. Kaduna state: A curfew on movements to, from and within Kaduna state is in place, from 18.00 to 06.00. In addition, a 24-hour curfew is in place - the lockdown is in place until 26 May at least. No movement outside the resident\\u2019s accommodation is allowed. Essential workers are exempt from this measure. Those violating the curfew may be arrested by security forces. No office, businesses or places of worship are allowed to open. All gatherings, especially those that are religious in nature, are prohibited. Every Wednesday and Saturday the restrictions will be relaxed to allow food markets to open between 08.00 and 18.00 - wearing a facemask will be enforced by authorities. Borders with neighbouring states are closed and only persons with valid passes are allowed into Kaduna, where they will be required to quarantine for 14 days. Kano state: A total lockdown is in place until further notice. All markets and places of worship will be closed; only supermarkets will be open during this time, On Mondays and Thursdays the restrictions will be relaxed between 10.00 and 16.00. The wearing of facemasks in public will be mandatory on those days. On both days, only Yankaba Market, where perishable items are sold, and Yan Lemo Market, would be allowed to operate. Public gatherings are banned. State authorities announced the reopening of mosques and allowance of Friday and Eid prayers. Katsina state: The state has closed all land borders, prohibiting inbound travel from the Republic of Niger and nearby Nigerian states. Vehicles carrying food and other essential goods are exempt from this restriction. Lockdown measures are in place in Daura, Batagarawa, Jibia, Katsina, Safana, Kankia, Musawa, Mutazu, Malumfashi, Dutsi-Ma and Mani Local Government Areas (LGAs). Kebbi state: The state\\u2019s borders and schools are closed. Kogi state: Shutdown of land and water state borders. All residents must stay at home for the exception of essential workers. Those returning to the city of Lokoja will be screened by security forces before entering the city. All social gatherings banned indefinitely. The Kwara state government has announced a total lockdown of the entire sixteen local government areas until further notice. Exceptions will be made for transportation of foodstuffs, poultry and pharmaceutical products. A curfew remains in place between 18.00 and 06.00. Lagos state: Residents are required to stay home and businesses are to remain closed. A nightly curfew is in effect from 20.00 to 06.00. The wearing of facemasks in public is mandatory as of 4 May. All inbound and outbound travel from the state is suspended, except for critical reasons such as healthcare and critical work; private security companies are also exempt. All intra-state movements resume under conditions (capacity, provision of hand sanitizers to all passengers, mandatory temperature checks). Workers from Ogun state will not be allowed to travel until 10 May. Taxis are mandated to carry a maximum of four persons at a time (driver and three persons), while buses are to reduce occupancy to 50% of installed capacity. Selected businesses (essential ones like healthcare providers and construction companies) are allowed to open with specific schedules and sanitising protocols in place. Banks are to open daily from 08.00 to 14.00 and are to observe temperature checks, hand sanitising protocols and the use of facemasks. Markets are allowed to open maximum three times a week between 08.00 and 15.00. Supermarkets will operate normally from 08.00 to 15.00. The wearing of facemasks and observing sanitising protocols are compulsory to access the markets. All businesses, such as restaurants (except for home delivery services from 08.00 to 15.00) and places of worship, remain closed. Public religious gatherings remain prohibited. All schools remain closed until further notice. Health checks are being conducted on a door-to-door basis and it is compulsory to comply with the authorities. Nasarawa state: Entry into Nasarawa state is restricted between 18.00 and 06.00 and all travellers will be screened upon entry. In Lafia and other urban centres a curfew is in place between 20.00 and 06.00. The Karu local Government Area (LGA) is placed in lockdown except on Wednesdays and Saturdays between 10.00 and 14.00. The ban on worship centres is lifted until 2 June. Niger state: State borders are closed and a daily curfew is in effect from 14.00-22.00. Public gatherings of more than 20 people are prohibited. State borders are closed. Only essential movements for food, pharmaceutical and petroleum supplies are allowed. Food markets are open on Tuesday, Friday and Sundays from 06.00 to 18.00. Ogun state: A curfew is in place from 20.00 to 06.00 until 22 May. Residents are free to move around on Monday, Wednesday and Friday between 07.00 and 17.00. The wearing of facemasks in public is mandatory. All inbound and outbound travel from the state is suspended, except for critical reasons such as healthcare and critical work; private security companies are also exempt. Movement of all aircraft (both commercial and private) is suspended except for those issued with special permits. All intra-state movements resume under conditions (capacity, provision of hand sanitiser to all passengers, mandatory temperature checks). Workers in Lagos state and residents in Ogun state will not be allowed to travel until 10 May. Taxis are mandated to carry a maximum of four persons at a time (driver and three persons), while buses are to reduce occupancy to 50% of installed capacity. Several major roads across the state are closed to vehicular traffic: Lagos-Ibadan Expressway; Abeokuta-Ifo-Sango/Ota Expressway; Interchange-Sagamu-Ijebu/Ode-Benin/Ore Expressway; Abeokuta-Odeda-Ibadan Highway; Sango/Ota-Atan-Owode-Idiroko Highway and Atan-Lusada-Agbara-Badagry Highway. All churches are closed. Markets will open every 48 hours from 10.00 to 14.00. Selected businesses (essential ones like healthcare providers and construction companies) are allowed to open with specific schedules and sanitising protocols in place. Banks are to open daily from 08.00 to 14.00 and are to observe temperature checks, hand sanitising protocols and the use of facemasks. Markets are allowed to open on Mondays, Wednesdays and Fridays between 08.00 and 17.00. Supermarkets will operate normally from 08.00 to 17.00. The wearing of facemasks and observing of sanitising protocols are compulsory to access the markets. All businesses, such as restaurants (except for home delivery services from 08.00 to 15.00) and places of worship, remain closed; private security companies are also exempt. Gatherings of more than 15 people outside of a workplace are prohibited. Public religious gatherings remain prohibited. All schools remain closed until further notice.\\nOndo state: State borders are closed. Only essential movements for food, pharmaceutical and petroleum supplies are allowed within the state. Closure of all markets until further notice. There is a dusk to dawn curfew in place. The local government elections initially scheduled for 18 April have been postponed indefinitely. Osun state: A partial relaxation of the lockdown will be effected from 4 May, from Monday to Thursday between 06.00 to 17.00. However, total lockdown will be in force from Thursday to Sunday from 18.00 to 06.00. It is compulsory to wear a facemask when in the public place.\\nOyo state: All gatherings are limited to 30 persons. There is a curfew from 19.00 until 05.00. Plateau state: Closure of all markets selling non-essential items. Social venues closed. Health screening at all entry and border points. State borders are closed. After a temporary suspension on 24-26 April, an indefinite lockdown started on 27 April, during which all movement is banned except for staff on essential duty, including security companies, medical professionals and telecom operators. The measures will be relaxed on each Friday, Saturday and Sunday to allow residents to stock their home supplies.\\nRivers state: As of 7 May a total lockdown on the entire Obio-Akpor and Port Harcourt is in place. The lockdown was temporarily lifted for 2 days, with effect from Tuesday 12 May. That meant: no vehicular movement, no gathering than more than two people except those with proper authorisation for essential movement. Oil and gas companies need to request for waivers and entry permits that will be considered on a case to case basis. Shutdown of state borders. Public venues have been closed, while religious bodies have been asked to halt open worship. Surveillance posts have been set up at the state\\u2019s borders. A dusk-to-dawn curfew (from 19.00 until 06.00) is in effect from Obiri-Ikwerre Junction (Ozuoba, Rumualogu) to Choba and from Education Bus Stop to Agip Junction, Ikwerre Road. Drinking establishments in this area are to close down; likewise for markets.\\nSokoto state: All interstate roads and land borders closed. All civil servants required to work from home. Taraba state: State borders are closed; only essential movement for food, pharmaceutical and fuel supplies is permitted. A nightly curfew from 19.00-06.00 is in effect. Markets, mosques and churches have been ordered to close. Businesses may open and free movement is allowed from 10.00 to 14.00 on Wednesdays and Saturdays. Mosques and churches are shut down. Yobe state: State borders are closed. Zamfara state: All state borders have been closed and a lockdown, including a state-wide curfew from 20.00 to 06.00 and 18.00 to 06.00 in Kaura Namoda LGA, has been renewed. A ban is in place on all religious gatherings and all markets are closed. The measures were renewed on 12 May.\\n\\nRelaxation of restrictions:\\nBusiness activities are allowed for only three days a week (Mondays, Wednesdays and Fridays) from 07.00 until 16.00 - social distancing measures must be followed. Restriction of movement will be enforced 4 days a week (Tuesdays, Thursdays, Saturdays and Sundays) - only essential services (food, medicine, beverages, petroleum, bank, agriculture, construction, select media and telecommunications are exempted from the restriction.\\nLagos State, Ogun State and Abuja: Easing of lockdown on 4 May, businesses allowed to return to work under stringent security and health measures. Curfew will persist.\"},NU:{info:null,updated_at:\"2020-04-28\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification subject to special conditions\",restrictions:\"Passengers who have been in Australia, Austria, Belgium, Bulgaria, China (People's Rep.), Chinese Taipei, Croatia, Cyprus, Czechia, Denmark, Estonia, Finland, France, Germany, Greece, Hong Kong (SAR China), Hungary, Iceland, Ireland (Rep.), Indonesia, Iran, Italy, Japan, Korea (Rep.), Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Macao (SAR China), Netherlands, Norway, Poland, Portugal, Romania, Singapore, Slovakia, Slovenia, Spain, Sweden, Switzerland, Thailand, USA or United Kingdom in the past 14 days are not allowed to enter Niue.\\n- This does not apply to nationals and resident of Niue and to airline crew.\\n\\nAll travellers who have been in China in the 30 days prior to arrival are not allowed to enter. They must have stayed in a country with no confirmed cases of COVID-19 for at least 14 days before entering Niue and have official medical clearance within three days prior to arrival.\\n\"},MK:{info:\"Only travelers who are citizens or legal residents of North Macedonia will be permitted entry to North Macedonia and are subject to quarantine after entry.\",updated_at:\"2020-04-29\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.thenational.ae/lifestyle/travel/the-36-countries-where-commercial-passenger-flights-have-been-grounded-due-to-the-coronavirus-1.996215 \\nhttps://mk.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.osac.gov/Content/Report/95e63bf6-a6e9-4c64-b291-18619f1690bb\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"new state of emergency and curfew hours amid COVID-19 concerns (OASC, 15.05.2020)\\nA state of emergency is in place. Air and land borders are closed - except for freight transport which can cross either at Tabanovce (Serbia), Deve Bair (Bulgaria), Kjafasan (Albania) or Blace (Kosovo). Skopje International Airport (SKP) is shut down.\\nAll airports in North Macedonia are closed for commercial flights until further notice.\\nOnly citizens and legal residents are allowed to enter. Upon arrival back into the country, they must observe a 14 day self-isolation period.\\n\\nInternal restrictions:\\nEvery citizen who leaves the country will sign a document stating that he will not be allowed to return to the country in the next three months. \\nThe authorities have imposed a nationwide nightly curfew between 21.00 and 05.00, effective from 22 March. Public transport will be suspended during the curfew. \\nMeasures to control passenger and other motor vehicles for entry into Debar and Center Zupa are being implemented. The entrance is allowed only to persons who are residents of the municipalities, while at the same time the exit of all citizens found in the area of both municipalities is strictly prohibited. \\nOn 25 March, authorities announced new restrictions in Kumanovo. Public transport within the municipality and towards other cities is suspended.  The curfew is in effect from 4 p.m. until 5 a.m. There is a complete ban on movement outside the home in the municipality of Kumanovo on Saturdays and Sundays. \\n\\nEffective from Wednesday 8 April there will be a curfew for all citizens, Monday to Friday from 4pm until 5am. On weekends there is a complete ban on the movement of all citizens from Friday at 4pm until Monday 5am. \\nFrom Friday, May 1, 2020, through Sunday, May 3, 2020, a nationwide curfew will be in place from 2:00 p.m. until 5:00 a.m. the next morning.\"},MP:{info:\"All travellers arriving will be subject to screening and 14-day quarantine. Travellers staying for less than 14 days will be allowed to leave before the end of the quarantine period.\",updated_at:\"2020-04-22\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pk.usembassy.gov/covid-19-information/\\nMedia\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions: \\nAll commercial international flights have been suspended from until 30 April, with the exception of freight and medical transport.\\nAll travellers from China are banned from entry. All travellers, including residents arriving from a COVID-19 affected country, including Guam, Hawaii and the continental US, will be subject to screening and a mandatory 14-day quarantine at one of the seven designated facilities. Failure to comply may result in penalties and fines. Travellers staying for less than 14 days will be allowed to leave before the end of the quarantine period. \\nAll travellers entering the Northern Mariana Islands whose final destination is the island of Tinian or the island of Rota will be quarantined for 14 days in Saipan before proceeding to their destination. \\n\\nInternal restrictions: \\nAll non-essential government offices and functions are closed until further notice. All non-essential businesses with facilities open to the general public can only operate from 06.00 to 13.00 and are only allowed to function at 50% occupancy. All businesses offering food and beverages for consumption must suspend such services; delivery and takeaway is permitted. \\nThere is a partial curfew in place from 19.00 to 06.00, during which no persons will be allowed to be present in public areas unless for essential or emergency purposes. \\nStar Marianas Air has suspended inter-island flights starting on 3 April, with the exception of cargo and medical evacuation flights between Rota, Saipan and Tinian islands. \\n\"},NO:{info:\"Inbound travellers face a mandatory 14-day home quarantine, regardless of symptoms or nationality. \\nNorway has eased some of its border restrictions with Schengen. EEA-citizens are allowed back in for essential family and work reasons, they will face a ten-day quarantine period, instead of a 14-day period.\",updated_at:\"2020-05-20\",source:\"https://no.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nForeign nationals who don\\u2019t have a residence permit will be turned away at the border. EEA citizens on essential or work related travel are are exempt of the restriction but are required to provide proof of:\\nA contract with a Norwegian employer or,\\nA contract with a EU/EEA company and a letter proving to have been assigned in Norway or,\\nBeing self-employed and on an assignment to Norway.\\nInbound travellers face a mandatory ten-day home quarantine, regardless of symptoms or nationality.\\nAll airports and ports in Norway have stopped normal operations and international flight options remain limited.\\nInternal border controls are in place until 13 August.\\nBorder control at ports which have ferry connections with Denmark, Germany and Sweden are in place until 12 November, notably due to terrorist threats.\\n\\nInternal restrictions:\\nBars, restaurants and all entertainment venues remain closed.\\nGatherings above 50 people are prohibited, including major sports and cultural events until 15 June at least.\\nInternal flights will continue to operate. Travel within Norway should be for essential purposes only.\\n\\nRelaxation in restrictions\\nAll airports will reopen on 1 June.\\nGatherings up to 50 people in public areas are authorised - under the conditions of a one-metre distance measure and with a manager in charge.\"},OM:{info:\"The Ministry of Health will apply home or institutional quarantine to all travelers entering Oman (only Omani nationals allowed to enter now) for 14 days.\",updated_at:\"2020-05-07\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://lfpress.com/pmn/health-pmn/oman-suspends-all-flights-from-march-29-except-cargo-and-flights-to-musandam-state-tv/wcm/436cadbe-a7f6-495e-8c34-b61df41bb364\\nhttps://om.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Oman suspends all flights from March 29, except cargo and flights to Musandam (State TV, 24.03.2020)\\n\\nInternational restrictions:\\nAll international and domestic passenger flights (including transit) are suspended until further notice. \\nA daily flight will continue to operate between the capital\\u2019s Muscat International Airport (MCT) and Khasab Airport (KHS, Musandam governorate), as well as cargo flights.\\nAll non-Omani nationals are barred entry until further notice. This ban includes Gulf Cooperation Council (GCC) citizens and foreign nationals holding valid tourist, business and residency visas. Airport transits remain unaffected. Foreign nationals will be permitted to depart the country during this time, although Omani citizens will not be. Exceptions for Omanis may be made on a case-by-case basis.\\n\\nInternal restrictions: \\nInternational restrictions:\\nAll international and domestic passenger flights (including transit) are suspended until further notice. \\nA daily flight will continue to operate between the capital\\u2019s Muscat International Airport (MCT) and Khasab Airport (KHS, Musandam governorate), as well as cargo flights.\\nAll non-Omani nationals are barred entry until further notice. This ban includes Gulf Cooperation Council (GCC) citizens and foreign nationals holding valid tourist, business and residency visas. Airport transits remain unaffected. Foreign nationals will be permitted to depart the country during this time, although Omani citizens will not be. Exceptions for Omanis may be made on a case-by-case basis.\\n\\nSuspension of all public transport including all buses, ferries, taxis, vans and microbuses until further notice.\\nBuses and ferries heading to Musandam and the Wilayat of Masirah are exempt from the new restrictions.\"},PK:{info:\"Upon arrival in Pakistan all travellers will be subject to a minimum of 48 hour state-monitored quarantine. Travellers are required to take a COVID-19 test after 48 hours and the quarantine period can then be extended based on the results. Travellers who test negative for COVID-19 will be required to self-isolate for 14 days. Government quarantine centres will be free of charge. If travellers choose to stay in a hotel or paid facility for their quarantine period they will be responsible for covering all expenses during this time.\",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pk.usembassy.gov/covid-19-information/\\nMedia\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Pakistan will resume domestic flights in a phased manner from Saturday 16 May. (Deccan Herald, 15.05.2020) \\n\\nInternational restrictions: \\nAll international flights except for cargo and diplomatic flights, are suspended until at least 31 May. \\nExemptions can be made for diplomatic flights, and private aircraft are allowed to operate domestically between Islamabad (ISB), Karachi (KHI), and Lahore (LHE) International Airports.\\nForeigners with valid visas in Pakistan can have their visas extended until 30 June.\\nThe Prime Minister\\u2019s Special Assistant on National Security clarified in a press conference that there is no prohibition on outgoing passengers from Pakistan on non-PIA flights but since no carrier would be flying in, it is automatically understood that outbound traffic would be halted as well.\\nAll international arrivals are required to provide a medical certificate stating the results of the COVID-19 test conducted 24 hours prior to boarding the flights. This will be requested at the point of disembarkation in Pakistan.\\nAll travellers are required to submit a health declaration form and undergo health screening upon arrival.\\nUpon arrival in Pakistan all travellers will be subject to a minimum of 48 hour state-monitored quarantine. Travellers are required to take a COVID-19 test after 48 hours and the quarantine period can then be extended based on the results. Travellers who test negative for COVID-19 will be required to self-isolate for 14 days. Government quarantine centres will be free of charge. If travellers choose to stay in a hotel or paid facility for their quarantine period they will be responsible for covering all expenses during this time.\\nAll land borders remain closed.\\n\\nInternal restrictions:\\nDomestic flights have partially resumed, with flights allowed at five major airports, including the capital\\u2019s Islamabad (ISB), Karachi (KHI, Sindh province) and Lahore (LHE, Punjab province), Peshawar (PEW, Khyber-Pakthunkhwa province), and Quetta (UET, Balochistan province) airports.\\nSocial distancing and access control measures have been put in place following the resumption of domestic flights at the five airports, including the requirement for those entering the airport to wear a mask and the restriction of meet-and-greet services at the airport. Passengers will also be required to fill in a health declaration form prior to boarding the aircraft.\\nThe nationwide lockdown is gradually being lifted. However, each province will implement its own measures. Below is a partial list of previously announced provincial level restrictions, and further details can be expected in the coming days:\\nBalochistan province: Under a provincial \\u2018smart lockdown\\u2019, businesses will be allowed to operate with social distancing measures from 03.00 to 17.00 until the end of Ramadan.\\nIslamabad Capital Territory: Shops and markets will be allowed to operate on Mondays to Fridays from 08.00 to 17.00, while there will be a lockdown on Saturdays and Sundays, with only essential businesses operating. The measures will be in place until 31 May.\\nKhyber-Pakhtunkhwa province: All shops will be allowed to open on Mondays to Thursdays until 16.00, and will be closed from Fridays to Sundays, except for essential businesses. Public transport will resume on 18 May.\\nPunjab province: Shops and markets will be allowed to operate on Mondays to Thursdays from 08.00 to 17.00, while there will be a lockdown on Fridays to Sundays, with only essential businesses operating. Restaurants will only offer takeaway or delivery. Shopping malls and public transport services will resume from 18 May. The measures will be in place until 31 May.\\nSindh province: Essential businesses will be allowed to resume from 11 May under the federal government\\u2019s standard operating procedures (SOPs). Shops, excluding large markets and shopping malls, will be allowed to open from sehri (traditional pre-dawn meal during the Islamic holy month of Ramadan) until 17.00 from Mondays to Fridays. The measures will be in place until 31 May.\\nPrivate aircraft are permitted to operate between the capital\\u2019s Islamabad (ISB), Karachi (KHI, Sindh province) and Lahore (LHE, Punjab province) airports.\\nPassenger buses and vans are banned from the motorway network. However, vehicles carrying goods, petroleum products and daily use items with minimum staff, as well as private vehicles with maximum two passengers giving valid reason of travelling, will be allowed to enter the network.\\nMultiple provincial and territorial governments have invoked Section 144 of the Code of Criminal Procedure, so as to declare restrictions on movement, bans on public gatherings, suspensions or restrictions to business operations (except essential services) and restrictions on public transport.\\nRestrictions are allowed to ease in sectors deemed by the government as \\u2018low risk\\u2019. These include e-commerce related to exports and local delivery of essential items, chemical manufacturing plants, software development and programming, paper and packaging, cement and fertiliser plants, mining, glass manufacturing, approved exports-related industries, veterinary services, laundry services, stationary shops and industries where labourers remain within a premise.\\nThe Gilgit-Baltistan territorial government declared a 'home lockdown' for an indefinite period, which will be legally enforced. Grocery stores, pharmacies and other essential services remain open, while inter-district and intra-city public transport and non-essential shops are closed.\\nPakistan Railways announced the reduction of inter-city express trains.\\nThe countrywide shutdown of all schools has been extended until 15 July.\"},PW:{info:\"The Ministry of Health shall identify appropriate and adequate facilities, either public or private property to be designated as Quarantine Facilities for exposed persons. If any quarantined person if found to be infected, that person shall be promptly relocated to the appropriate isolation facility. The Alternate Care Site at Kalau Gym in Meyuns, Koror shall be the primary Isolation and care Facility for non-critical persons. \",updated_at:\"2020-05-03\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pw.usembassy.gov/wp-content/uploads/sites/282/MOH-Directive-No.-90-20-Authorizing-Isolation-and-Quarantine-Measures.pdf \",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All commercial flights have been suspended until at least 30 May 2020, while all flights have been suspended from Hong Kong, Macao (both China SAR) and Mainland China until 30 June. \\nThe authorities have temporarily restricted entry for foreign visitors from or transiting via mainland China, Hong Kong and Macao (both China SAR) in the past 14 days. \\nTravellers allowed entry will be subject to a 14-day quarantine.\"},PA:{info:\"The Panama Canal Authority (ACP) requires that ships coming from countries with a confirmed case and with a crew member exhibiting symptoms must notify the ACP at least 30 days before its arrival and of any crew changes within 14 days of arrival.\\nAirport Entry/Exit:Health screening and questionnaires at airports and ports of entry. Passengers who have been to China in the 30 days prior to\\narrival may be subject to increased screening. Any traveller displaying flu-like symptoms will be immediately taken to the\\nHospital San Miguel Arcangel in the capital Panama City for quarantine.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pa.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to Panama are suspended.\\n- This does not apply to humanitarian flights.\\n\\nInbound restrictions:\\nThe country\\u2019s borders are indefinitely shut to foreign nationals and non-residents.\\nAll international flights, arriving and departing, will be suspended until at least 22 June.\\nAll domestic flights have been suspended until 22 May.\\nAny traveller displaying flu-like symptoms will be immediately taken to the Hospital San Miguel Arcangel in the capital Panama City for quarantine.\\nHumanitarian, cargo, and domestic flights can continue and are not subject to the flight suspension.\\n\\nOutbound restrictions:\\nAll international flights, arriving and departing, are suspended until 21 June.\\n\\nConditions and internal restrictions:\\nDomestic air travel has ceased\\nA country-wide 24-hour curfew has been implemented. Individuals can only be outside the home for a maximum of two hours for food and/or medicine purchase. Men are allowed to leave their residences for two hours at a time on Tuesdays, Thursdays and Saturdays to visit either the supermarket or the pharmacy. Women are permitted to go out on Mondays, Wednesdays and Fridays for the same reasons. The hours of movement are determined by the last digit of an individual's ID card or passport. Masks must be worn in public and no one is permitted to leave their homes on Sundays.\\nThe Panamanian government announced on 11 May guidelines that businesses will have to adopt in order to reopen once restrictions are lifted. Restrictions will first be lifted for the e-commerce, mechanical workshops and fishing sectors starting 13 May.\\nOutdoor physical exercises are allowed wearing masks, following social distancing and on the designated day and hour according to the ID card.\"},PG:{info:\" People identified as persons of interest based on screening measures may be denied entry, asked to undergo a 14-day self-quarantine, or may be subjected to government-imposed quarantine at a designated health facility.\",updated_at:\"2020-05-10\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pg.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nMost international flights are suspended until 12 June.\\nPartial outbound international flights have resumed from 27 April. The State of Emergency Controller only allows Air Niugini to operate outbound international flights to Brisbane (five times per week), Cairns (two times per week) and Singapore (four times per week).\\nInbound international flights are limited to citizens stranded overseas and foreigners granted permission to enter. Those seeking to enter must provide the necessary permissions and evidence of 14-day hotel accommodation booking at an approved quarantine hotel, prior to being able to check-in.\\nForeigners seeking to enter Papua New Guinea must also apply in writing to the National Operations Centre at covid19-admin.logistics@police.gov.pg, as well as submit the COVID-19 Air Passenger Travel Form, to be considered for permission to enter.\\nNationals and permanent residents are only allowed to return during the period when authorised by the Emergency Controller. They are advised to contact the PNG Department of Foreign Affairs and International Trade (DFAIT) to request for return, via their nearest embassy, high commission or consulate.\\nReturning citizens and permanent residents will be subject to quarantine at designated facilities, while non-citizens and permanent residents will be subject to quarantine at a designated hotel in the capital Port Moresby. These are Holiday Inn, Ela Beach Hotel, Sanctuary Hotel, Dixies Bungalows, Grand Papua Hotel, Stanley Hotel, Hilton Hotel, Laguna Hotel and Granville Hotel. All returning passengers must show evidence that they have already paid for 14 days quarantine at an approved hotel before boarding the flight. In addition, all incoming passengers are required to fill out an air passenger travel approval form.\\nThe country\\u2019s border crossing with Indonesia, specifically the Wutung border post, is closed. The Solomon Islands-Bougainville border has been closed until further notice.\\nCruise ships or yachts with more than 15 passengers will be refused entry. Sea arrivals are only permitted at declared ports of Motukea (Port Moresby), Lae and Rabaul.\\nProcessing of visas on arrival is currently suspended. All travellers must obtain a valid physical visa or eVisa prior to arrival.\\nAirline, immigration, customs, and/or health authorities are actively screening arriving passengers, including through thermal scanning, public health declarations, and examination of travel histories.\\n\\nInternal restrictions:  \\nThe nationwide state of emergency has been extended until at least 1 June.\\nDomestic flights have resumed.\\nPeople who wish to conduct domestic travel to Buka, Daru, Kiunga, Vanimo and Wewak must fill in a Domestic Travel Application Form and seek approval from the Emergency Controller.\\nCurfew is in place from 22.00 to 05.00 daily in East New Britain Province and Western Province. No domestic travel, including domestic flights, is allowed to and from East Sepik Province, Sandaun Province and Western Province. All public gatherings remain banned except for in identified essential businesses such as supermarkets and airports. Public transport has resumed with limited passenger capacity.\\nTravel into and out of the states of East Sepik, Western Province and West Sepik, and other states with confirmed COVID-19 cases is prohibited unless granted written permission by the Chief of Police. Except for those states, movement across state borders by foot, vehicle or ship is not restricted.\\nSchools are gradually resuming.\\nAll non-essential workers are advised to stay at home.\\nEntertainment and sports venues are closed.\\n\\n\\nRelaxation of restrictions: \\nPublic transport has resumed under strict control measures starting. Schools will gradually resume from 27 April. \"},PY:{info:\"\\u2022Paraguay requires all persons arriving to Paraguay to remain in isolation in their own homes until the 14-day incubation period has passed, regardless of whether symptoms are present.\",updated_at:\"2020-05-05\",source:\"https://www.osac.gov/Content/Report/c8fbf3b3-a39d-489a-b9a2-185718411a21\\nhttps://www.iata.org/contentassets/6417a3ee7eae4fa4bf3e8003b125db81/paraguay-ncov-measures.pdf\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://py.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to Paraguay are suspended. This does not apply to health services and repatriation flights.\\n\\nInbound restrictions: Border closure for all foreign travellers until further notice. Paraguayan nationals and residents will be permitted to enter the country; however, they will be subject to mandatory quarantine for 14 days in military barracks. Visas issued to Chinese nationals are void. \\n\\nOutbound restrictions: Commercial flights have been suspended at all Paraguayan airports until 4 May with limited exceptions for repatriation flights. Non-residents of Paraguay are no longer permitted to transit the airport in the capital Asuncion. \\n\\nConditions and internal restrictions: All international commercial and charter flights remain suspended. A curfew is in place from 21.00 to 05.00, with exceptions for essential services until at least 25 May. Vehicles with odd-numbered license plates may only travel on Mondays, Wednesdays, Fridays, and Sundays, while vehicles with even-numbered license plates may only travel on Tuesdays, Thursdays, and Saturdays. Checkpoints are in place along major highways to ensure travel is for essential purposes. All educational institutions and large public and private events are suspended. Masks must be worn on public transportations, and are recommended while in public places, such as the supermarket and pharmacies.\\n\\n\"},PE:{info:\"The Quarantine policy restricts all movement except for traveling to the supermarket, bank, gas stations, pharmacy or to emergency medical clinics, to provide assistance to the elderly or small children or to the hospital for emergencies.  Additional rules and movement restrictions as part of its national quarantine strategy:  \\nInter-regional travel by road has been restricted unless authorized by the Government of Peru. \\nA mandatory daily curfew from 6:00 p.m. \\u2013 5:00 a.m. for most of Peru (including Lima and Cusco), \\nA mandatory daily curfew from 4:00 p.m. \\u2013 5:00 a.m. for Tumbes, Piura, Lambayeque, La Libertad and Loreto regions. \\nUse of privately registered vehicles will be restricted. \\nUse of facemasks in public is mandatory. \\n\\n\\n\",updated_at:\"2020-05-15\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iata.org/contentassets/be994f6677b0475c82c312c9f2aa6b5c/peru-ncov-measures.pdf\\nhttps://pe.usembassy.gov/covid-19-information/\\nhttps://www.gov.uk/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Nationwide COVID-19 lockdown extended until 30 June (Reuters, 22.05.2020)\\nAll airports and borders will be closed permanently until 24 May. \\n\\n1. Passengers are not allowed to enter Peru.\\n2. Airline crew must self-isolate at hotel Costa del Sol at Jorge Chavez International Airport for the entire duration of stay.\\n\\nInbound restrictions:\\nThe government has closed its borders to all international travellers. All arrival and departure flights at Jorge Chavez International Airport serving Lima is suspended.\\nQuarantine measures and border closures will continue until 24 May.\\nPeruvian citizens will have to undergo a 15-day mandatory quarantine.\\nNo cruise ships are permitted to dock in Peruvian ports.\\nFlights to Europe and Asia are suspended.\\nAll airports and borders will be closed permanently until 24 May. Only state flights will be received aimed at the repatriation of foreign citizens. These flights must arrive at the Callao Air Base Grupo A\\xE9reo No. 8. Embassies are urged to present the corresponding requests with due anticipation in order to be able to include flights in the schedule.\\n\\nOutbound restrictions:\\nThe government has closed its borders to all international travellers.\\nBorders remain closed until further notice.\\nLimited repatriation flights to the US scheduled through 20 May on the US Embassy website.\\n\\nConditions and internal restrictions:\\nA nationwide curfew is in effect from 18.00-04.00 until further notice.\\nIn La Libertad, Lambayeque, Loreto, Piura, and Tumbes regions curfew hours begin at 4:00 p.m. and end at 4:00 a.m.\\nAll educational institutions have been suspended.\\nA nationwide state of emergency will remain in force until at least 24 May, mandating all residents to remain in quarantine and abide by curfews.\\nOnly one member of each household is permitted to leave their home for essential purposes each day. (The previous gender- and day-of-the-week-based restriction has been removed).\\nNo one is permitted to leave home on Sundays.\\nThe use of facemasks in public is mandatory.\"},PH:{info:\"The Government of the Philippines has implemented enhanced screening and quarantine measures to reduce the spread of COVID-19.  Travelers should be prepared for travel restrictions to be put into effect with little or no advance notice.\\n\\nPlease visit the Philippine Department of Tourism (DOT) webpage for a current list of quarantine locations and status: https://philippines.travel/safeph\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ph.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification subject to special conditions\",restrictions:\"International restrictions:\\nInbound international flights to Ninoy Aquino International Airport will resume in a limited capacity from 11 May. All international and domestic passenger flights at eight other airports remain suspended until further notice according to a NOTAM issued by CAAP. They include: Mactan-Cebu International Airport (CEB, Central Visayas region) Clark International Airport (CRK, Central Luzon region) Francisco Bangoy International Airport (DVO, Davao region) Iloilo International Airport (ILO, Western Visayas region) Kalibo International Airport (KLO, Western Visayas region) Zamboanga International Airport (ZAM, Zamboanga peninsula) Laoag International Airport (LAO, Ilocos region) Puerto Princesa International Airport (PPS, Mimaropa) Exemptions include emergencies while en-route, cargo flights, air ambulances and medical supplies flights, weather mitigation flights, maintenance flights as well as repatriation flights. Outbound flights are still available upon approval from the CAAP. Domestic flights remain suspended at Ninoy Aquino International Airport (MNL). Issuance of visas and visa-free entry services for all foreign travellers are suspended. Previously issued visas to foreign travellers have been cancelled. Visas that have been issued to foreign spouses and children of Filipino nationals, as well as Foreign Government and International Organisation officials, remain valid. Foreign nationals are temporarily barred from entering the Philippines. This includes foreign nationals under Visa Waiver Agreements, Special Visas, Executive Order No. 408, holders of Hong Kong (SAR), Macao (SAR) and British National Overseas passports and Immigrant and Non-immigrant visas. Exemptions will be granted to overseas Filipino workers, Philippine passport holders and foreign spouses of Filipino citizens, as well as foreign crew members.\\nAll Filipino citizens returning from areas where there is community-based COVID-19 transmission will have to undergo a 14-day mandatory quarantine period at designated facilities. All incoming passengers will also need to undergo a COVID-19 swab test. While awaiting results, passengers shall stay in the government designated facilities. Those tested positive will be transferred to a hospital for medical treatment. The Department of Transportation has advised that all persons, regardless of nationality except for Filipino tourists, may now fly out of the country at any time. Inbound international travellers are allowed entry subject to strict immigration and quarantine protocols. Only one person is allowed to transport passengers to the airport and the driver must carry with them a copy of the passengers\\u2019 airline ticket. The authorities banned Filipino overseas foreign workers from travelling to Hong Kong, following the lifting of earlier restrictions on such travel. The Department of Tourism has created a Tourism Airport Team that provides a 24-hour service to stranded tourists at airports. Travellers may contact the Department of Tourism or the regional government for further information.\\nPorts will continue to be open to cargo ships, no embarkation and disembarkation of crew will be allowed. \\n\\nInternal restrictions:\\nUntil 31 May, Cebu and Mandaue cities (both Central Visayas region) will remain under Enhanced Community Quarantine (ECQ); the National Capital Region (NCR), Angeles City, Bataan, Bulacan, Nueva Ecija, Pampanga, Zambales (all Central Luzon), and Laguna (Calabarzon) will be under \\u2018modified\\u2019 ECQ; and the rest of the county will be under General Community Quarantine (GCQ). The implications of ECQ are: Restricted air, land and maritime movement, except for cargo and essential business. People may only leave their homes to conduct essential business such as purchasing basic necessities. Mandatory wearing of facemasks when outside of residence. Nightly curfews may be put in place by local government units, these vary according to locality. Mass gatherings are prohibited. Mass public transportation as well as taxis and ride-hailing services are suspended during the quarantine. Those with private cars are only allowed to drive for essential purposes such as purchasing essential goods and accessing healthcare services. Private organisations allowed to operate are only those related to food and medicine production and distribution as well as health services. Banks, money transfer services, utilities, telcos, and outsourcing and export firms are also exempt. Under the modified ECQ restrictions, limited reopening of businesses and transportation services will be allowed. While domestic flights and most public transportation remain suspended, public shuttles for essential workers will be permitted. Private vehicles will be allowed, limited to two passengers per row. Only one rider is allowed on motorcycles, bicycles and e-scooters. The government also encourages the use of non-motorised transportation. Gatherings will be limited to a maximum of five people, subject to health guidelines. Movement will be mostly limited to either obtaining essentials or travelling for work in industries that are allowed to resume. Limited outdoor exercises such as jogging and cycling will be permitted only if masks are worn and a social distancing of two metres is practiced. Inter-island travel remains prohibited. The implications of GCQ are: Select workers will be allowed to leave home quarantine and work in phases. Those under 21, above 60, and those in high health-risk will still be required to remain under home quarantine. Mandatory wearing of masks will remain in place. Priority and essential construction projects will resume, as will classes in higher education institutions. Public transportation will resume at reduced capacity. Non-leisure stores in shopping malls will be allowed to resume operations. Other than as listed above, areas under GCQ will be subject to the same restrictions as those under ECQ, until further notice. Inter-island movement between two GCQ areas is permitted. Hotels and other hospitality businesses may only operate during the lockdown under the following conditions: They have guests who booked their stay on or before 17 March. They have guests who have existing long-term leases. They are housing employees of establishments exempted from the lockdown.\\nThe Department of Trade and Industry has stated that hotels in GCQ areas will be gradually allowed to resume operations. Further guidelines will be issued in the coming days.\\nCurfew exemptions will be granted to those involved in providing basic necessities, food preparation and delivery services, energy and telecommunications, as well as healthcare workers, water refilling workers, financial services workers, media personnel, and people transiting to and from work, with necessary identification and certificate of employment.\\nSecurity posture will be heightened to enforce quarantine.\\nSeveral other cities have also implemented further restrictions. At least 82 different localities have imposed differing restrictions and quarantine measures. Below is a partial list of these restrictions:\\nLuzon\\nPalawan province: Domestic and international flights, as well as travel between municipalities in the province, are suspended.\\nPampanga province: All domestic and international commercial flights via Clark International Airport are suspended until further notice.\\nVisayas islands\\nCebu province: The ECQ for Cebu City has been extended until at least 31 May. All borders of Cebu City are closed to non-residents, with the exception of essential services. All domestic and international flights are suspended. A mandatory stay-at-home order is in force, with the exception of those in essential services.\\nMindanao island\\nCagayan de Oro: A \\u2018community quarantine\\u2019 is in place until further notice. A daily curfew is in effect from 22.00-05.00. All shopping centres and entertainment venues have been ordered to close.\\nDavao City: The nightly curfew remains in place from 21.00-05.00; residents can only leave their homes with a Food and Medicine (FM) pass.\\nGeneral Santos City: The city is under a nightly curfew from 21.00-04.00 until further notice. Entry and exit restrictions have been implemented on a case-by-case basis. Passenger flights have been suspended.\"},PL:{info:\"All persons arriving to Poland must undergo a health inspection and provide contact information. All travelers will be obligated to submit to a 14-day quarantine. Mandatory quarantine is not required in the following categories:\\n\\u2022Polish inhabitants who work in a neighboring country and regularly cross the border\\n\\u2022foreigners residing in a neighboring country who work in Poland and cross the border regularly\\n\\u2022drivers engaged in the professional transport of goods\\n\\u2022ship and aircraft crews \\n\",updated_at:\"2020-05-22\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pl.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Poland to extend ban on international flights until June 6 (Reuters, 22.05.2020) \\nGovernment may reopen borders 15 June, lift remaining COVID-19 restrictions 1 July (Reuters, 19.05.2020)\\n\\nIInternational restrictions:\\nBorders are closed until 15 June and stringent checks have been imposed at all border crossings for the coming weeks. International rail is suspended until further notice; air traffic is suspended also until at least 15 June.\\nMost foreign nationals are barred from entering the country at least until 12 June. Citizens and foreigners with residency permits are allowed to return from abroad but will be required to quarantine for 14 days. They are required to provide the local authorities with information about their place of stay or address and a contact telephone number.\\nThe quarantine rules no longer apply to people crossing the border with; Czech Republic, Denmark, Germany, Lithuania, Slovakia and Sweden. However, they must prove to the Border Guard Officers that their travel is for work or education related activities.\\nArriving diplomats, transiting truck drivers and residents who regularly cross the border for working or studying in neighbouring countries no longer need to quarantine upon return to Poland.\\n\\nInternal restrictions:\\nDomestic flights are suspended until 31 May and national rail routes are operating a reduced timetable.\\nSecondary schools and universities are closed until 24 May. Cinemas, operas, theatres, museums and other cultural venues are closed until further notice. Shopping malls are still operating but with reduced services. Grocery shops, pharmacies and banks remain open. Restaurants, pubs, night clubs and casinos are closed.\\nGatherings of more than two people are prohibited (a maximum of five for Holy Mass and funerals).\\nPublic transport is limited to 50% of available seating to maintain appropriate distance between commuters.\\nRestrictions:\\npeople under 18 must not leave the house without a parent or guardian;\\nparks, boulevards and beaches remain closed;\\nhotels and accommodations are closed;\\nthe number of people in stores and the post office is restricted to two-three people;\\npeople living with someone quarantined because they have returned from abroad of have been in contact with an infected person must also self-quarantine;\\n\\xB7violating these orders is a criminal offence subject to fines.\\nWearing a facemask or scarf in public is compulsory; those who do not comply will face heavy fines.\"},PT:{info:\"Between April 9 and April 13, all non-permitted domestic travel is banned except within the municipality where you reside or to commute to work.\\nUnder the State of Emergency decree the Portuguese Government can impose obligatory quarantine for individuals infected with COVID-19 and individuals deemed by health officials to require special medical surveillance.\\nBetween April 3 and April 17, all non-permitted travel between municipalities on Sao Miguel island in the Azores is banned.\\nA mandatory 14-day self-quarantine has been announced by regional health officials for all international entry to Algarve, and all travel to Vila Real.\\nAll new arrivals to the Azores and Madeira must agree to a mandatory quarantine for 14 days before being admitted, no matter the expected duration of travel on the islands. Mandatory quarantine in the Azores and Madeira takes place in hotels pre-determined by the respective autonomous governments.  This is applicable to all travelers, whether they are visitors or residents or citizens.\",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pt.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government starts second phase of lifting COVID-19 restrictions on 18 May (Xinhua, 18.05.2020)\\n\\nInternational restrictions:\\nAll land, air and maritime connections with Spain are suspended until at least 15 June. Overland travel into Portugal will be possible only for Portuguese citizens, residents, and workers. Border crossing will only be possible in nine localities (Valen\\xE7a, Quintanilha, Vilaverde (Norte region), Vilar Formoso, Termas de Monfortinho, (Centro region), Marv\\xE3o, Caia, Vilaverde de Ficalho (Alentejo region), Vila Real de Santo Ant\\xF3nio (Algarve region).\\nAir borders with Italy remain closed until 20 May, excluding for state aircraft, cargo, humanitarian or emergency flights.\\nAll international flights are suspended, except with Canada, the EU, Iceland, Liechtenstein, Norway, South Africa, Switzerland, the UK, USA and Venezuela, and all Portuguese speaking countries, until 15 June.\\nTravellers coming from Bulgaria, Croatia, Cyprus, Ireland and Romania (which do not implement the Schengen regulations) until 15 June are only allowed to enter Portugal for professional reasons, family or force majeure reasons, or for the return of national citizens and holders of residence permits from the respective countries.\\nAccess to Portuguese airports is allowed only to passengers holding proof of departure on the same day. Tickets cannot be bought within the airport\\u2019s Airlines booths.\\nPassengers of cruise ships who are not Portuguese nationals or residents are not allowed to disembark in Portuguese ports. Passengers may only disembark to return to their country of origin and once they have completed a 14-day self-quarantine on board, starting from the day the vessel entered Portuguese territorial waters. Cruise ships and yachts continue to not be permitted to dock at any of the ports in the Azores, Madeira or Porto Santo.\\nAll citizens arriving into Faro district and to Madeira and the Azores regional governments from abroad must undergo a 14-day self-quarantine.\\nAll travellers to Madeira and the Azores are obliged to complete and submit an online document 24-48 hours before arrival (for Madeira, for the Azores).\\nInternal restrictions:\\nMost non-essential establishments remain closed.\\nGatherings of more than five people are banned, except for people in the same household.\\nAll foreigners with pending residency applications will be treated as permanent residents until at least 1 July.\\n\\nRelaxation of restrictions: \\nA state of emergency ended on 2 May.\\nRestrictions will be lifted incrementally every 15 days starting on 4 May.\\nPublic buses will resume operations, but the use of face masks on public transport will be mandatory.\\nA number of non-essential establishments, including small neighbourhood shops, hairdressers, customer service counters and tax offices, will be allowed to reopen. Individual sports outside will also be able to resume.\\nFrom 18 May more non-essential establishments, including some schools, bigger stores, restaurants, museums and coffee shops, will be allowed to reopen at reduced capacity.\\nFrom the last weekend of May, restrictions on religious gatherings may be lifted and Premier League football games may be able to be played behind closed doors.\"},PR:{info:\"14 day quarantine\",updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nEntry is prohibited for all foreign travellers until further notice. There are no restrictions for outbound travel.\\n\\nInternal restrictions:\\nAn island-wide lockdown is in place until 25 May, during which a nightly curfew is in effect from 19.00 to 05.00. Outdoor exercises are only permissible from 05.00 to 15.00. Non-essential businesses, excluding recreational, leisure and religious establishments, are allowed to reopen, but they need to adhere to lockdown hours. Facemasks are required to be worn inside business premises.\"},QA:{info:\"The Government decided to suspend entry for citizens of Italy, France, Germany and Spain, as well as all others traveling from these countries. Individuals intending to travel from these four countries who are in possession of a Qatar residence permit are excluded from this decision, provided that they stay in a quarantine facility for 14 days as per the local procedures. (MOPH)\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://www.moph.gov.qa/english/Pages/Coronavirus2019.aspx\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll inbound flights to Qatar remain suspended until further notice with the exception of transit and cargo flights. Travellers with all visas (residency, business, tourist) are not allowed to enter the country. National carrier Qatar Airways is still operating but only transit passengers with connecting flights can board. The ban does not apply to Qatari citizens and holders of permanent residency permits, though they may be asked to self-quarantine for 14 days.\\n\\nFrom 17 May, all individuals are required to wear face masks when leaving their homes, except for when driving alone in their cars.\\nFrom 19 May, the number of people allowed in a private vehicle at a time is limited to two; exceptions are given to taxis and limousines and those driving with a private family driver, which are allowed up to three passengers. Public buses are only allowed to operate at 50% capacity.\\nAll forms of public gatherings \\u2013 including religious events \\u2013 are banned until further notice, and sporting activities are limited to areas close to one\\u2019s residence.\\n\\nFailure to abide by these measures may result in legal repercussions. The security forces are conducting mobile patrols and have established checkpoints to ensure compliance.\\nIn addition, effective 22 May until further notice, all citizens and residents are required to download the \\u2018Exteraz\\u2019 mobile application, which has been introduced by the government for COVID-19 tracking purposes.\\nAll shops and commercial activities are closed from 19-30 May, with the exception of supermarkets, pharmacies and restaurants providing delivery services.\\nDoha Industrial Area reopened on 6 May, visitors will require a permit obtained through the local authorities.\"},KR:{info:\"The Republic of Korea will require a mandatory 14-day self-quarantine for all travelers entering Korea at either their place of residence or a government-designated isolation facility, effective April 1, 2020 at 00:00 hours. This mandatory self-quarantine will apply to everyone, regardless of nationality, except the short-term foreign visitors who are issued with an \\u201CIsolation Exemption Certificate\\u201D from the ROK Embassy or Consulate General prior to the trip.   \",updated_at:\"2020-05-21\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"South Korea's major airlines are cautiously preparing to restart a handful of international flights from June, starting with countries which have not imposed entry bans, but only quarantine measures. (TTG Asia, 21.05.2020) \\n\\nInternational restrictions:\\nAll visas issued on or before 5 April are invalidated. Temporary suspension of visa-free entry for foreigners from countries that imposed entry restrictions on Korean nationals. This measure will be applied to countries with an entry ban on South Korean nationals, including 56 countries that have signed a visa-free agreement with South Korea and 34 countries that are allowed to enter Korea without visas. All passengers arriving in South Korea from overseas will be required to undergo two weeks of self-isolation.Those without local residence in South Korea will be quarantined at a government facility with a cost of approximately KRW100,000 per day. Mandatory testing of COVID-19 and 14-day quarantine is required for travellers (regardless of nationality) arriving from Europe. Travellers who hold A-1 visa, A-3 agreement visa, diplomats and their families are exempt from the 14-day mandatory self-isolation. Exemptions can also be made for travellers who receive permission from a South Korean Embassy to travel for the purposes of business, humanitarian work or participation in an academic forum. A fast-track procedure has been introduced to facilitate business travel with China. Business travellers from China need to submit a document certifying a negative COVID-19 test result within 72 hours before departure and satisfy the disease control requirement. A quarantine exemption document will then be issued by the Korean authorities. Once the traveller undergoes another COVID-19 testing upon arrival in South Korea with a negative test result, the person can enter the country and engage in business activities while under active surveillance. Travellers with symptoms of COVID-19 will be escorted to an isolation facility for further COVID-19 testing (travellers without symptoms will also be tested for COVID-19 in a separate facility). If test results are positive, patients will be escorted to designated hospitals or other medical facilities for treatment. All violators (incl. foreigners) of the self-quarantine requirement will be punished by relevant statutory law. International travellers can transit if they do not clear immigration and stay within the transit area for up to 24 hours. Visitors who have been in Hubei province (China) in the past 14 days are not allowed to transit or enter South Korea. Nationals of China with a passport issued in Hubei province are not allowed to enter South Korea. Korean visas issued by the Wuhan consulate in Hubei province are invalidated. Suspension of all visa-free entry to Chinese nationals and foreign nationals who are traveling from China. Airlines are required to check the body temperature of all travellers to South Korea prior to departure. Travellers with a body temperature higher than 37.5 degrees Celsius will be denied entry. All travellers are advised to use private vehicles to transit to their place of residence from the airport. Those who do not have access to private vehicles are to use designated buses and trains allocated for these travellers. Visas issued to nationals of Japan (at Korean diplomatic missions in Japan) before 9 March 2020 are invalidated and visa exemption has been suspended. This does not apply to visas issued outside Japan; such visas remain valid. This also does not apply to airline crew. Nationals of Japan who do not hold a Korean visa issued on or after 9 March 2020 will not be allowed entry.\\nVisa-free entry to Jeju Island is temporarily suspended to all foreign nationals.\\n\\nInternal restrictions:\\nThe country\\u2019s COVID-19 alert level has remained at RED (the highest on a four-tier scale) since 23 February. The country has officially shifted from \\u2018social distancing\\u2019 to \\u2018everyday life quarantine\\u2019 from 6 May. Businesses are allowed to resume at facilities in phases and gatherings are allowed to take place, following disinfection guidelines. After a new cluster was found on 8 May, all bars, clubs have been advised to remain closed until 8 June. Even under \\u2018everyday life quarantine\\u2019, Daegu will have more stringent measures, such as mandating masks in public transport from 13 May. Earlier, the authorities have allowed religious organisations and outdoor public recreational facilities to reopen on condition that social distancing rules are adhered to. Schools will resume in a phased manner starting from 13 May. The capital Seoul has ordered bars, clubs and other nightlife establishments to temporarily close until further notice. Additionally, subway passengers in Seoul travelling during peak hours will also require to wear masks. In Gyeonggi province, the local authorities have also banned all entertainment facilities from hosting crowds and announced that non-compliance will face penalties.\\n\"},MD:{info:\"\\u2022Moldova also requires all travelers who have been in a Level 3 country to self-isolate for 14 days, consistent with CDC recommendations.\\n\\u2022Moldova has asked people who may had contact an infected person to self-isolate at home. \\n\",updated_at:\"2020-05-19\",source:\"https://www.osac.gov/Content/Report/0803d68f-4a3c-47f5-a926-18428cfc10d9\\nhttps://md.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll international flights as well as international rail links are banned, although the authorities are expected to resume some flights on a country-by-country basis.\\nEntry to Moldova is restricted to Moldovan citizens until 30 June with the exception of passengers in transit, permanent residents, holders of certain visa types and members of diplomatic missions.\\n\\nThe Moldovan border is still closed, and Moldova is only allowing entry to Moldovan citizens and residents, accredited diplomats, and those with pre-coordinated transit permits, including cargo trucks. \\n\\nAll incoming travellers are required to self-isolate for 14 days.\\nEntry into the separatist region of Transnistria will be refused to all nationals of a country affected by COVID-19.\\nBorders with Romania and Ukraine are closed to passenger traffic as well as foreigners. Moldovan citizens may, however, cross into the country. Criva-Mamaliga and Mirnoe-Tabaki crossings with Ukraine have suspended activities. Otaci-Moghileov-Podolsc, Palanca-Maiaki-Udobnoe, Tudora-Starokazacie and Giurgiule\\u015Fti-Renipassings will remain open.\\n\\nInternal restrictions:\\nThe army will be deployed to enforce restriction measures. Carrying official identification papers is mandatory.\\nThe towns of Karakhasani, Stefan Voda and Talmaza have been placed under quarantine.\\nPublic transport remains partially suspended in the major towns of Chisinau and Balti.\\n\\nRelaxation of restrictions\\nThe state of emergency has been lifted.\\nThe quarantine on Glodeni and in Soroca has been lifted.\\nFood and beverage stores have reopened and are allowed to serve take-away.\\nPublic parks have reopened and gatherings of a maximum of three people are allowed.\\nUrban public transport has resumed.\"},RE:{info:\"All travellers arriving in La Reunion will undergo a mandatory 14-day quarantine. \",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nOnly French nationals and residents are authorised to enter (see France).\\nAll international flights are suspended, except for three flights per week between La Reunion and Paris.\\nAll travellers arriving in La Reunion will undergo a mandatory 14-day quarantine at home or at a dedicated facility.\\n\\nInternal restrictions:\\nDespite Level 3 on the mainland (see France), La Reunion department has implemented several measures but remains at Level 2.\\nGatherings of more than ten people remain prohibited.\\nWearing of masks is mandatory in public transports and schools.\\nAll shops must be closed by 19.00.\\nRestaurants, bars and cinemas will remain closed until further notice.\\n\\nRelaxation of restrictions:\\nSince 11 May, several lockdown measures have been eased on the island. (National authorities will review those on 1 June):\\n- all beaches, parks and gardens are open only for exercise (swimming or general sport) individually once a day;\\n- small gatherings of ten people are allowed in parks and reserved areas close to the beaches;\\n- the use of public transport is allowed for urban movement\\n- museums, libraries, cemeteries, hotels, small shops and open-air markets will be allowed to reopen, provided social distancing and sanitising measures are respected\\nSchools are set to gradually reopen on 14 May, starting with nurseries and primary schools.\\n\"},RO:{info:\"All travelers arriving in Romania must self-isolate at home for 14 days. Travelers who do not respect the home isolation requirements will be placed in state quarantine at their expense.\",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.osac.gov/Content/Report/0803d68f-4a3c-47f5-a926-18428cfc10d9\\nhttps://hungarytoday.hu/coronavirus-hungary-romania-border-commuters/\\nhttps://www.romania-insider.com/ro-italy-spain-flights-prolonged-suspension-march-2020\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nNon-Romanian citizens are prohibited from entering the country except as part of a well-defined transit itinerary, with some exceptions, including diplomats, residents, immediate family members, or for essential work reasons.\\nCommercial flights remain limited under the 30 days of \\u2018state of alert\\u2019 which started on 15 May. Flights to and from countries in the \\u201Cred zone\\u201D of epidemiological risk, currently including Austria, Belgium, France, Germany, Iran, Italy, the Netherlands, Spain, Switzerland, Turkey, the UK and the USA, will remain suspended until further notice.\\nInternational bus travel to Italy, France, Germany, Spain and Turkey is suspended until 1 June.\\nTravellers from any other country will have to undergo home self-isolation at a single address communicated to authorities upon entering the country. They will be escorted by security forces from point of entry to this location and checked upon on a daily basis. Violation of home self-confinement leads to automatic isolation in a state regulated accommodation for 14 days and billing of fees to the individual, atop the potential fines and jail time.\\nThe measure does not apply to cargo, mail and humanitarian flights, or to flights providing emergency medical services and to non-commercial technical landings. Exceptions also include passenger flights transporting agricultural workers depending on inter-state diplomatic agreements, including the United Kingdom, Germany and France. Exceptions also apply for truck drivers and marriners transporting cargo.\\nThe authorities have closed most road borders with Bulgaria, Hungary, Moldova and Ukraine where only citizens and the exceptions aforementioned will be allowed entry and escorted by security forces to their in-country isolation destination.\\n\\nInternal restrictions:\\nThe state of emergency has been replaced with a state of alert.\\nGatherings larger than three people are banned.\\n\\nRelaxation of restrictions:\\nA \\u201Cstate of alert\\u201D is in place until 14 June under which restrictions will be progressively relaxed.\\nAfter this date, local movement and employment can resume and it will not be necessary to declare travel beforehand.\\nFace masks are mandatory in commercial spaces, public transport, workplaces and other enclosed public spaces.\\nThe relaxation of measures will happen in phases which will likely be two weeks apart.\\nHotels and beauty salons can reopen with a set of rules. Churches will be allowed to perform services outdoors. Shops with a direct outdoor entrance will be allowed to reopen.\\nParks and cultural landmarks are set to reopen. In Bucharest, all parks, public gardens and the zoo are now open.\\nSchools may reopen from 2 June.\"},RU:{info:\"As of March 16, travelers also arriving to Moscow from China, Iran, South Korea, Italy, France, Germany, Spain, and the United Kingdom are required to self-quarantine for 14 days. Russian nationals returning on repatriation flights will be required to stay under self-imposed quarantine for 14 days. While these quarantine measures are an obligation in Moscow, they are only a recommendation for travellers arriving in St. Petersburg.\",updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://ru.usembassy.gov/covid-19-information/\\nhttps://www.airport-technology.com/news/covid-19-sheremetyevo-airport-terminal-d/\",certification_status:\"COVID-19 negative certification subject to special conditions (when travelling to China)\",restrictions:\"International restrictions:\\nAll international flights, including charter flights and transit flights have been suspended. Exceptions will be made for diplomatic/humanitarian flights and government authorised aircraft and special flights repatriating Russian citizens.\\nAn entry ban for foreign travellers is in place until further notice.\\nCategories exempt from the restrictions include diplomatic staff, international truck drivers, travellers with private visas issued under special circumstances by the Russian Foreign Ministry, family members of Russian citizens, certain groups of citizens from countries with which Russia has a visa waiver agreement and specialists who conduct maintenance on imported equipment. CIS citizens as well as those who live in the breakaway separatist regions of Abkhazia and South Ossetia are exempted from the travel ban.\\nAll of the country's borders remain closed and most international rail services have been suspended until further notice, including trains to Kaliningrad region.\\nRussian nationals returning on repatriation flights will be required to stay under self-imposed quarantine for 14 days at their final destination.\\nRussian nationals who hold permanent residency in another country or dual citizenship are allowed to leave the country.\\n\\nInternal restrictions:\\nWhile no federal restrictions on domestic travel have been introduced, a vast number of flights and train services have been cancelled. Some airports have experienced temporary short-notice closures, while Sochi International Airport (AER) and Krasnodar International Airport (KRR, both Krasnodar kray) are operating reduced hours.\\nSome regional airports, including Kazan International Airport (KZN) and Stavropol International Airport (STW) have introduced special permit systems for residents planning to undertake domestic travel.\\nSome regional authorities require all passengers travelling from Moscow and St Petersburg to undergo a 14-day quarantine in a medical facility.\\nHigh-alert level and \\u2018stay-at-home\\u2019 orders are in place until 31 May in Moscow and St Petersburg.\\nThe Republic of Chechnya has closed its borders and suspended all land and air travel. A curfew has been implemented from 20.00 to 08.00 (local time).\\nAuthorities have approved legislation imposing severe punishment \\u2014 including up to five years in prison \\u2014 for people convicted of spreading false information about the coronavirus. The legislation also imposes punishments for people breaking quarantine rules, including up to seven years in prison.\\nAll residents and visitors, including transit passengers, of Moscow and Moscow region are required to obtain digital permits for movement by private vehicle, taxi and all forms of public transport. The restriction does not apply for essential movement by foot.\\nIn St Petersburg and Moscow, however, the wearing of face masks and gloves is compulsory in all public areas from 12 May.\"},RW:{info:\"Rwandan citizens and residents returning to the country are subject to a mandatory 14-day quarantine at designated locations at their own expense.\",updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://rw.usembassy.gov/health-alert-covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Flights to Kigali International Airport (KGL) are suspended.\\n2. Nationals and residents of Rwanda will be subject to a mandatory 14-day quarantine at designated locations.\\n\\nInternational restrictions:\\nAll its borders are closed except for goods, cargo and returning citizens and permanent residents, who will have to undergo a 14-day quarantine at their own cost at designated locations upon their return. Additional screening procedures are in place for both COVID-19 and Ebola at all entry points. Exit screening is also in place for all departing travellers. Any travellers exhibiting a symptom associated with COVID-19 will be prevented from leaving the country and moved to isolation for testing.\\nAll commercial inbound and outbound flights, including with RwandaAir, are suspended. Cargo and emergency flights will continue to operate normally.\\nBurundi-bound cargo trucks from Kenya and Uganda are not allowed to enter the country.\\n\\nInternal restrictions:\\nMovement restrictions were relaxed on 4 May. However, a nightly curfew between 21.00 to 05.00 curfew is in effect at least until 1 June. Public and private businesses are allowed to reopen with essential staff while other employees continue working from home.\\nThe wearing of face masks remains mandatory for all citizens when going outside and also at home when social distancing is not possible.\\nAll public gatherings remain banned countrywide.\\nMarkets, hotels and restaurants have reopened with limited working hours from 4 May. Places of worship, schools, bars, gyms and recreation centres will remain closed.\\nPublic and private transport within the same province resumed on 4 May, but travel between different provinces and Kigali remains prohibited except for medical reasons or essential services, such as transport of food and goods.\\nMotos are not permitted to carry passengers but may offer delivery services.\\nThe next revision of these restrictions is scheduled for 19 May.\"},ANT:{info:\"Passengers traveling from locations with widespread sustained transmission of COVID-19 must ensure they isolate themselves (in self-quarantine) for 14 days upon arrival.\",updated_at:\"2020-04-16\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://cw.usconsulate.gov/news-events/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers arriving from Austria, Belgium, Bulgaria, Canada, China (People's Rep.), Colombia, Croatia, Cyprus, Czechia, Denmark, Dominican Rep., Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Iran, Ireland (Rep.), Italy, Korea (Rep.), Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Netherlands, Norway, Poland, Portugal, Romania, Slovakia, Slovenia, Spain, Sweden, Switzerland, United Kingdom or USA are not allowed to enter Bonaire, St. Eustatius and Saba.\\n- This does not apply to medical staff and patients who are transferred in the interest of public health on Bonaire, St. Eustatius and Saba.\"},BL:{info:null,updated_at:\"2020-05-06\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\n\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. Passengers are not allowed to enter the French West Indies.\\n- This does not apply to passengers who reside in the French West Indies.\\n- This does not apply to passengers traveling for urgent health reasons.\\n- This does not apply to passengers traveling for imperative business reasons.\\n2. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting the French West Indies. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr\\n3. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (Covid-19).\\n- This does not apply to airline crew.\"},SH:{info:null,updated_at:\"2020-03-29\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Passengers are not allowed to enter St. Helena. \\n- This does not apply to passengers who reside in St. Helena.\\n- This does not apply to passengers with a long-term permit.\\n- This does not apply to temporary contractors.\\n- This does not apply to sponsor Technical Cooperation Officers.\\n- This does not apply to passengers to Ascension.\\n- This does not apply to persons authorized in advance by the Governor.\\n2. Self-isolation for 14 days is mandatory when entering St. Helena.\"},KN:{info:\"Persons coming from or who have transited China will be subject to screening at the port of entry and may be detained and taken to a health facility for quarantine or have movement restricted if they are found to be symptomatic upon completion of a health screening.\",updated_at:\"2020-05-10\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nGov.uk\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to St. Kitts and Nevis are suspended. Airports in St. Kitts and Nevis are closed. \\n\\nPersons coming from or who have transited China will be subject to screening at the port of entry and may be detained and taken to a health facility for quarantine or have movement restricted if they are found to be symptomatic upon completion of a health screening. \\n\\nInternal restrictions:  \\nA state of emergency is in place until 30 September.\\n11-15 May: People can go out for essential purposes from 20.00 to 05.00 (local time).\\n18-20 May: People can go out for essential purposes from 20.00 to 05.00 (local time).\\nThe nightly curfew has changed to 20.00 to 05.00 and beaches are open from 05.30 to 09.00 (local time) for exercise only. \\nNon-essential businesses are closed, and essential businesses that remain open are required to maintain 6-feet between all persons inside and outside the business.\"},LC:{info:\"Any national returning to St Lucia with a travel history to any of the restricted countries will be quarantined for 14 days. \\nTravellers found to have higher-than-expected temperatures will undergo additional screening. \\nPersons who travel from the US within the last 14 days who develop respiratory signs and symptoms will be isolated and tested for Covid19. \",updated_at:\"2020-05-19\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nNationals of St. Lucia who have been in China, Hong Kong (SAR China), Italy, Japan, Singapore or South Korea in the past 14 days will be subject to immediate quarantine for a maximum of 14 days. Travellers found to have higher-than-expected temperatures will be receiving additional screening.\\nAirports and seaports remain closed to commercial and private flights and vessels.\\nTravel restrictions will begin to be lifted on 4 June for visitors arriving from the US only.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\nUS citizens who are attempting to return to the US from the Eastern Caribbean and need assistance should complete the provided form for each person wishing to return to the US.\\n\\nConditions and internal restrictions:\\nNo airlines have announced reductions in flights to St Lucia.\\nEstablished COVID-19 hotline to address concerns and questions about COVID-19: number is 311.\\nCurfew extended from 21.00 to 05.00 until 31 May.\\nStay-at-home imposed.\\nNon-essential businesses are allowed to operate outside curfew hours.\"},MF:{info:null,updated_at:\"2020-05-11\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://cw.usconsulate.gov/news-events/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. Passengers are not allowed to enter the French West Indies.\\n- This does not apply to passengers who reside in the French West Indies.\\n- This does not apply to passengers traveling for urgent health reasons.\\n- This does not apply to passengers traveling for imperative business reasons.\\n2. A completed International Travel Certificate must be presented prior to boarding and to Immigration upon arrival or when transiting the French West Indies. The certificate must be obtained before departure via the French consular offices abroad or online at https://www.interieur.gouv.fr\\n3. Passengers must go through a medical examination upon arrival and are subject to quarantine for a period of 14 days.\\n- This does not apply to healthcare professionals related to Coronavirus (Covid-19).\\n- This does not apply to airline crew. \\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\nUS citizens who are attempting to return to the US from the Eastern Caribbean and need assistance should complete the provided form for each person wishing to return to the US.\\n\\nInternal restrictions:\\nGradual reopening of non-essential businesses begins 11 May, though restaurants remain closed to dining in. Schools will begin a phased reopening varying by grade level beginning 11 May and 18 May.\"},VC:{info:null,updated_at:\"2020-05-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nTravellers who have been to China, Hong Kong (China SAR), Italy, Japan, Macao (China SAR), Singapore or South Korea will be quarantined for 14 days.\\nAll international flights into Argyle International Airport have been cancelled indefinitely.\\nAmerican Airlines has suspended flights between St. Vincent and Miami.\\nAir Canada has suspended all flights until further notice.\\nAmerican Airlines has suspended flights between St. Vincent and Miami.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country.\\nUS citizens who are attempting to return to the US from the Eastern Caribbean and need assistance should complete the provided form for each person wishing to return to the US.\\n\"},WS:{info:\"Samoan citizens and residents who arrive in Samoa are subject to a mandatory 14-day quarantine period at a designated hospital.\",updated_at:\"2020-05-14\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://ws.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nThe border is closed except for returning Samoan citizens and residents.\\nArriving citizens and residents must show that a COVID-19 test has been done within three days before departure for Samoa; and confirmation of completion of a 14 day quarantine period, before departure for Samoa. They will be subject to a further 14-day quarantine period upon arrival.\\nFlights between Samoa and Australia are suspended until further notice.\\n\\nSamoa has extended its State of Emergency until at least 31 May. \\n\\nInternal restrictions:\\nSamoa has extended its State of Emergency until at least 7 June.\\nPublic gatherings of five or more people except for church services are prohibited.\\nPublic bus services have resumed as long as they do not take more than 20 passengers. Ferry services have partially resumed between Upolo and Savaii. Dining in restaurants may continue. For all the above, two-metre social distancing rules must be observed. Markets and supermarkets have also opened between 06.00 and 18.00, extending their operating hours by two hours each day, but they may not be open on Sundays.\\nThe government plans to gradually relax ongoing in-country restrictions. Schools have reopened.\\nTravel to the island of Savai'i has been limited to just three days a week.\\n\"},ST:{info:\"Nationals and non-national residents who return to the country will be subject to mandatory home quarantine accompanied by health agents and police forces upon arrival. \",updated_at:\"2020-05-17\",source:\"https://ga.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nInbound and outbound commercial and charter passenger flights are suspended until further notice, Cargo flights continue operating normally. Nationals and non-national residents who return to the country are subject to mandatory home quarantine accompanied by health agents and police forces upon arrival. The docking of cruise ships at the country\\u2019s ports is also suspended. The suspension of all sea and air connections include movements between all the islands of Sao Tome and Principe - except for the health emergency services.\\nAll travellers will be checked upon arrival and authorities will quarantine any traveller presenting fever or similar infection symptoms.\\n\\nInternal restrictions:\\nA state of emergency is in place until 31 May.\\nAir and sea traffic suspension applies to movements in between all islands of Sao Tome and Principe (see above).\\nAll visits to patients admitted to hospitals, health centres, nursing homes and penitentiary are suspended.\\nCommercial activities (stores and supermarkets) are open from 08.30 until 17.00. Municipal and district markets remain open only until 16.00. Trading on the pavements is prohibited.\\nRestaurants, bars, cafes etc are closed; home delivery services are still in operation.\\nPublic transport, including taxis, continue to operate but with a limited capacity (half of its legal capacity).\\nGatherings with more than ten people are prohibited.\"},SA:{info:\"Travelers arriving from outside Saudi Arabia, including Saudi citizens and residents, will be placed in health isolation for 14 days following their arrival.\",updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://sa.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government enforces 24-hour curfew during five-day Eid al-Fitr  holiday (Reuters, 12.05.2020),  Government allows entry into, exit from Qatif province from 30 April (Reuters, 29.04.2020)\\n1. Passengers are not allowed to enter Saudi Arabia.\\n- This does not apply to nationals of Saudi Arabia.\\n2. Airline crew are subject to quarantine for 2 weeks upon arrival if they passed through the passport control in a country with an ongoing Coronavirus (COVID-19) outbreak in the past 2 weeks.\\n\\nThe suspension of all international flights to/from Saudi Arabia is extended until further notice.\\nAll land crossings remain restricted to commercial trucks only.\\nSaudi citizens and residents are NOT exempted.\\nThe Saudi authorities have introduced an online registration system to facilitate the repatriation of expatriates holding exit/re-entry or final exit visas to their home countries. Approved residents will receive an SMS with available dates and will be able to purchase flight tickets. Departures will take place through Riyadh-based King Khalid International Airport, Jeddah-based King Abdulaziz International Airport and Dammam-based King Fahd International Airport.\\n\\nInternal restrictions: \\nSaudi Arabia will enforce a 24-hour curfew across the kingdom during a 5-day holiday to celebrate Muslim Eid al-Fitr which marks the end of the holy month of Ramadan to stem the spread of coronavirus. Until then economic activities will remain open and people can move freely between 9 a.m. local time (0600 GMT) and 5 p.m., excluding Mecca which remains under full curfew. (Reuters, 13.05.2020) \\nFrom 14 to 22 May, economic and commercial activities will continue as normal. People can go out for essentials from 09.00 to 17.00, except for Mecca and other areas under a full lockdown.\\nA 24-hour curfew is in effect in Mecca and Medina and seven neighbourhoods in Jeddah: Al-Mahjar, Al-Qurayyat, Ghulail, Kilo 13, Kilo 14 North, Kilo 14 South and Petromin until further notice. Until 13 May, the 24-hour curfew the capital Riyadh, Tabuk (Tabuk province), rest of Jeddah, Taif (both Mecca province), Dammam, Dhahran, Qatif, Khobar (all Eastern province) and Hofuf will be reduced to 17.00 to 09.00. In cities and neighbourhoods under 24-hour lockdown only one adult from each household is allowed to leave their home to procure essentials such as food and medicine between 09.00 and 17.00 local time. Residents seeking to travel between provinces for humanitarian, emergency or exceptional circumstances can apply for permits through this online system. Exemptions apply to those in vital public and private sectors such as security, military and media. Those who work in health services are also excluded from the curfew.\"},SN:{info:\"No general quarantine policies are currently in effect.\",updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://sn.usembassy.gov/covid-19-information/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government announces easing restrictions on 12 May (VOA, 12.05.2020) \\nFlights to Senegal are suspended.\\n\\nThe country\\u2019s airspace is closed until 31 May. Cargo, evacuation and special authorised flights will continue to operate normally.\\nLand borders remain closed though this does not affect the movement of security force personnel, or the movement of goods vehicles in the case of Guinea and Mali.\\n\\nInternal restrictions: A state of emergency, with a countrywide curfew from 20.00 until 06.00, has been extended until 2 June. Domestic flights between Dakar\\u2019s Blaise Diagne International Airport and Ziguinchor will also operate normally. It is compulsory to wear protective masks when on public transport, in markets and in private and public offices. All road movement between regions is prohibited. Exceptions will be made for people seeking medical treatment, professional reasons and transportation of dead bodies. An authorisation document can be issued by the regional Governor or Pr\\xE9fet. According to the state of emergency law, authorities will have the power to regulate the movement of people, vehicles and goods in specific locations and at certain times. All public gatherings are prohibited and schools closed until 2 June. In Dakar, supermarkets are only allowed to be open on Mondays, Wednesdays and Fridays, while other shops are permitted to be open for business only on Tuesdays and Thursdays. All markets will be closed on weekends.\\n\\nRelaxation of restrictions: On 12 May, national authorities announced the easing of some lockdown measures, even if the state of emergency will still be in place until 2 June. This relaxation includes: - new countrywide curfew hours, which has been shortened to 21.00 to 05.00, from 20.00 to 06.00; - reopening of mosques for the holy month of Ramadan, while churches will be allowed to accept worshippers; - markets and small business will be allowed to reopen, but they will need to close for a day\\u2019s cleaning each week; - school will be allowed to reopen only at the beginning of June. \"},RS:{info:\"Government of Serbia has designated quarantine locations for COVID-19.\\nThe Clinics accepts patients with COVID-19 symptoms through a dedicated entrance separate from that used by other patients. If the test results are negative, the patient is released. If the tests results are positive, the patient will remain at the Clinic.\",updated_at:\"2020-05-20\",source:\"https://rs.usembassy.gov/covid-19-information/\\nhttps://www.osac.gov/Content/Report/adcc91bd-9754-4a47-8a42-1852cc2b095f\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government to lift all entry restrictions from 22 May (EX-YU Aviation News, 20.05.2020). Belgrade Nikola Tesla Airport has reopened for commercial traffic on 18 May. Wizz Air has become the first airline to resume commercial flights to the Serbian capital, (Exyuaviation, 18.05.2020) \\n\\nMost border crossings have been closed for passenger rail and road transport, apart from three border checkpoints with Hungary which reopened on 23 April to allow commuters only to cross the border for professional activities. Only Serbian citizens and foreigners with permanent or temporary residence permits will be allowed to enter. The restrictions do not apply for cargo transport. Foreign trucks and freight transport can only stay up to 12 hours in-country. \\n\\nInternational restrictions:\\nBelgrade Nikola Tesla Airport reopened for commercial traffic on 18 May. National carrier Air Serbia postponed the resumption of flights to 15 June. Most border crossings have been closed for passenger rail and road transport, apart from three border checkpoints with Hungary which reopened on 23 April to allow commuters only to cross the border for professional activities. Only Serbian citizens and foreigners with permanent or temporary residence permits will be allowed to enter. The restrictions do not apply for cargo transport. Foreign trucks and freight transport can only stay up to 12 hours in-country.\\n\\nInternal restrictions:\\nAll public transport has been temporarily suspended. All Serbian citizens as well as foreigners with a residence permit who entered the country after 14 March are obliged to extend their mandatory home self-isolation from 14 to 28 days. Gatherings of more than five people in a confined space have been banned. Gatherings of more than two people outdoors are prohibited. Facemasks are mandatory in public and from 30 April fines will be levied for those not wearing the protective gear.\\n\\nRelaxation of restrictions:\\nSome stores and shops have reopened, including dry cleaners, tailors, car mechanics, some retail stores such as bookstores, as well as outdoor farmers\\u2019 markets. Other businesses have resumed their operations as well - except those located in shopping centres - but must ensure health and safety measures can be respected. The government voted on 6 May on lifting the state of emergency and curfew. A decision on the reopening of restaurants, bars, shopping centres, spas is expected in the coming week - if social distancing measures can be respected. By 10 May public transport is expected to reopen in the cities Belgrade, Kragujevac and Nis; inter-municipal public transport will reopen during the same period. Gloves and facemasks are compulsory when using public transport. Air traffic is due to resume from 18 May. Air Serbia will resume operations to Frankfurt, London Heathrow, Vienna and Zurich. From 1 June the carrier will operate a more comprehensive schedule. Reopening of borders on 1 June for citizens of Albania, Bosnia and Herzegovina, Montenegro and North Macedonia. In addition, in a joint agreement with Bulgaria and Greece, all Serbian citizens travelling for business, family or humanitarian reasons will be allowed to enter both countries without facing the mandatory 14 days quarantine.\"},SC:{info:\"\\u2022All Seychellois citizens returning from ANY country will be subjected to additional health screening and placed under obligatory quarantine for at least 14 days upon arrival. Seychelles has two quarantine locations the Military Academy at Perseverance (a 10-minute drive from the capital Victoria) and the Berjaya Hotel at Beau Vallon.\",updated_at:\"2020-05-06\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Seychelles (SEZ) is closed.\\n- This does not apply to emergency diversions.\\n- This does not apply to special mission flights that are approved (MEDEVAC)\\n\\nInternal restrictions: The lockdown has been lifted since 4 May. Restrictions on non-essential services and movement can gradually resume, with all shops allowed to stay open until 20.00. Other businesses, such as restaurants, postal services, construction and tourism activities are also allowed to operate. Primary and secondary schools will reopen on 18 May. Social distancing measures and situational awareness should be observed at all times.\"},SL:{info:\"Currently quarantine is mandatory for any individuals who meet these requirements: \\n\\nAll travelers arriving at any point of entry from a country with less than 50 confirmed cases of COVID-19 will be documented. Follow up with these arrivals will continue for a period of 14 days by designated surveillance officers/contact tracers. \\nAll travelers arriving at any point of entry from a country with more than 50 confirmed cases of COVID-19, at any point in time, will have to be quarantined for a period of 14 days. \\nThe Government of Sierra Leone strongly recommends that individuals planning to visit Sierra Leone from a country with more than 200 confirmed cases of COVID-19 consider deferring their travel plans. If they must travel, they may visit, but will be quarantined as required. \\nAll travelers arriving with a Laissez-passer, emergency travel certificate, or ID card will be immediately taken to a quarantine facility for secondary screening. \\nSierra Leone will review the new quarantine policy regularly and it could change without advance notice based on the epidemiology of the outbreak. \",updated_at:\"2020-05-06\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://sl.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All commercial flights to/from Freetown International Airport are suspended until 19 June. Emergency flights are exempt from the above travel restrictions.\\nLand borders with Liberia and Guinea are closed until further notice. Essential cargo goods are exempt from this measure.\\nInternational ports remain operational for freight only. Ferry services to/from Freetown International Airport are suspended although occasional pirogues might still operate on a private basis.\\nMandatory quarantine for travellers from countries with more than 50 COVID-19 confirmed cases.\\n\\nInternal restrictions:\\nA state of emergency is in place until March 2021.\\nAll inter-district movement is prohibited indefinitely except for certified essential workers while an indefinite curfew is being observed between 21.00 and 06.00. Essential travellers and workers need to fill in an electronic pass before setting out. The army has been mobilised to enforce restrictions alongside police forces.\\nAll events gathering more than 100 people are banned.\\nIt is compulsory to wear a face mask when in public spaces.\\nA temporary lockdown was in place from 3-5 May nationwide. All other existing measures, including the ban on inter-district travel, were upheld during this time and remain in place after the lockdown.\"},SG:{info:\"A Quarantine Order is issued to quarantine or isolate an individual who is, or is suspected to be, a carrier or contact of an infectious disease. This is with the aim of limiting the spread of the virus in the community. It is a legal order under Singapore\\u2019s Infectious Diseases Act, with severe penalties for non-compliance. Quarantine may occur in the home but can also be served in dedicated Government Quarantine Facilities or hospitals, should the individual not have suitable accommodation in Singapore.\",updated_at:\"2020-05-21\",source:\"https://sg.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Authorities to allow travelers to transit through Changi Airport starting 2 June (Bangkok Post, 20.05.2020). Singapore will gradually reopen its borders with safeguards in place to allow Singaporeans to conduct essential activities abroad and for foreigners to enter and transit through the country. (CNA, 19.05.2020) \\n\\nInternational restrictions:\\nTransit through Changi Airport for foreign travellers will be allowed from 2 June.\\nAll Long-Term Pass holders, as well as those who have been granted IPA for LTVP, who are planning to enter or return to Singapore must obtain the Immigration & Checkpoints Authority permission before they commence their journey to Singapore. They can do so by submitting their application for entry to ICA_nCoV_request@ica.gov.sg.\\nAll travellers permitted to enter Singapore have to submit a health declaration form online before proceeding with immigration clearance.\\nAll short-term visitors are not permitted to enter or transit through Singapore. The Ministry of Manpower (MOM) will only allow work pass holders who provide essential services to return to the country. At the current juncture, all work pass holders intending to return to Singapore need to obtain MOM\\u2019s approval prior to undertaking the journey.\\nBritish Airways BA15 and BA16 flights from London to Sydney have a specific arrangement with Singapore allowing flights to land in Singapore for refuelling. Passengers will not be allowed to leave the plane during this process.\\nAll returning citizens, permanent residents and permitted work-pass holders are required to complete a 14-day self-isolation at a dedicated Stay-Home Notice (SHN) facility. They would be required to cover the costs of the stay. Exemptions may be allowed based on risk assessment of travel history, should the authorities face a higher number of returnees than expected. This is an expansion of prior SHN, targeting travellers from specific countries.\\nChinese nationals with a long-term pass in Singapore may only fly into Singapore if their final destination is Singapore - they may not transit to another location via Singapore. They will be quarantined upon entry to Singapore.\\nThe MOM will reject all new work pass applications for foreign workers from mainland China until further notice. Renewal applications for existing work pass holders will not be affected.\\nSingaporeans are advised to defer all travel abroad.\\n\\nInternal restrictions:\\nSingapore has implemented internal measures effective until at least 1 June, under which non-essential movements will be discouraged and most offices will be required to establish work-from-home arrangements. Markets and supermarkets, clinics, hospitals, utilities, transportation and key banking services will remain open. Food establishments will also remain open, but for takeaway services only. Key economic sectors that are considered strategic or linked to the global supply chain will also remain open, but with stringent distancing measures.\\nAccess to specific locations is limited based on dates of the month. While only four locations were targeted by these measures, targeted action will be taken to limit movement at popular areas, indicating similar restrictions may be imposed in the coming days. More details on the restrictions can be found on the National Environment Agency\\u2019s website.\\nSo as to assist in contact tracing, those visiting popular malls and supermarkets are required to provide their contact details, while all workers permitted to enter their workplaces during the circuit-breaker measures are required to use a digital check-in application, SafeEntry. More details on SafeEntry\\u2019s deployment at workplaces can be found at the relevant government website.\\nIt is mandatory for all to wear masks when in public, except those aged below two years old and those doing vigorous exercises. People who fail to do so will be fined, serious cases will be prosecuted in court.\\nAll social gatherings of any size in public and private spaces are banned. Any offence will be punishable by a fine and in certain cases imprisonment. More details of the restrictions are available here.\\nAll non-essential 'large-scale' events are cancelled.\\nEmployers have been advised to strengthen their business continuity plans, including allowing employees to work from home. Stricter control measures, such as restricting the number of visitors, can also be expected to be imposed at healthcare facilities and schools.\\nFrom 5 May, \\u2018circuit breaker\\u2019 measures have been gradually eased; selected work places are permitted to reopen at limited capacity, depending on their level of essentiality. Traditional Chinese Medicine shops were allowed to operate from 5 May. From 12 May onwards, selected businesses such as home-based food operations, food manufacturers, barbers and laundry services will be allowed to resume operations at a limited capacity. There are plans for students to return to school in small groups from 19 May, where graduating cohorts will be prioritised. Social distancing measures will remain in place.\"},SX:{info:\"Sint Maarten lifted its \\u201Cshelter-in-place\\u201D order on May 11, 2020, but social distancing protocols remain in effect when in public.\",updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nEntry is prohibited for all travellers, including residents. On 18 May, movement restrictions between French St. Martin and Dutch St. Maarten are lifted for the Dutch side. French St. Martin still requires a waiver for movement.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country. \\n\\nConditions and internal restrictions:\\nA nightly curfew is in effect from 21.00 to 06.00 until further notice. On 11 May, a four phase process to reopen business started under government guidelines. All businesses must ensure social distancing, use of masks among other measures.\"},SK:{info:\"Slovakia has\\u202Flimited entry for\\u202Fall but\\u202FSlovak citizens and\\u202Fresidents, it does not\\u202Fcurrently\\u202Flimit exits.\\u202FThose entering Slovakia must enter a mandatory 14 day quarantine in a government facility.\",updated_at:\"2020-05-20\",source:\"https://sk.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government allows reopening of hotels, other businesses as COVID-19 cases ease (Reuters, 06.05.2020)\\n\\nInternational restrictions:\\nSlovakia is under a state of emergency, and borders with all neighbouring countries are closed until further notice. A ban on inbound international flights is in place until at least until 28 May. All international bus and rail traffic has been suspended. Only Slovak citizens and permanent residents are allowed into the country and they are required to enter a 14-day self-quarantine.\\nAnyone entering Slovakia is required to isolate in state designated facilities for the time it takes to conduct a COVID-19 test. Following a negative result, these people must isolate at home for a total of 14 days.\\nNon-citizens can enter Slovakia for work reasons pending approval and a negative COVID-19 test. Request for an exemption document can be found here.\\nThe following border points with neighbouring countries have reopened for passage of Slovak citizens and residents only:\\nAustria: Bratislava - Jarovce - Kittsee (highway and old road; Bratislava - Petrzalka - Berg; Moravsky Svaty Jan\\nCzech Republic: Brodsk\\xE9 - B\\u0159eclav (dia\\u013Enica Drietom\\xE1 - Star\\xFD Hrozenkov); Svr\\u010Dinovec - Mosty u Jablunkov; Makov - Bila - Bumbalka; Horne Srnie - Brumov Bylnice; Drietoma - Stary Hrozenkov; Moravske Lieskove - Strani; Lysa pod Makytou - Strelna; Vrbovce - Velka nad Velickou; Holic - Hodonin; Skalica - Sudomerice (new road)\\nPoland: Vy\\u0161n\\xFD Kom\\xE1rnik - Barwinek; Trsten\\xE1 - Chy\\u017En\\xE9\\nHungary: Bratislava \\u010Cunovo - Rajka (highway); Medvedov - Vamosszabadi; \\u0160ahy - Parassapusta; Milhos\\u0165 \\u2013 Tornyosn\\xE9methy (R4 express dual-carriageway); Kom\\xE1rno - Kom\\xE1rom; Sturovo - Esztergom; Slovenske Darmoty - Balassagyarmat; Siatorska Bukovinka - Salgotarjan; Kral - Banreve; Slovenske Nove Mesto - Satoraljaujhely (border crossing)\\nUkraine: Vy\\u0161n\\xE9 nemeck\\xE9 - U\\u017Ehorod; Ub\\u013Ea - Maly Bereznyj\\n\\nInternal restrictions:\\nShoppers are required to cover their mouth and nose upon entering a supermarket.\\nAll schools and universities are closed until 1 June.\\nPublic transport is operating according to a reduced time table; travellers must wear a mask or otherwise cover their mouth and nose when using public transport, entering shops and offices. Taxi services are allowed to carry food or goods to and from individuals but they are not allowed to carry people.\\n\\nRelaxation of restrictions:\\nFrom 21 May, travel to Austria, Croatia, Czech Republic, Germany, Hungary, Poland, Slovenia and Switzerland is allowed for a maximum of 24 hours.\"},SI:{info:\"All people entering Slovenia from abroad must have evidence that they have a residence (or a location agreed with the civil defense authorities) where they can self-quarantine for one week.  After one week they should be tested for the coronavirus.  If a person declines to be tested after a seven-day quarantine, or if a test cannot be performed, the quarantine will be automatically extended for one week.  Those  who do not have an appropriate place to stay during the two-week quarantine will notify border police and the Civil Protection Service will find a suitable facility.\",updated_at:\"2020-05-21\",source:\"https://si.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"The first passenger flights to and from Slovenia are expected to resume on May 26. (Reuters, 18.05.2020) Hungarian, Slovenian Governments agree on gradual reopening of the border by 1 June (Reuters, 18.05.2020)\\n\\nInternational restrictions:\\nEU nationals (who have not been outside of the EU over the last 14 days) can travel freely to the country and are not subject to mandatory quarantine. They will just receive instructions issued by the National Institute of Public Health upon entry. Croatian citizens are allowed to cross the border without facing the mandatory quarantine. \\nEU residents are free to cross into the country from Austria, Croatia, Italy and Hungary at predetermined checkpoints. Persons who enter Slovenia and have a permanent or temporary residence in the European Union countries and have not left the EU for two weeks may follow instructions from the National Institute for Public Health on the implementation of measures to prevent the spread of COVID-19.\\nNon-EU nationals are subject to a 14-day quarantine, excluding diplomats, members of rescue and relief services, for attendance of funerals, lorry drivers and persons with certificates issued by the competent Slovenian authorities stating that they will provide essential services. Anyone who claims to have COVID-19 symptoms will be denied entry.\\nTourism to gradually resume from 18 May.\\nAirports in Slovenia reopened on 12 May. Several airlines have announced plans to resume flights to/from Ljubljana in early June.\\nThe country\\u2019s Koper and Piran ports will reopen.\\n \\nInternal restrictions:\\nCommuting for work reasons or movements for health emergencies are allowed. Access to public places is also prohibited. Public gatherings are banned. Public transport (trains and buses) is operating again at reduced schedules and limited seating capacity. facemasks are mandatory on public transport.\\nCitizens must wear a facemask when indoors.\\n \\n\\nRelaxation of restrictions\\nThe easing of restrictions starting on 18 May will be subject to a 14-day observation period before further potential easing measures in June. All shops can reopen on 18 May. Bars and restaurants will also be able to service customers indoors. Kindergartens and certain grades in primary and secondary will gradually reopen from 18 May. The number of pupils per classroom will remain restricted. A majority of sports activities, including training and competitions in team sports, are allowed to resume from 23 May. Tourist accommodation with less than 30 rooms will resume work. However, spas, discos and nightclubs will remain closed. Bars and restaurants can reopen if they serve outside and if they respect social distancing (1.5 meter between each customer) Minimum opening hours of food shops are set between 08.00 and 18.00 (except for shops that were already open for less than ten hours before 12 march.\"},SB:{info:\"People identified as persons of interest based on testing and screening measures may be denied entry, asked to undergo a 14-day self-quarantine, or may be subjected to government-imposed quarantine at a designated health facility, quarantine site, or hotel.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://pg.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll international flights to/from the Solomon Islands have been suspended until further notice, with exceptions to repatriation flights. The authorities have banned entry to all non-citizens. All returning Solomon Islands citizens and residents who have a travel history to any country with confirmed COVID-19 cases are subject to a 14-day mandatory quarantine. The authorities have also banned the movement of small craft vessels (less than ten metres) in the shared maritime border with Papua New Guinea.\\n \\nInternal restrictions:\\nA state of emergency is in place until at least July. The capital Honiara was declared an emergency zone and ordered to close all entertainment venues. Short-notice curfews such as those seen overnight on 11-12 April are likely to be imposed intermittently. Popular tourist location Aneityum island remains under lockdown due to a confirmed COVID-19 case.\"},SO:{info:\"\\u2022Somali authorities have established a quarantine unit at Aden Adde International Airport (AAIA) in Mogadishu to isolate passengers who demonstrate symptoms of coronavirus.\",updated_at:\"2020-04-30\",source:\"UNHAS\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All inbound and outbound commercial and cargo flights to the capital Mogadishu, the autonomous region of Puntland and self-declared republic of Somaliland remain suspended until further notice. Cargo flights delivering medicines and other humanitarian supplies are exempt. Internal flights in Somalia have been suspended indefinitely. UNHAS is currently required to submit daily requests in order to operate cargo flights.\\nSelf-declared republic of Somaliland announced its border to be closed for three weeks; any passengers arriving its airports from other parts of Somalia will be required to undergo mandatory self-isolation for 14 days. Commercial outbound flights between Hargeisa and Addis Ababa may still be available on a limited basis.\\nThe border in the Gedo region with Kenya and Ethiopia is closed.\\n\\nInternal restrictions: A night curfew from 20.00 to 05.00 (local time) is in effect in Mogadishu. Puntland has declared a dusk-to-dawn curfew. The security forces announced a lockdown in Mogadishu; it includes movement restrictions and the enforcement of social distancing.\"},ZA:{info:\"Travellers who arrived to South Africa from any of the banned countries after March 9, 2020, are required to self-quarantine for 14 days. \",updated_at:\"2020-05-02\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to South Africa are suspended.\\n- This does not apply to essential service flights (e.g. Medevac, emergency flights). \\n\\nInternational restrictions: A state of disaster is in place. South African airspace is closed to commercial airlines. All international and domestic flights suspended. South African Airways suspends all international and regional flights till 31 May, though the airline is operating limited repatriation charter flights sponsored by respective governments. There are infrared thermometers and health personnel at all ports of entry (air, sea, and land) for screening passengers.\\n\\nInternal restrictions: A national lockdown is in place indefinitely. The lockdown will henceforth be implemented according to a 5-tier scale based on the current risk assessment, with Level 5 being the highest level of restrictions. Level 4 is currently in place. A curfew from 20.00 to 05.00 is in place. Individuals can only leave their homes outside the curfew for essential and non-prohibited purposes, such to seek medical care, purchase necessary supplies (such as food and medicine) or collect social grants. They do not need a permission letter but will be asked to provide receipt as proof. Individuals who need to leave their residence for reasons other than the above, such as work, require a permission letter that states their movement is essential. This letter can be issued by one\\u2019s employer or local police. People can also exercise within 5km of their homes from 06.00 to 09.00. A protective mask should be worn outside one's home at all times. Restaurants are open for takeaway and delivery services. Movement between provinces is prohibited with very limited exceptions; the latter require prior approval. Repatriations need to be organised in liaison with the travellers embassy for necessary road movement permits to be granted; travellers may need to be escorted by embassy to the airport. Public transport operates with limited capacity; travellers must wear a face mask.\"},SS:{info:\"The government of the Republic of South Sudan has implemented enhanced screening and quarantine measures to reduce the spread of COVID-19.\",updated_at:\"2020-05-19\",source:\"https://ss.usembassy.gov/covid-19-information/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nUNHAS\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nAuthorities reopened Juba International Airport on 14 May and announced domestic and international flights can resume. Inbound travellers are required to have a medical certificate indicating a negative test for COVID-19 or self isolate for 14 days on arrival. Passengers must provide either evidence of precautionary 14 days quarantine, or a certified evidence of COVID-19 free status valid within two weeks of their arrival in South Sudan. \\n\\nUNHAS PAX Ops pax flights cancelled on 15 April. Air space in ROSS for domestic.\\n\\nInternal restrictions: \\nA curfew is in place from 22.00 to 06.00. Outside curfew hours, bars, restaurants and shops are allowed to open, though with some restrictions including maintaining social distancing. Some public transport, including boda bodas, are also allowed to operate.\\nMajor gatherings, including sporting events, religious ceremonies, weddings and political rallies, are currently banned.\\n\\n\\n\"},ES:{info:\"Effective May 15, passengers arriving in Spain from other countries will be required to quarantine at their home/place of accommodation for the 14 days immediately following their arrival. During the mandatory quarantine period following your arrival in Spain, you will only be allowed to leave your home/accommodation to shop for food, medications, or other basic necessities, to seek medical assistance, or in other very limited emergency circumstances. More information is available here (in Spanish).\",updated_at:\"2020-05-23\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.gov.uk/foreign-travel-advice/spain\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government will reopen to international travellers from July. (Reuters, 23.05.2020) \\nSpain lifts direct ban on flights from Italy (Reuters, 18.05.2020)\\n\\nThe Spanish government announced that five major airports would reopen to international traffic from Monday 18 May. These are airports in Tenerife, Alicante, Seville, Menorca, and Ibiza. Other airport open are: El Prat (BCN) in Barcelona, Gran Canaria (LPA) in the Canaries, Barajas (MAD) in Madrid, and M\\xE1laga-Costa del Sol (AGP) and Palma de Mallorca (PMI) in the Balearics. While these airports have been permitted to reopen, restrictions regarding who is allowed to fly will remain in place. \\n\\nExceptions will be granted for cargo planes, ambulances, emergencies, and passengers who have special authorisation. \\n\\nSpain has reintroduced controls with other members of the Schengen area on its land, air and maritime borders.Entry to Spain is limited to Spanish citizens, permanent residents, cross border workers, health care and elderly care professionals, transport of goods personnel, diplomatic staff, nationals and residents of a European Union or a Schengen member state who go directly to their place of residence and essential workers such as seasonal agricultural workers and holders of long-term visas issued by a European Union or Schengen member state who travel to the country that issued the visa. From 15 May, anyone arriving from abroad will need to submit to a mandatory 14-day quarantine. Those in quarantine will only be able to move to go to health centres, buy food, drugs or essential goods and will have to wear a mask. Gibraltar and Andorra border crossings and Spain\\u2019s North African exclave cities including Ceuta and Melilla are open. However cross-border travel is at the discretion of the border authorities and travellers are advised to contact local authorities for further information. Spanish authorities are planning to keep borders closed to most travellers from abroad until July. (Reuters, 13.05.2020) \\n\\nInternal restrictions:\\nGovernment plans to extend state of emergency until 6 June. This gives the government emergency powers to impose limitations on movement and impose other extraordinary measures. Countrywide restrictions on movement remain in force and residents have been asked to remain at home except to go to work, to buy food, medicines and other essentials, or in the event of emergencies. However infants under the age of 14 allowed out for one hour. The wearing of face masks on public transport was made compulsory from 4 May. Hotels and short-stay accommodation (such as short-stay campsites or caravan parks) are closed. The measures do not apply to long-term accommodation, such as long-stay campsites, as long as travellers can cater for themselves and do not rely on communal facilities, which will be closed.\\n\\nRelaxation of restrictions\\nThe gradual relaxation of restrictions began from 4 May, starting with lifting minor restrictions on internal movement. The government is planning to start gradually easing the restrictions as follows. Each autonomous regional government will be able to modify restrictions depending on local realities and all dates remain approximate depending on the evolution of sanitary context. From 4 May, phase 0: appointment based services were allowed to reopen such as hairdressers, dentists, beauty parlours. In the Canary and Balearic islands, phase 1 will start on 4 May unlike the rest of the country (mainland) - see below. From 11 May, phase 1: bars, terraces and restaurants will be able to reopen only to a third of their capacity in selected areas. Bookstores and museums will be allowed to operate to 40% of their capacity. Family members will be allowed to attend funerals. Small gatherings will be allowed for \\u2018healthy individuals, with no vulnerabilities and no underlying conditions\\u2019. Hotels may reopen past this time, with a limited guest number of a third of their capacity and without the use of common spaces. Religious places may also reopen under the same restrictions. Territories authorised to proceed in phase 1 are listed on the Ministry of Health website. From 25 May, phase 2, theatres, cinemas and other cultural locations will be open to a third of their capacity. Weddings may include family members and friends past this phase but no further details are available as of yet. From 8 June, phase 3, food and beverage commerce may open to 50% of their capacity and travel within one\\u2019s region of accommodation. Some restrictions have already been lifted for some non-essential workers who are not able to work from home (e.g. the construction sector), while some factories have also been permitted to resume operations.\\nThe authorities continue to recommend that citizens respect social distancing measures and wear face masks. Further details will be made available closer to those dates. Inter-regional travel may be relaxed from 22 June. Universities will remain closed until September. Schools will reopen gradually, with some exceptions to accommodate small children of essential workers. On 11 May, the national train operator Renfe began resuming normal service to suburbs with increased frequencies to ensure social distancing measures and avoid overcrowding. The return to normal operations will be gradual in Madrid, Barcelona and the other ten cities where it operates.\"},LK:{info:\"Any passenger with symptoms (e.g. a fever) when passing through a thermal scanner will be transported to a local hospital and held in isolation for further screening.\",updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"All international arports in Sri Lanka will continue to be closed for the operation of inbound international commercial passenger flights until further notice, the Civil Aviation Authority (04.04.20).\\n\\n1. Airports in Sri Lanka are closed.\\n- This does not apply to:\\na. Aircraft Departures with passengers originating from Colombo, stop overs, transit passengers or visiting tourists.\\nb. Emergency Diversions to Bandaranaike International Airport (CMB).\\nc. Freighter Operations and humanitarian flights to CMB.\\nd. Technical landings at CMB.\\n2. A completed Health Declaration Form must be presented to the public health inspectors or any other authorized officials upon arrival.\\n3. Airline crew must self-quarantine at the location mentioned in the Health Declaration Form and have meals only through in-room dining until they operate the next flight. They must follow strict procedures and hygienic measures adopted by the Government of Sri Lanka.\\n4. Visas and ETAs issued by Sri Lanka have been invalidated.\\n5. The maximum allowed transit time at CMB is 12 hours. Passengers must have a confirmed onward connection. \\n\\nTravellers already in Sri Lanka can have their visit visas extended to 11 June. They are advised not to visit the Department of Immigration and Emigration to apply for an extension, but to await further confirmation or instructions from the authorities. Those leaving the country during this period will pay the visa fee at the airport on departure without penalty.\\nAll types of visa previously issued remain temporarily suspended until further notice. All types of Electronic Travel Authorisations (ETA), entry visas, landing endorsements, multiple entry visas and residence visas issued are also suspended until further notice.\\nForeigners should register on the Tourist & Expatriate Support Center website for further assistance. Alternatively, they can call the Sri Lanka Tourism 24/7 hotline at 1912.\\n\\nInternal restrictions: The government has lifted a 24-hour curfew in 23 of the country\\u2019s 25 districts, where a nightly curfew will now be in place between 20.00 and 05.00 until further notice. A 24-hour curfew remains in force in Colombo and Gampaha districts (both Western province) until further notice.\\nThe authorities have announced the gradual resumption of transportation services. Earlier, transportation was suspended across all districts, including the transportation of tourists to different locations. However, travellers to Bandaranaike airport can bypass the curfew by presenting their outbound ticket to the authorities. Travel between districts is strictly prohibited, except for those providing essential services. \"},SD:{info:\"For suspected cases, the Ministry of Health has established isolation centers at the Khartoum Teaching Hospital and at the Jebra Trauma Center.\",updated_at:\"2020-05-09\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nUNHAS: Sources\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government extends lockdown in Khartoum by two weeks (Reuters,18.05.2020)\\n\\nInternational restrictions:\\nAuthorities closed all airports, ports and land crossings, declaring a public health emergency. Humanitarian (although UNHAS operations are restricted=, commercial and technical support shipments are excluded from the restrictions.\\nAll travellers entering Sudan are required to complete a medical form upon their arrival.\\nAll flights to and from China, Egypt, France, Iran, Italy, Japan, South Korea and Spain are suspended until further notice.\\nAll ports and land borders have been closed indefinitely. Airports are closed until at least 31 May.\\nSudanese nationals may be repatriated; authorities have not clarified how.\\n\\nInternal restrictions\\nA nightly curfew is in place from 18.00 to 06.00. All public and private passenger movement between cities and states are banned until further notice. In Khartoum state, residents will be permitted to leave their homes to purchase essential goods within their respective neighbourhoods. Grocery stores and pharmacies are expected to remain operational during the curfew. The 24-hour curfew in Khartoum state, including the capital Khartoum and Omdurman, is extended until at least 2 June. In North Darfur state, the authorities blocked all entrances and exits to the state capital El Fasher. In South Darfur state, similar restrictions have been put in place; all entrances and exits to the state have been blocked and a curfew is in place in the state\\u2019s capital Nyala from 18.00 to 06.00. Similar restrictions are in place in Al Qadarif and Red Sea states.\\n\"},SR:{info:\"The Government of Suriname has announced that residents returning to Suriname on future repatriation flights will be placed under 14-day quarantine upon arrival.\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions:\\nSuriname\\u2019s airspace, ports, and borders remain closed until at least 31 May. All scheduled international flights to and from Suriname are suspended, and land and ferry border crossings closed. Provisions have been made for cargo flights between Suriname and the Netherlands. \\n\\nOutbound restrictions:\\nAll scheduled international flights to and from Suriname are suspended, and land and ferry border crossings closed. Travellers recommended to contact their embassies. \\n\\nConditions and internal restrictions:\\nA curfew from 18.00 to 06.00 in the eastern border rivers Lawa, Marowijne and Tapanahony has been extended until 17 May. The rest of the country will be under a partial lockdown from 23.00 to 05.00 until further notice. Essential personnel are exempt from this measure. Anyone found outside their homes unnecessarily during these hours may be detained by the authorities. Gatherings of more than 50 people are banned. All educational institutions and non-essential businesses are closed. In the second stage (18-31 May), schools are due to reopen with social distancing measures in place. The curfew will continue throughout this period. The third stage is set to start on 1 June. The authorities have suggested reopening airports, cafes, leisure resorts and other public facilities, as well as resuming sporting activities, during this phase.\"},SE:{info:\"In Sweden, most preventative measures don\\u2019t involve involuntary quarantine.  Instead, individuals are expected to act responsibly and follow the given recommendations, including immediately seeking out medical assistance if signs of infection appear.\",updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Passengers arriving from outside Austria, Belgium, Bulgaria, Croatia, Cyprus, Czechia, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Ireland (Rep.), Italy, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Netherlands, Norway, Poland, Portugal, Romania, Slovakia, Slovenia, Spain, Switzerland and United Kingdom are not allowed to enter. - This does not apply to nationals of Austria, Belgium, Bulgaria, Croatia, Cyprus, Czechia, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Ireland (Rep.), Italy, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Netherlands, Norway, Poland, Portugal, Romania, Slovakia, Slovenia, Spain, Sweden and Switzerland, and their family members, if the purpose of the journey is to return to his or her home. - This does not apply to passengers with a British passport and their family members, if the purpose of the journey is to return to his or her home.\\n- This does not apply to passengers with a residence permit issued by Sweden, if the purpose of the journey is to return to his or her home. - This does not apply to passengers with a national visa issued by Sweden, if the purpose of the journey is to return to his or her home.\\n- This does not apply to the following passengers: a. healthcare personnel; b. border workers; c. personnel transporting goods and other personnel in the transport sector to the necessary extent; d. persons covered by Chapter 2. Section 10 of the Aliens Act (2005: 716); e. persons working in international organizations, military personnel and relief workers; f. passengers in transit; g. persons with urgent family reasons;  h. persons in need of international protection or for other humanitarian reasons. \\n\\nInternational restrictions: Swedish authorities advise to temporarily stop non-essential travel to the country. The measure will be in effect until 15 June. Swedish citizens, residents and other people with an important reason for being in-country will be able to enter the country.\\n\\nInternal restrictions: Public gatherings with more than 50 people are banned, and are likely to be in place throughout the whole summer. This includes going to a restaurant where social distancing measures also need to be enforced by the owners. Bars and restaurants which would not be observing such rules will be shut down by authorities.\\nOnly high schools and universities are closed.\\nEveryone is urged to stay at home if they are sick, practice social distancing and avoid non-essential travel within the country.\"},CH:{info:\"There aren\\u2019t any quarantined locations at this time.\\nHowever, the Swiss Federal Council has urgently called upon the entire population to stay at home.\",updated_at:\"2020-05-20\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ch.usembassy.gov/covid-19-info/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nSwitzerland has closed its land and air borders, and only Swiss citizens, residents, citizens of Liechtenstein, family members of Swiss citizens or EU/EFTA citizens living in Switzerland, EU/EFTA citizens travelling for work reasons and those claiming \\u201Ccauses of force majeure\\u201D can access the country. Transiting at Swiss airports is permitted if the traveller does not leave the transit zone. Transiting through Switzerland by road is permitted if the right of entry to the destination country is guaranteed. Air, rail and land links with Italy remain tightly controlled, including a suspension of most flights through Swissair, Easy jet. Flights by Italian operator Alitalia from Geneva and Zurich to Rome Fiumicino Airport are in place until 30 May 2020.\\n\\nInternal restrictions:\\nA state of emergency is in effect. Gatherings of more than five people are prohibited, leisure and entertainment venues remain closed until 7 June.\\n\\nRelaxation of restrictions:\\nThe borders with France, Germany and Austria will reopen fully on 15 June if the health situation does not deteriorate. The land border between Canton Ticino (Switzerland) and Brusino, Ligornetto and Ponte Cremenaga (Italy) was reopened on 5 May. The crossing points are open for travel Monday to Friday on the following times: \\nPonte Cremenaga 06.00-10.00 and 16.00-19.00 Brusino 05.00-09.00 and 16.00-20.00\\nLigornetto: 06.00-10.00 and 16.00-19.30\\nAn increased number of applications for work in Switzerland have been allowed. Further details are available on the government website.\\nOn 8 June restaurants and bars can reopen.\\nGatherings of more than five people can resume but will still be limited to 1,000 people.\\nDomestic trains and public transport have gradually resumed operations.\"},SY:{info:\"Syrians returning from abroad on government-organised repatriation flights are required to undergo 14-day quarantine at designated facilities.\",updated_at:\"2020-04-29\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nUNHAS\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions: \\nAll travel, including for religious purposes, has been suspended to and from Iraq and Jordan.\\n\\nUNHAS PAX Ops are being established. \\n\\nInternational restrictions:\\nAll land borders into Syria have been closed to passenger traffic. International and domestic commercial flights remain suspended. Trucks are allowed to enter and exit the territories of the Syrian Arab Republic after all preventive health measures have been taken at border crossings. Authorisation for diplomats, consular officials, and members of international organizations, missions and commissions may enter Syria after obtaining authorisation from relevant authorities and undergoing medical examinations. Syrians returning from abroad on government-organised repatriation flights are required to undergo 14-day quarantine at designated facilities.\\n\\nInternal movement restrictions\\nIn Assad-led government-controlled areas, a curfew is in place from 06.00 to 18.00 (all times local). During the month of Ramadan however, the curfew hours during the weekend (Thursday and Friday) will be 19.30 to 06.00. Businesses and markets are allowed to re-open, only working from 08.00 to15.00. Movement between provinces in government held areas prohibited. The Kurdish-led Autonomous Administration in northeast Syria has imposed a curfew and restricted movement with the exceptions for hospitals, public clinics, pharmacies, sterilization teams, cleaners, bakeries, food stores, vehicles for transporting food and infant formula, fuel tankers, and international organisations such as the International Committee of the Red Cross (ICRC) and the Kurdish Red Crescent (KRC). Those who violate curfew will be fined and their vehicles will be impounded.\"},TJ:{info:\"A mandatory 14-day quarantine is applicable to most arriving visitors,. There is no alternative to quarantine in a Tajik-government facility at this time for arrivals who have transited a country with reported cases of COVID-19. Tajikistan is currently taking oral and nasal swabs for COVID-19 testing. Quarantine  locations may depend on availability of space and the port of entry.\",updated_at:\"2020-04-28\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Tajikistan restricts all travel untill 01 May (Sources, 13.04.2020)\\n\\nTemporary restrictions have been introduced on the entry and exit of all citizens of foreign countries and stateless persons through all checkpoints on the Republic of Tajikistan\\u2019s borders.\\nThese restrictions do not apply to diplomats of foreign states and representatives of international organisations and financial institutions, as well as members of their families accredited in the Republic of Tajikistan.\\nThose allowed entry must self-isolate in the places of their permanent residence for 14 days.\\nVisa issuance for Chinese nationals has been temporarily suspended until further notice.\\nAll land border crossings are closed, except for cargo transport.\\nFlights to and from Tajikistan are suspended, though a limited number of repatriation flights (of Tajik nationals back to Tajikistan, and for foreign nationals wishing to leave) are operating.\\n\\nInternal restrictions:\\nSchools have been closed until 9 May and sporting events have been suspended until 10 May.\\n\"},TW:{info:\"Any traveler arriving from outside Taiwan and granted entry are subject to a 14-day home quarantine. Local officials will call the individual under home quarantine every day during the 14-day period to ask about the individual\\u2019s health status and will record the information on a Health Status Record form.\",updated_at:\"2020-05-20\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.iata.org/contentassets/5f34d0a9d9d1435a8dae4f0e7007c31f/chinese-taipei-ncov-measures.pdf \\nhttps://www.ait.org.tw/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Taiwan is planning to reduce the quarantine period for visitors arriving on short-term business trips. Business travelers on two- or three-day trips, arriving from countries such as New Zealand, which are at extremely low risk for COVID-19, will be required to remain in quarantine for five days instead of two weeks. At the end of the five-day quarantine, the visitors will be tested for COVID-19 at their own expense and released once they test negative. Short-term business travelers from countries with relatively high risk of COVID-19 will be quarantined for 10 days, after which the procedure will be the same. Business people from countries where COVID-19 is not under control or who intend to stay longer than three days will be required to follow the current 14-day quarantine regulations. (Focus Taiwan, 20.05.2020) \\n\\n\\n1. Passengers are not allowed to transit Chinese Taipei. (Taiwan)\\n2. Passengers are not allowed to enter Chinese Taipei.\\n- This does not apply to passengers with a Chinese Taipei travel document.\\n- This does not apply to passengers with an Alien Resident Certificate.\\n- This does not apply to personnel on diplomatic or official business.\\n- This does not apply to passengers who can prove they are fulfilling commercial and contractual obligations, or passengers requiring special permission.\\n- This does not apply to passengers with a visa with \\\"SPECIAL ENTRY PERMIT FOR COVID-19 OUTBREAK\\\" stated on remarks.\\n3. Passengers allowed to enter must observe a 14-day home quarantine upon arrival.\\n4. All arriving passengers and crew members must present a completed Health Declaration Form.\\n\\nAll foreign nationals are denied entry into Chinese Taipei. Exceptions include Republic of China (ROC) citizens, diplomatic staff, permanent residents (APRC), Alien Residency Certificate (ARC) holders and business people with special permits. Travellers will not be allowed to transit through Chinese Taipei until further notice. Travellers permitted to enter Chinese Taipei will be subject to mandatory 14-day home quarantine. Inbound travellers allowed to enter Taiwan that have had travel history in the past 14 days to Southeast Asia, America or Europe will need to complete the COVID-19 Health Declaration and Home Quarantine Notice and confirm if their residence satisfies the home quarantine requirements before boarding. Travellers living with people who are 65 years old or older, children 6 years old or under, persons with chronic disease (such as cardiovascular diseases, diabetes or lung disease), or persons who don\\u2019t have a separate room (including a separate bathroom) will be required to live in quarantine hotels upon arrival. From 8 May, Taiwanese people who have not left Hubei province may return to Chinese Taipei but will need to undergo a 14-day period of quarantine in a designated facility. \\n\\nPassengers traveling on regular or high-speed rail must wear a mask. \"},TH:{info:\"If you come to the attention of Thai health authorities with fever and flu-like symptoms, and have traveled internationally or had close contact with a known COVID-19 case within the past 14 days, you will be placed in isolation and required to undergo testing which can take up to 48 hours.  If you are found to be positive, you will be hospitalized until symptoms resolve and you have two negative tests separated by 24 hours.\",updated_at:\"2020-05-17\",source:\"https://th.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nThe Civil Aviation Authority of Thailand has opened up more airports for special international flights. Chiang Mai, Chiang Rai, Hat Yai, Hua Hin, Krabi, Koh Samui and Surat Thani have been given permission to handle international flights which are repatriating foreign nationals, or Thai citizens coming home.\\nOther international inbound flights to Thailand are suspended until 30 June. This does not apply to state or military aircraft, emergency landing, technical landing without disembarkation, humanitarian medical or relief flights, repatriation flights (commercial or government) and cargo flights. All flight permits granted for this period will be cancelled.\\nPassengers will be subject to a 14-day quarantine and will be transported by an allocated vehicle to a government-designated facility upon arrival. Returning citizens and residents who are not coming from \\u201Chigh-risk areas\\u201D, such as countries with ongoing local transmission of COVID-19, and stay outside of the capital Bangkok or surrounding provinces, can request self-quarantine at their residences by presenting a negative test result for COVID-19.\\nForeigners are banned from entering Thailand until 31 May. Diplomats and members of international organisations and their families, and foreigners with valid work permits in Thailand, and some other categories of people are still able to enter as long as they obtain a fit-to-fly certificate issued not more than 72 hours before arrival. Diplomats must have a certificate of entry approved by Thai government agencies (eg. Ministry of Foreign Affairs).\\nA State of Emergency is in place until 31 May. The decree will give the government more powers to impose restrictions. Measures may include curfew, banning of mass gatherings and allowing deployment of military forces for enforcement.\\nReturning citizens are required to provide a medical certificate stating their health is fit for flying (\\u201CFit to Fly\\u201D Health Certificate) and a letter certifying their return to Thailand issued by the Royal Thai Embassy, Thai Consular Office or the Ministry of Foreign Affairs. If the travellers could not present the documents mentioned above, they will be denied from boarding the flight.\\nMembers of a diplomatic mission, cabin crew or essential goods transport workers are also required to produce the \\u2018fit-to-fly\\u2019 health certificate (in English or the official language of the country of departure), issued within 72 hours prior to arrival in the country. Additionally, a certificate of entry issued by the Ministry of Foreign Affairs is required from members of a diplomatic mission. All incoming travellers will be screened at their port of entry.\\nAll travellers and crew members must present a completed T.8 health questionnaire and submit the required information in the AOT Airport of Thailand mobile application to the Health Control Office upon arrival. This document includes personal information and residence while in Thailand.\\nLand borders are closed, unless used for the repatriation of stranded Thai nationals in neighbouring countries.\\nCheckpoints with Malaysia have already closed given the lockdown in Malaysia.\\nThe first Thai-Myanmar Friendship Bridge in Task has been closed until further notice.\\nThe border linking Kanchanaburi and Myanmar is closed.\\nBan Khao Din in Sa Kaeo linking Thailand to Cambodia is closed.\\nAutomatic renewal of visas will be granted for foreign nationals whose visa has expired after 26 March. This extension will be until 31 July, for all visa types. Those whose visa expired before 26 March must still apply for renewal at immigration offices.\\nTravellers landing in Buri Ram, Krabi, Nakhon Phanom, Phitsanulok, and Trang airports will be quarantined for 14 days.\\n\\nInternal restrictions:\\nDomestic flights are gradually resuming. A daily curfew is in place nationwide from 23.00 to 04.00. Essential services are exempted from this restriction.\\nUnder an emergency decree, over 357 checkpoints have been set up across the country to check local and international travellers for symptoms. Whilst interprovincial travel is still allowed, the measure aims to discourage people from doing so. Travellers in Thailand are required to carry their ID and have their temperature checked. The emergency decree is in place until 31 May.\\nDespite the state of emergency being extended, the authorities may ease restrictions in several provinces. The Bangkok Metropolitan Administration (BMA) plans to reopen several businesses in selected categories, such as restaurants, markets and sports venues and parks.\\nEntertainment venues are closed in Chiang Mai until further notice.\\nThe State Railway of Thailand will suspend its train services connecting Bangkok and the North, Northeast and South until further notice. The annual public Holiday of Songkran has been postponed and schools are closed nationwide. Provincial governors have been given the authority to close public gathering venues and entertainment areas.\\nKoh Samui district (Surat Thani Province) has banned entry to travellers who do not have a health certificate.\\nTrat Airport (Trat Province) is closed. Samui Airport (Surat Thani Province) and Sukhothai Airport (Sukhothai Province) are closed.\\nChiang Rai Province has been placed under partial lockdown. Only four motorway routes will remain open for motorists in and out of the province during this period.\\nFrom 17 May, gyms, sports centres, department stores and community malls in Thailand will be allowed to resume operations between 10.00 and 20.00.\"},TL:{info:\"All persons entering the country are required to be quarantined for at least 14 days.\",updated_at:\"2020-05-11\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"1. Passengers are not allowed to enter Timor-Leste.\\n- This does not apply to oil rig workers. \\n2 .Passengers are subject to health screening. \\n\\nInternational restrictions: Temporary border closure with Indonesia from 19 March until 19 May. Entry ban for all foreign nationals, except foreigners born in East Timor, resident citizens, and legal representatives of Timorese minors. Foreigners working on oil platforms in the Timor Sea are exempted as well. All persons entering the country are required to be quarantined for at least 14 days. Those with symptoms of COVID-19 will have to undergo a COVID-19 diagnostic examination. Cruise ships are not allowed to enter East Timor.\\n\\nInternal restrictions: The state of emergency will be imposed for the second phase from 28 April to 27 May as parliament approves extension. Face-to-face school activities are suspended. Education and vocational training establishments are closed. Meetings or demonstrations involving more than five people and any social, cultural, religious celebrations and sporting events are prohibited. Collective passenger transport suspended. Although there has been no announcement on the extension of the lockdown, travel restrictions remain in force. Movements of vehicles and public transportation with multiple passengers on board have been reportedly restricted between districts. Additionally, checkpoints have been established across the country including the capital Dili.\"},TG:{info:\"The Government of Togo has formulated a plan for the surveillance and quarantine of suspected or confirmed cases of COVID-19. If you arrive on an international flight, you should expect to spend 14 to 21 days under government quarantine at Hotel Lebene in Lome. \",updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.osac.gov/Content/Report/a8210cf8-a761-49d9-b73e-1845add0a9ae\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Flights to Togo are suspended.\\n- This does not apply to repatriation flights.\\n\\nInternational restrictions: All land borders are closed indefinitely. 14-day self-isolation is mandatory for anyone arriving in Togo who is returning from a high risk country.\\n\\nInternal restrictions: A state of health emergency has been declared until the end of June. This includes the creation of a special anti-pandemic force of 5,000 men, composed of the defence and security forces. A curfew from 21.00 to 05.00 has been imposed in the Grand Lom\\xE9 region. Sanitation cordons are in place around the key cities of Lom\\xE9, Ts\\xE9vi\\xE9, Kpalim\\xE9 and Sokod\\xE9. Police controls are in place at Ts\\xE9vi\\xE9 on RN1, at An\\xE9ho toll gate on RN2 and in Amoussou-Cop\\xE9 on RN5. Gatherings of more than 15 people are suspended. Masks are mandatory in markets. Indefinite closure of schools and social venues, including bars, restaurants and places of worship. Prohibition of frequenting beaches along the entire coast.\"},TO:{info:\"Travelers (except Tongan citizens, permanent residents, and immediate family members) who either traveled from or through the United States, China, Australia, Italy, South Korea, and several dozen other countries to spend at least 14 days in self-quarantine in a country free of coronavirus prior to entering Tonga.\",updated_at:\"2020-04-30\",source:\"https://fj.usembassy.gov/u-s-citizen-services/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Borders are closed, including international flights, cruise ships and yachts until 12 June. The restriction affects Fiji Airways, Air New Zealand, Virgin Australia, and Talofa Airways flights.\\nAll foreign nationals are banned from entering Tonga until 12 June. All Tongan citizens and emergency officials arriving in the Kingdom will now have to go through a 14-day quarantine period.\\n\\nTravelers covered by the travel restriction are then required to undergo medical clearance within three days of traveling to Tonga, and to provide the clearance to Tongan authorities before being granted entry. Failure to provide medical clearance could result in denial of entry or return to country of origin.\\n\\nInternal restrictions:\\nThe nationwide lockdown in Tonga has been extended until 12 June. Non-essential movement outside of residences will be prohibited. Night-time curfews will be in place from 20.00 to 06.00. Non-essential businesses will be closed and large gatherings will be suspended.\\nPublic gatherings are restricted. Nightclubs, bars and kava clubs are shut down. Concerts, sports events, funerals and weddings are banned.\"},TT:{info:null,updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Airports in Trinidad and Tobago are closed.\\n- This does not apply if permitted by the Minister with responsibility for national security. \\n\\nInbound restrictions:\\nAll international air and maritime traffic coming into the country has been halted until further notice. Entry is prohibited for all travellers, including residents.\\n\\nOutbound restrictions:\\nThere are currently no known restrictions on individuals seeking to depart the country. \\n\\nConditions and internal restrictions:\\nDomestic air and maritime traffic is continuing though with reduced schedules. During the first phase, from 10 May until 23 May, restaurants and food outlets will be allowed to open for take-out until 20.00. Outdoor or sport activities will be allowed with social distancing; grocery stores and pharmacies will open from 08.00 to 18.00 and hardware stores until 16.00. Non-essential personnel are encouraged to stay at home. During the second phase, from 24 May to 6 June, manufacturing and public-sector construction operations will resume, and public transport services will be allowed at 50% capacity. The last phase, from 7 June to 20 June, will allow the gradual resumption of public services, private sector construction, and 75% capacity for public transport services. Shopping malls, beaches, movie theatres and other recreational establishments will remain closed until further notice. Schools will remain closed until at least  September.\"},TN:{info:\"All travellers arriving in the country will be required to self-quarantine for 14 days, under the supervision of the Ministry of Health.\",updated_at:\"2020-05-12\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government announces reduction of curfew hours, easing of lockdown as outbreak slows (Reuters, 13.05.2020)\\n\\nAll flights to Tunisia are suspended.\\n- This does not apply to:\\na. aircraft in a state of emergency;\\nb. overflights;\\nc. operations related to humanitarian aid, medical and relief flights;\\nd. repatriation flights (only for nationals and permanent residents of Tunisia) - they will be placed in quarantine for 14 days;\\ne. technical landings where passengers do not disembark;\\nf. other safety-related operations.\\nAll the exceptions above are subject to prior request addressed to the Tunisian Civil Aviation Authority.\\n\\nUNHAS flights are suspended. \\n\\nInternal restrictions:  A general lockdown is in place until 3 May. A state of emergency is in place until 28 May. A revised curfew is in place daily from 20.00 to 06.00: People are advised to avoid all movement, except for emergencies, health reasons and acquiring essential supplies. Suspension of inter-governorate or intercity travel. All gatherings of more than three people are banned. Non-respect of health regulations and restrictions is regarded as a crime and may lead to trial for involuntary homicide. 9,000 members of the security forces have been deployed. \\n\\nRelaxation of restrictions The gradual easing of restrictions begun on 4 May, - 4 May, phase 1: reopening up to 50% of commercial activities, financial services and businesses for establishments hiring more than 10 people, public services (municipalities and justice bodies) - 24 May, phase 2: recovery of above activities up to 75%, in addition to the reopening of cafes, tea rooms and restaurants - 4 June, phase 3: recovery of above activities up to 100%, resumption of cultural activities, collective prayers, reopening of religious venues and kindergartens. Medicine and pharmacy students will return to university on 11 May. From 28 May, school will resume for students in their final year of high school. Gradual resumption of university activities set for 1 June. The wearing of face masks will be highly recommended on public transport. \\n\"},TR:{info:\"If an individual presents with COVID-19 symptoms, Turkish Ministry of Health may send that person to a designated hospital for testing and possible observation under quarantine for 14 days.\",updated_at:\"2020-05-23\",source:\"\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nOSAC\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Kazakh and Turkish airlines may resume passenger flights between the two countries in late June. (Reutera, 23.05.2020) \\nPresident announces four-day lockdown from 23 May, through Tuesday, May 26, in all 81 provinces nationwide. (OSAC, 20.05.2020)\\n\\nInternational restrictions:\\nAll international flights have been suspended for an indefinite period.\\nTurkish Airlines suspended domestic flights until 4 June and international flights until 10 June.\\nCargo, government, and emergency medical flights are excluded from the restriction. Emergency landing for technical reasons will also be permitted.\\nLand border crossings with Iran and Iraq are closed. All passenger, cargo and charter flights to and from Iran have been suspended. Turkish nationals are prohibited from entering Iran.\\nLand borders with Bulgaria and Greece are closed. No restrictions on cargo transport at ground borders. Maritime travel from Greek mainland and Islands are also restricted\\nLand and air connections with Azerbaijan are suspended until further notice.\\nTravellers with a Turkish residency permit will be tested for coronavirus; should the test be positive, the traveller will be moved to a quarantine facility. If the test is negative, the traveller should follow a self-imposed quarantine for 14 days.\\nAll international passengers are screened with a thermal camera. Those displaying signs of higher-than-average temperature will then be referred to a medical adviser for further examination.\\n\\nInternal restrictions:\\nA 24-hour nationwide curfew will be in effect from 00.01 from 23-26 May, which marks the Eid al-Fitr holiday.\\nCurfew is in place for individuals younger than 20 and adults over 65. Those over the age of 65 will be permitted to leave their homes between 14.00 and 20.00 on 24 May, while those under the age of 20 will be permitted to leave their house between 11.00 and 15.00 on 20 and 22 May.\\nShopping centres, barber shops and beauty salons have already been permitted to resume operations, provided they install an appointment system and accept customers at half their capacity. Universities will be allowed to reopen on 15 June.\\nThe domestic travel ban remains for the travel to and from the following 15 provinces for another 15 days from 18 May: Ankara, Balikesir, Bursa, Eskisehir, Gaziantep, Istanbul, Izmir, Kayseri, Kocaeli, Konya, Manisa, Sakarya, Samsun, Van and Zonguldak.\\nIntercity movement between 30 major cities (including Ankara, Istanbul and Izmir) is subject to local authorities\\u2019 permission in each province.\\nAnkara has already closed schools, cafes and bars, and banned mass prayers.\\nParks, forests and archaeological sites will be closed on weekends and public gatherings in these areas on weekdays are not allowed.\\nRestrictions have been imposed on grocery-store opening hours and numbers of customers allowed in shops and bus passengers to 50% of the vehicle\\u2019s capacity. \\n\\nRelaxation to restrictions: \\nTrain services resume gradually from 28 May.\"},TM:{info:\"Stringent travel restrictions and mandatory quarantines are being implemented by the Government of Turkmenistan in response to COVID-19.\",updated_at:\"2020-04-17\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"1. Flights to Turkmenistan are suspended until 20 May 2020.\\n- This does not apply to repatriation flights of nationals and residents of Turkmenistan.\\n2. Passengers are required to have a health report from the health organizations of the country they are arriving from. The report must show that they have undergone the Coronavirus (COVID-19) check and been tested negative.\\n        \\nInternational restrictions:\\nAll inbound and outbound international flights have been cancelled indefinitely. International charter flights, including medical evacuation flights, are only being allowed to operate from Turkmenabat International Airport (CRZ). Repatriation flights of nationals and residents of Turkmenistan are exempted.\\nInternal movements seem to still be possible although control points have been set in the entrances and exits of the main cities.\"},TC:{info:\"A Turks and Caicos Islander or resident who, travelled to the Turks and Caicos from another country, will be subjected to screening, passenger tracing and clinical examination at port of entry; and required to remain at home or such other place of quarantine as specified by the Chief Medical Officer for a period of fourteen days.\",updated_at:\"2020-05-06\",source:\"https://www.iata.org/contentassets/301cd67d55384afa81221b4abe62f384/turks-caicos-ncov-measures.pdf\\nhttps://bs.usembassy.gov/health-alert-u-s-embassy-nassau-the-bahamas-11/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Inbound restrictions: All airports and ports are closed. Border will remain closed until 1 Jun. \\n\\nThe cruise port will be shut to cruise liners until 30 June. \\n\\nOutbound restrictions: Travellers may still register to leave the island and the government will gauge how high an interest there is in order to arrange flights. \\n\\nConditions and internal restrictions: \\n\\nStringent restrictions in place until 24 May. A curfew from 20.00 to 05.00 is in place. Certain businesses, beaches and other facilities have reopened. Groups of more than four people are prohibited. Social distancing and wearing of masks remain required. Further restrictions are planned to be lifted on 10 May. Only one adult per household is allowed to leave for essential purposes during this period. All supermarkets and other businesses not considered life-essential will be closed on Wednesdays and Sunday to restock and clean.\"},TV:{info:null,updated_at:\"2020-03-30\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nTravellers who have been to China within the past 30 days will be denied entry. This restriction includes seafarers from foreign vessels that have been in China or COVID-19 affected countries. \\nTravellers who have been to COVID-19 affected countries in the last 30 days need to obtain medical clearance three days before entering the country. Additionally, travellers must have remained in a country not affected by COVID-19 for at least five days prior to attempting entry. \\nHealth screening will be conducted at Funafuti airport and seaports.\\n\"},UG:{info:\"Authorities in Uganda have imposed strict quarantine measures for travelers from several countries.\",updated_at:\"2020-05-12\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm \\nhttps://www.osac.gov/Content/Report/0d6157d4-62ee-415d-97c7-1848a5650d7f\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nGov.uk\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"President will start easing COVID-19 lockdown measures starting 2 June (Reuters, 19.05.2020)\\n\\nUN Staff: Humanitarian staff on official mission will be able to enter, subject to the approval of their UN Agency Protocol office and head of UN agency in country, who will seek to request the relevant authorization from the national authorities through an invitation letter. The same process might not apply to Ugandan nationals returning to their own country as it is stated in the Government\\u2019s guidelines that they will not be allowed to entry. \\n\\n1. All international flights to Uganda are suspended.\\nThis does not apply to:\\na. aircraft in a state of emergency;\\nb. operations related to humanitarian aid, medical and relief flights;\\nc. technical landings where passengers do not disembark;\\nd. safety-related operation flights.\\n2. Airline crew members must undergo mandatory quarantine at Protea Hotel Entebbe.\\n\\nAll land boarders are closed. \\n\\nInternal restrictions: A nationwide lockdown is extended until 19 May. A nightly curfew is in effect between 19.00 and 06.30 (local time). Some sectors allowed to resume operations include agriculture, construction, wholesalers, mechanical repair workshops, hardware workshops, metal and wood workshops, warehouses, insurance, and restaurants operating with takeaway services. In addition, 30 lawyers will be designated to handle urgent legal and criminal matters. All these sectors are required to operate based on social distancing measures which include staying two metres apart between sellers and customers while four meters apart between customers, and not using air-conditioning in stores instead using natural air. Wearing a cloth face mask is also mandatory while in public. Educational institutions and religious assemblies remain suspended. Public transport is suspended, and the movement of private vehicles for non-essential businesses is also prohibited during the lockdown. Bicycle and motorcycle taxis (boda-bodas) are permitted to operate before 14.00. Those with emergent medical conditions can use private transport after applying for permission from Resident City Commissioners. Those living in the Greater Kampala area can apply for permission from the local chairpersons in their area. Government staff will remain at home during the lockdown, with the exception of military, police and health and utility sector employees, while essential private services will also continue to operate. Public gatherings of more than five people are banned, including gatherings at a residence that involve the consumption of alcoholic beverages. The security forces are permitted to search residences on suspicion of such activity.\\n\\nRelaxation of restrictions: \\nBusinesses including hardware shops, restaurants, wholesale stores and others will now be allowed to reopen. (Reuters, 05.05.2020) \\nPublic transport and most private vehicles would still remain prohibited, however - meaning that workers for reopened businesses will have to commute either by bicycle or on foot. \\n\\n\\n\\n\"},UA:{info:\"Ukrainian citizens and foreigners, arriving in Ukraine will be required to undergo a 14-day supervised quarantine period.\",updated_at:\"2020-05-14\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://www.osac.gov/Content/Report/cd9a6678-962b-46c5-8acf-18429bb2b60c\\nhttps://ua.usembassy.gov/covid-19-information/\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Official quarantine is extended to 22 May, some restrictions will ease 11 May (OSAC, 05.05.2020)\\n\\nThe following categories of foreign visitors will be exempt from the inbound travel ban:\\nRepresentatives of official international missions, diplomatic missions and their families;\\nMembers of train, locomotive, aircraft and sea crews;\\nSpouses or children of Ukrainian citizens; and\\nForeigners with valid residency permits.\\nAll passenger flights have been suspended indefinitely.\\nAll border crossing points of Ukraine are closed for rail and bus traffic.\\nAll foreign nationals currently in-country are allowed to leave, though transportation options remain limited. 123 land border crossings remain open for returning citizens of Ukraine, foreign nationals exiting the country, as well as other specified groups of travellers still allowed movement. Travellers arriving from locations deemed as high risk will be subject to medical check-up upon arrival and mandatory 14-day home isolation or quarantine at a designated facility\\nPeople returning to Ukraine are required to undergo a mandatory observation period of 14 days in designated areas.\\n\\nPeople returning to Ukraine are required to undergo a mandatory observation period of 14 days either in a designated area or in home isolation with an e-service called \\u2018DII VDOMA\\u2019, which allows the police and doctor to monitor compliance.\\n\\nInternal restrictions:\\nRoadblocks have been set in most roads exciting/entering Kyiv. Those considered to have symptoms of COVID-10 will be asked to follow home-solation measures.\\nThe government of Ukraine has extended certain quarantine measures until May 22 to reduce the spread of COVID-19. The government announced it would likely ease the following restrictions with appropriate distancing and sanitary requirements, effective May 11. \"},AE:{info:\"UAE health authorities are urging all returned travelers to the UAE to practice self-quarantine for at least 14 days and are also urging all residents to stay home.  \",updated_at:\"2020-05-19\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://ae.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government to extend nightly curfew by two hours from 20 May after increase in COVID-19 cases (Reuters, 18.05.2020)\\n\\nInternational restrictions:\\nAll international air traffic remains suspended until further notice; the ban also applies to transit flights via Abu Dhabi and Dubai. However, UAE-based air carriers are operating a limited number of inbound and outbound flights mainly to repatriate UAE nationals and foreign residents.\\nNational carrier Etihad Airways will resume a limited number of inbound flights to Abu Dhabi from 9 May exclusively for UAE citizens and foreign nationals holding valid UAE residency permits. Travellers must apply for an ICA approval number via the UAE Twajudi Resident service, which can be accessed on the website of the Ministry of Foreign Affairs, before booking their tickets. This unique number will allow travellers to make bookings exclusively through Etihad\\u2019s contact centre. All arriving passengers will be required to self-quarantine for 14 days.\\n\\nEntry restrictions\\nThe authorities implemented entry restrictions for non-UAE citizens, including foreign nationals holding valid residency visas who were currently out of the country and Gulf Cooperation Council (GCC) citizens. While local media reports indicate that some exceptions have been made on a case-by-case basis since the restrictions came into effect, the UAE Ministry of Foreign Affairs and International Cooperation has requested such individuals to take the following steps:\\nTravellers who are currently in their country of origin should contact the UAE diplomatic mission in their respective country for the required support and to streamline their return back to the UAE.\\nTravellers who are currently outside the UAE for business should contact their employers in the UAE, as well as the UAE diplomatic mission in their host countries for the required support and to facilitate their return back to the UAE.\\nTravellers who are on vacation should contact the UAE diplomatic mission in their host countries, for the required support to facilitate their return back to the UAE.\\nOfficials at Abu Dhabi airport have said that all flights are operating via the facility's Terminal 1 until further notice.\\n\\nFlight suspensions\\nDubai-based airline Emirates will operate outbound flights to London Heathrow (United Kingdom), Frankfurt (Germany), Paris (France), Milan (Italy), Madrid (Spain), Chicago (United States of America), Toronto (Canada), Sydney and Melbourne (Australia) from 21 May.\\nThe Dubai-based carrier FlyDubai and Abu Dhabi-based Etihad Airways have also suspended or modified routes to and from UAE airports.\\n\\nOther measures\\nIndividuals are required to wear masks and observe social distancing when in public. Infractions are punishable via legal action.\\nOfficials had earlier closed beaches, cinemas, public parks and swimming pools until further notice - this remains in place.\\nResidency visas and Emirates ID to be automatically extended for three months for free (only for those whose visa and ID expired from 1 March).\\nIn the Dubai emirate, a 24 hour remain-at-home directive has been rescinded. Since 24 April, this has now been relaxed to coincide with Ramadan - residents are now permitted to conduct movement between 06.00 and 22.00 without a permit; restrictions on movement between 22.00 and 06.00 remain in force and the only exceptions are for medical emergencies. Some metro service is due to recommence from 29 April. Restaurants, shopping malls and other retail outlets are allowed to open between 06.00 and 22.00.\\nOther emirates seemingly remain under the initial 20.00 to 06.00 curfew regime, including Abu Dhabi. Trips to purchase food and medication and essential workers are exempt. In Abu Dhabi a movement permit is required to travel during the sterilisation hours (individuals can apply here).\\nHowever, the above timing will change from 20 May, when the timing for the national sterilisation programme will change to 20.00-06.00, during which all individuals are required to stay indoor. The opening hours of shopping malls and retail shops will be 09.00-19.00.\\nBlue-collar workers in Abu Dhabi are not allowed to leave the emirate until further notice; their internal movement is restricted to Abu Dhabi, Al Ain and Al Dhafra. In addition, workers from other emirates are not allowed to enter into Abu Dhabi. Exceptions may apply to movement of workers operating in essential sectors and those with valid flight tickets on their way to the airport of departure.\\nAny citizen/resident benefiting from repatriation flight will observe a compulsory 14-day home quarantine.\\nFines may be issued for those suspected of spreading information about COVID-19 which contradicts official statements, as well as neglecting social distancing requirements, driving with more than three people in a vehicle, and participating in social gatherings.\"},GB:{info:\"The government is CONSIDERING a mandatory self-quarantine of inbound travellers for 14 days, although no date has been provided for implementation. French and Irish travellers would be exempt from the quarantine.\",updated_at:\"2020-05-18\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Government to introduce 14-day quarantine for almost all international travelers from 8 June (Reuters, 22.05.2020).  Northern Ireland eases COVID-19 restrictions on 18 May (Reuters, 18.05.2020)\\n\\nInternational restrictions:\\nThe United Kingdom has not imposed any restrictions on inbound travellers. The government is considering a mandatory self-quarantine of inbound travellers for 14 days, although no date has been provided for implementation. French and Irish travellers would be exempt from the quarantine.\\n\\nInternal restrictions:\\nPeople in England are allowed to leave their homes only to shop for basic goods, to exercise, to receive care or help a vulnerable person and to travel to work which cannot be done from home. Those in Wales, Scotland and Northern Ireland are still instructed to stay home except for essential journeys.\\nSchools across the UK are closed until further notice, though some remain open to accommodate children of key workers. Pubs, restaurants, cafes, bars and other entertainment venues remain closed. Gatherings of more than two people are banned, unless it concerns members of the same household. The police have been given the power to disperse unauthorised gatherings and to fine those found to be violating the social distancing measures. Public transport is disrupted, notably in the capital, where London Underground (\\u2018tube\\u2019) services are being reduced, with around 40 stations closed. Train operators are running reduced timetables while airlines have also substantially cut flights. Gatwick Express has suspended its services until further notice. Security forces have increased powers to control and order individuals to restrict movement or return to their accommodation. Fines from \\xA3100 to \\xA33,200 are payable for infractions.\\n\\nRelaxation of restrictions:\\nThe UK government has set out a three phase plan for easing restrictions. The phases are provisionally dated from 13 May, 1 June and 4 July. Under the first phase, greater personal freedoms to exercise and meet in public are possible. The second phase will see primary schools, retailers and some sporting competitions return. The third phase will see some remaining businesses such as hairdressers reopen as well as places of worship.\"},TZ:{info:\"All travelers arriving will be subjected to an intensive screening and where necessary COVID-19 rapid testing.Travelers entering the country should be aware of a 14 days quarantine in a designated isolation facility. All travelers will then be informed informed of the designated isolation facilities, costs and arrangements in place to access to those facilities. Upon leaving the facilities, travellers will be required to register personal information for future tracking purposes.\",updated_at:\"2020-05-13\",source:\"https://www.pmldaily.com/news/2020/04/tanzania-suspends-international-flights-due-to-covid-19-inbound-travelers-to-be-quarantined-at-own-expense.html\\nhttps://allafrica.com/stories/202003210066.html\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nUNHAS\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Authorities resumes international passenger flights on 18 May after suspension because of COVID-19 (Xinhua, 18.05.2020)\\n\\nAll travellers including returning citizens and foreigners are required to go through a 14-day quarantine at their own cost at government-designated facilities. \\n\\nZanzibar bans all tourist flights from entering region because of COVID-19 (All Africa, 21.03.2020)\\n\\n\\nThe Tanzania-Zambia Railways Authority (TAZARA) will suspend cross-border passenger train services from 30 March until further notice, though cross-border freight trains and domestic trains operated by TAZARA in either country will not be affected.\\n\\nInternal restrictions:\\nDomestic flights remain operational, but options are limited.\\nPublic gatherings have been banned and all educational institutions remain closed.\"},US:{info:\"All international travellers who are permitted to enter should expect heightened screening measures and will be asked to self-quarantine for 14 days after their return.\",updated_at:\"2020-05-19\",source:\"https://www.iata.org/contentassets/0f6c2cd0ad4b4b44b59578b9af3e23ad/usa-ncov-measures.pdf\\nhttps://okcfox.com/news/local/coronavirus-cancels-multiple-flights-at-will-rogers-world-airport\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification subject to special conditions (from Haiti)\",restrictions:\"U.S. government extends ban on nonessential travel with Canada and Mexico shared borders through 22 June (Reuters, 19.05.2020). Governor of New York to reopen five regions on 15 May (Reuters, 14.05.2020)\\n\\nInternational restrictions:\\nUS nationals will be allowed to return after \\u2018appropriate screening\\u2019. Those returning from China\\u2019s Hubei province are subject to a mandatory 14-day quarantine. Entry is suspended until further notice for non-US nationals who have been to the following regions in the preceding 14 days: Mainland China. Iran.\\nThe Schengen Area of Europe, to include Austria, Belgium, Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Italy, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, the Netherlands, Norway, Poland, Portugal, Slovakia, Slovenia, Spain, Sweden and Switzerland. The United Kingdom and Ireland. Permanent residents of the US, immediate family members of US citizens and travellers on A-1, A-2, C-2, C-3, E-1, G-1, G-2, G-3, G-4, NATO-1 through NATO-4, and NATO-6 visas are exempt from regional restrictions and will be allowed to return. All international travellers who are permitted to enter should expect heightened screening measures and will be asked to self-quarantine for 14 days after their return. All flights from China are being re-routed through 11 airports: Dallas/Fort Worth International (DFW); Daniel K Inouye International (HNL); Detroit Metropolitan (DTW); Hartsfield-Jackson International (ATL); John F Kennedy International (JFK); Los Angeles International (LAX); Newark Liberty International (EWR); O\\u2019Hare International (ORD); San Francisco International (SFO); Seattle-Tacoma International (SEA); Washington Dulles International (IAD). Travel between the US and Canada, as well as between the US and Mexico, will remain closed to non-essential travel until 20 May. Essential travel may continue. The Department of State has issued a Global Health Advisory at level 4 (Do Not Travel) advising US citizens to avoid all international travel, and for US citizens already abroad to immediately return to the US unless they are prepared to remain abroad for an indefinite period. \\n\\nInternal restrictions:\\nAll 50 US states, as well as Puerto Rico (US), the US Virgin Islands (US), and Washington (DC) have declared a state of emergency or public health emergency as a result of the COVID-19 pandemic. Many have closed non-essential businesses and issued \\u2018stay at home\\u2019 orders, which prohibit all non-essential movement within their borders. Most have deployed National Guard personnel to assist emergency responders. Some states have ordered quarantines for travellers arriving from other parts of the US. Non-compliant travellers may face large fines or incarceration.\"},VI:{info:null,updated_at:\"2020-05-18\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\n\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nThere are no restrictions on inbound or outbound flights, however flight availability is very limited. Passengers entering the country will be screened and any showing symptoms will be required to quarantine for 14 days. \\n\\nInternal restrictions:\\nA state of emergency is in effect until 11 July. Ferries are allowed to depart from St. John to St. Thomas from 06.00 to 21.00 only accepting passengers with facemasks. Gatherings of more than fifty people are prohibited; residents are urged to maintain social distancing while in public areas. Face masks are required in enclosed, public areas. A safer-at-home order is in effect starting 4 May. Several non-essential businesses have been allowed to reopen, including religious facilities, private offices, retail shops, taxi services, rental cars, gyms, sporting areas, movie theaters, hair salons and massage therapists. Gaming centers and casinos are to remain closed.\"},UY:{info:\"The Ministries of Health and Interior are encouraging the public to self-quarantine.\\r\\nThose age 65 and older must observe mandatory self-quarantine.\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://uy.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nUruguay has closed all its borders. All inbound and outbound commercial flights are suspended. Air, land and sea borders with Argentina and Brazil have been closed to foreign nationals until further notice. Passengers arriving from China, France, Germany, Iran, Italy, Japan, Singapore, South Korea or Spain and will be subject to a 14-day quarantine. Citizens and residents may only enter through Artigas, Bella Union, Salto, Paysandu, Fray Bentos, Mercedes, Colonia, Carmelo, Nueva Palmira, Duranzo, Melilla, Maldonado, Piriapolis, Chuy, Rio Branco, Melo-Acegua, Rivera, Puerto de Montevideo, Puerto la Paloma, Control Unico.\\n\\nOutbound restrictions:\\nUruguayan nationals and visitors are prohibited from leaving the country for tourism.\\n\\nInternal restrictions:\\nThe government recommends self quarantine if possible. Those age 65 and older must observe mandatory self-quarantine. The use of masks is mandatory in supermarkets and warehouses. The government called for the restriction of social gatherings and large crowds.\\n\\n\\n\"},UZ:{info:\"Diplomatic Note of 06.03.2020:  Persons of any nationality who have been in China, South Korea, Iran, Italy, Afghanistan or Japan during the last 14 days and who are returning in \\u201Corganized groups\\u201D will be placed in official quarantine in MOH-operated facilities.  Individual passengers who have visited  a list of countries during the past 14 days will be subject to home/hotel quarantine (self-quarantine). Those traveling on diplomatic or official passports are not subject to quarantine requirements. Quarantine is applied based on location during the last 14 days, not citizenship. \",updated_at:\"2020-05-17\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening \\nhttps://uz.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"Authorities extends COVID-19 quarantine measures until 1 June; domestic air and rail link to be partially resumed from 18 May (China.org,15.05.2020)\\n\\nInternational restrictions:\\nAll borders are indefinitely closed to people movement, with the exceptions of foreign nationals who wish to leave the country. People are required to wear masks in public places. Those who do not abide by the order will be fined; those who repeatedly violate the order will be subject to a triple-amount fine. All airport operations and air traffic are suspended until at least 30 June. In-country foreign nationals will be allowed to leave on specific flights, which occur sporadically. Members who choose to remain in the country should review their visas and consider the implications for potentially overstaying the expiration date.\\n\\nInternal restrictions\\nDomestic air and rail services will be partially resumed from 18 May, subject to health measures. Round-trip flights between the capital Tashkent and cities of Nukus, Termez and Urgench will resume. Domestic train services connecting the capital Tashkent to cities including Navoi, Bukhara, Karshi and Andijan will also resume.\\nThe national quarantine is extended to 1 June while some restrictions on businesses have been gradually lifted based on the three levels of quarantine which have been applied regionally according to the number of COVID-19 cases. The three quarantine levels are defined as red, yellow and green. Each region has been assigned a quarantine level and movement restrictions have been applied according to the level assigned.\\nThe red level applies to regions where COVID-19 cases have been confirmed within the last 14 days. Andijan, Bukhara, Fergana, Karakalpakstan, Namangan, Samarkand, Sirdarya and Tashkent (excluding Tashkent city) regions have been designated as red zones. In these regions, existing quarantine measures remain in place, including internal movement restrictions mandating that all residents stay home, except for essential purposes or for work. Only essential and approved businesses are allowed to operate, including pharmacies, grocery shops, banks, dry cleaners and notaries. People are allowed to walk near their homes, provided they maintain social distancing and wear masks. Driving is allowed from 18 May with a permit sticker from 07.00 to 10.00 (local time) and from 17.00 to 20.00 for essential shopping or work. Intercity and inter-regional vehicular movement remains restricted, except for government employees and for those with permits. As of 15 May, sectors including handicraft, maintenance of agricultural machinery and electronic appliance, rent and lease, and accounting, auditing as well as tax consulting have been allowed to operate.\\nThe yellow level applies to regions where COVID-19 cases have not been confirmed within the last 14 days, but where COVID-19 patients are undergoing treatment. This category includes Tashkent, as well as Khorezm and Surkhandarya regions. The same movement restrictions under the red quarantine level apply. However, more businesses are allowed to reopen, including non-food stores, florists, jewellers, hotels, and hair and beauty salons. Taxis are permitted, along with bicycles and scooters. Starting from 15 May, businesses including real estate, advertising and marketing, private employment agencies have been able to resume. In the meantime, people have been allowed to visit parks from 09.00 to 20.00 in strict compliance with social distancing guidelines. People will be allowed to drive between 06.00 to 22.00 from 18 may.\\nThe green level applies to regions that have no confirmed COVID-19 cases or where all patients have recovered. Jizzakh, Kashkadarya and Navoi regions have been designated as green zones. From 15 May, open-air stadiums and museums are allowed to reopen with a limited number of visitors. In addition to the activities allowed under the red and yellow quarantine levels, permits are not required to drive cars from 18 May.\\nThe country\\u2019s national carrier, Uzbekistan Airways, will restart a limited number of domestic passenger flights from 18 May. Travellers will need to present a health certificate showing they have tested negative for COVID-19 before being allowed to board. In addition, passengers will be required to pass the coronavirus infection test at the Center for Sanitary and Epidemiological Surveillance no more than 120 hours before departure.\\nPeople who need to go outside for urgent matters are required to wear masks in public places, while gatherings of more than three people, with the exception of groups involving members of the same family, are banned. Visitors to supermarkets and other essential stores should be prepared to have their temperature taken; those with a temperature deemed abnormal will be denied access and advised to seek medical support. Individuals may also conduct trips to and from their workplace provided it is in an approved sector. Any perceived violations of the government restrictions will be subject to legal action.\"},VU:{info:\"People identified as persons of interest based on testing and screening measures may asked to undergo a 14-day self-quarantine, or may be subjected to government-imposed quarantine at a designated health facility, quarantine site, or hotel- or denied entry.\",updated_at:\"2020-05-10\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nThe international terminal at Port Vila Airport is closed until further notice. There will be no international flights operating in or out of the country.\\nSpecial consideration will be applied to medical evacuations, foreign diplomatic missions and international organisations in Vanuatu on a case-by-case basis, in consultation with Vanuatu\\u2019s Department of Foreign Affairs and International Cooperation.\\nReturning Citizens, permanent residents and diplomats will be allowed to return but will have to undergo a 14-day quarantine upon arrival.\\n\\nInternal restrictions:\\nA nationwide curfew is no longer in effect to allow Cyclone Harold-related relief work.\\nA state of emergency is in place until at least 10 June. While schools have reopened and businesses are now allowed to operate, strict social distancing and hygiene measures are still required.\"},VE:{info:\"Suspected cases will be subject to quarantine for 30 days.\",updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"New curfews imposed in several border towns (Reuters, 19.05.2020)\\nFlights to Venezuela are suspended.\\n- This does not apply to humanitarian flights.\\n\\nInbound restrictions: Entry restrictions imposed on travellers from any European country, Colombia, Dominican Republic and Panama. All private and commercial flights are suspended until 12 May. All travellers suspected of being infected with COVID-19 are subject to 30-day quarantine.\\n\\nOutbound restrictions: All private and commercial flights are suspended until 12 June.\\n\\nConditions and internal restrictions: Domestic flights have been suspended.\\nThe nationwide lockdown in place extended until 12 June; enforced by security forces.\\nMilitary checkpoints have been reported at entrances to the capital Caracas.\\nStatewide curfews are in place in Lara from 14.00 to 07.00 (all times local), Nueva Esparta from 16.00 to 10.00 and Vargas state from 14.00 to 07.00.\\n\\n\"},VN:{info:\"Travelers entering Vietnam, including Vietnamese nationals, are subject to mandatory, centralized quarantine for 14 days. This quarantine requirement has in some cases been prolonged to more than 14 days when deemed necessary by the authorities.\",updated_at:\"2020-05-13\",source:\"https://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nhttps://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://vn.usembassy.gov/u-s-citizen-services/covid-19-information/\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Commercial flights at the Quang Ninh Province-based Van Don International Airport will resume from May 4. Daily flights on the Van Don-Ho Chi Minh City route will be offered by budget carrier Vietjet, while four weekly flights on the route will be provided by national flag carrier Vietnam Airlines from May 16 and Bamboo Airways is to operate daily flight on the route from June 1. \\nVietnam Airlines will also operate three flights linking Van Don and Danang per week from May 16. (The Star, 29.04.2020) \\n\\n1. Passengers are not allowed to enter Viet Nam.\\n- This does not apply to passengers for diplomatic or official duty. They will be subject to mandatory medical declaration and self-isolation.\\n- This does not apply to passengers who are experts, business managers or highly skilled workers. They will be subject to mandatory medical declaration and self-isolation.\\n- This does not apply to passengers approved by National Steering Committee on Covid-19 Prevention and Control.\\n- This does not apply to airline crew. They will be subject to mandatory medical declaration and other effective regulations as well as observing self-quarantine during their stay until the next flight schedule.\\n2. For transportation of nationals of Vietnam returning to Vietnam, airlines must contact the Vietnamese Diplomatic Representative agency in the local country in advance. Noi Bai International Airport (HAN) is temporarily suspending all flights.\\n3. All passengers will be placed on quarantine at a designated facility for 14 days upon arrival.\\n4. All visa issuances are suspended.\\n5. All passengers must fill out a quarantine form prior to arrival.\\n6. Passengers who travel for diplomatic or official purpose will undergo a medical examination at the border before allowed to enter Viet Nam.\\n7. Nationals of Italy and Korea (Rep.) with a normal passport are no longer visa exempt.\\n8. Nationals of Denmark, Finland, France, Germany, Norway, Spain, Sweden and passengers with a British passport are no longer visa exempt.\\n9. Passengers with a Certificate of Visa Exemption issued by Viet Nam are no longer visa exempt if they reside in China (People's Rep.), Denmark, Finland, France, Germany, Iran, Italy, Korea (Rep.), Norway, Spain, Sweden or United Kingdom.\\n10. Nationals of Belarus, Japan and Russian Fed. with a normal passport are no longer visa exempt.\\n11. Passengers with a Certificate of Visa Exemption issued by Viet Nam are no longer visa exempt if they are nationals of Belarus, Japan or Russian Fed. with a normal passport.       \\n\\nDomestic flights to remain suspended despite expiration of government's COVID-19 social distancing order on 15 April (Reuters, 13.04.2020).\\n\\nInternal restrictions: \\nVietnamese schools have reopened.\\nA COVID-19 national epidemic has been declared.\\nDomestic flights have gradually resumed operations since 23 April.\\nHaiphong has banned anyone coming from Vietnam\\u2019s designated endemic areas. Vehicles leaving the city must get permission from the Traffic Police Division and those entering the city must present written confirmation from the checkpoint chief. These forms are distributed at each checkpoint. Anyone who has completed quarantine in a different city must present a certificate of expiration of the quarantine and are still required to observe precautionary measures. Taxi services and parks have been suspended.\\nThose travelling from Hanoi or Ho Chi Minh City to Da Nang or Quang Nam provinces are no longer subject to 14-day quarantine in a government-designated facility.\\nAll provinces and cities have been downgraded to \\u2018low risk\\u2019, and most non-essential business operations have been allowed to resume.\\nStringent distancing measures and mandatory mask wearing in crowded public places will continue to be enforced across different risk areas.\\nCheckpoints, where police will take people's temperatures and conduct vehicle checks, remain at borders between cities and provinces. In addition, anyone not wearing masks, littering used masks in public spaces or roads, anyone not complying with food services suspension orders and restrictions on commercial activity and public meetings, failure to observe medical precautions before entering or leaving an affected area will be fined.\\nInter-provincial ground movement has been relaxed. Public transportation including taxis and coaches are permitted to operate with reduced schedules.\\nSecurity checkpoints, which allow the police to conduct temperature and vehicle checks, will remain at borders between cities and provinces.\\nPublic bus services in Ho Chi Minh City resumed on 4 May.\\n\\n\\n\\n\\n\"},WF:{info:null,updated_at:\"2020-04-05\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\r\\n\\r\\nAll international air travel reduced to only one flight around every ten days with New Caledonia (with stop-over at Fiji). All visa applications suspended for Fijians seeking entry. Strict health checks and quarantine measures implemented for inbound travellers.\\r\\nInternal restrictions:\\r\\n\\r\\nAuthorities have taken measures for the public to practice social distancing and reduced public gatherings such as sports and cultural activities.\"},YE:{info:\"Home quarantine for a period of 14 days from the date of arrival.\",updated_at:\"2020-04-27\",source:\"UNHAS (source: HC/RC protocol , MoH)\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"Authorities in Aden announce three-day, 24-hour curfew after confirmed cases of COVID-19 (Reuters, 29.04.2020)\\n\\nAll commercial flights are suspended.\\n\\nUNHAS Flights commenced in to Sanaa on 11 May 2020 from Addis\\n\\nA mechanism has been put in place by the Internationally Recognized Government (IRG) for the entry of relief and humanitarian personnel to Yemen that includes that only international personnel: are to travel to the country, if it is absolutely necessary; must have a recent examination certificate (PCR) with a validity of not more than 48 hours from the date of the trip; must home quarantine for a period of 14 days from the date of arrival; a test after this period will be conducted by Ministry of Health Response Team.\\n\\nYemeni authorities have decided to close the al-Wadia border crossing with Saudi Arabia from Wednesday 9 April until further notice.\"},ZM:{info:\"The Zambian authorities require individuals entering Zambia to enter mandatory self-quarantine for 14 days. Travellers arriving with symptoms or testing positive for coronavirus will be quarantined in a government facility. In either scenario, you will need to complete the quarantine period before being able to leave Zambia.\",updated_at:\"2020-05-16\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://www.osac.gov/Content/Report/c35c7cf0-447b-4d2d-bbf9-1844947e383e\\nhttps://zm.usembassy.gov/covid-19-information/\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nAll international flights to and from Harry Mwaanga Nkumbula and Mfuwe international airports are suspended. International flights may only operate from Kenneth Kaunda International Airport. All incoming travellers will be subject to airport screening measures and 14-day self-quarantine upon entry. Travellers who show symptoms will be quarantined at a government health facility while those asymptomatic need to self-isolate for 14 days. Travellers can report COVID-19-related concerns on dedicated hotlines at 909 (toll-free), 0953898941, 0964638726 and 0974493553. Local airline Proflight suspended international flights until at least 31 May. The Tanzania-Zambia Railways Authority (TAZARA) suspended cross-border passenger train services until further notice, though cross-border freight trains and domestic trains operated by TAZARA in either country will not be affected. The authorities have indefinitely suspended issuance of tourist visas, while application for visas of non-essential purposes will not be permitted. Applications for other types of visas will require the approval from the Ministry of Health. Trucks are allowed to enter the country through the Chirundu, Katima Mulilo, Kazungula, Livingstone and Nakonde border posts, though drivers are asked to follow quarantine measures upon entry.\\n\\nInternal restrictions:\\nLocal airline Proflight has suspended its domestic flights until at least 31 May. Domestic flights are resuming from 6 May to Lusaka and Ndola on a limited schedule. Pedestrian cross-border movement has resumed between Zambia and the Democratic Republic of Congo (DRC) through the Kasumbalesa (DRC) border crossing, 38 miles (46km) north of Chingola (Copperbelt Province). Non-essential public gatherings have been banned. Public gatherings (i.e. conferences, weddings, funerals, and festivals) of more than 50 people have been banned. Bars, nightclubs, cinemas, gyms and casinos have also been closed. Restaurants will only provide delivery services.\\n\"},ZW:{info:\"All arrivals will be subject to strict screening procedures including rigorous enforcement of a 21-day self-quarantine.\",updated_at:\"2020-05-17\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\\nhttps://zw.usembassy.gov/covid-19-information-2/\\nhttps://www.iatatravelcentre.com/international-travel-document-news/1580226297.htm\\nReuters\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nInternational flights are still operating although these are limited and may be further reduced over the coming days and weeks.\\nAll land borders remain closed except for returning residents and cargo. Returning residents will be subject to strict health screening and 21-day self-quarantine. Entry exceptions may also be applied to citizens bringing remittances from abroad.\\nTravellers arriving from countries with confirmed COVID-19 cases will be subject to medical screening upon arrival. Travellers arriving from countries with local transmission cases (as referenced by the WHO) are advised to self-quarantine for a period of 21 days.\\nTravellers with signs and symptoms of COVID-19 will be subject to immediate isolation at a medical facility upon arrival.\\nAll travellers should obtain a medical certificate proving that they are clear of COVID-19 prior to travel to Zimbabwe; there is potential, based on a passenger\\u2019s nationality and recent travel history, that they may be asked at immigration to produce such a certificate in order to be granted entry. Anecdotal evidence suggests that passengers arriving from countries without confirmed COVID-19 cases or a \\u201Clow\\u201D number of cases will not be required to present a certificate, however the authorities have not produced a specific list. Furthermore, authorities have asked travellers who have recently been to or are arriving from countries such as China, Iran, Italy and South Korea, to suspend travel to Zimbabwe, as they are likely to be refused entry. For profile and itinerary-specific information, travellers are advised to contact the relevant airline, or the nearest Zimbabwean Embassy.\\nAnyone displaying a symptom associated with coronavirus will be placed in a Government of Zimbabwe facility for testing. Anyone who tests positive will be treated in a Government of Zimbabwe treatment centre. Reports suggest that some foreign nationals are being quarantined for 21 days on arrival at Harare airport despite testing negative for coronavirus (COVID-19).\\nAnyone accompanying dead bodies of relatives from outside the country must undergo quarantine for 21 days before the burial. The same applies to cases where the body is transiting through Mozambique.\\n\\nInternal restrictions:\\nPresident Mnangagwa has classified COVID-19 as a \\u2018National Disaster;\\u2019 this allows authorities to deploy resources in combatting the pandemic and also allows the government to forbid gatherings exceeding 100 people.\\nA nationwide lockdown is in place until further notice. The restrictions will be reassessed every two weeks. During this period, people will only be allowed to leave their home to purchase necessary supplies such as food and medicine, and seek medical care. Exceptions may be applied to farmers delivering their products to markets and citizens bringing remittances from abroad.\\nSome internal measures will ease from 4 May; formal companies will be allowed to operate from 08.00 to 16.30 and public busses will be allowed to transport passengers provided they observe social distancing, wear masks, and that buses have thermometers to screen passengers.\\nDuring the lockdown, the military will be deployed to ensure that the population complies with restrictions.\\nShops in Matabeleland South Province are now limiting the quantities being purchased per customer due to declining supplies of basic commodities.\\nPeople are required to wear masks outside their homes.\\n\\n\"},RKS:{info:null,updated_at:\"2020-05-19\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification required for entering the country\",restrictions:\"International restrictions:\\nLand borders with Albania have been closed until further notice.\\nAll flights from Pristina International Airport are suspended until further notice.\\nLand borders are closed to entry for non-Kosovo citizens. Returning citizens are quarantined for 14 days at a facility.\\n\\nInternal restrictions:\\nPeople are permitted to move around freely for four hours per day, split into two separate 12-minute time slots. Citizens are allocated a time slot based on their national ID number. Mouth and nose must be covered while outside.\\nPublic transport within cities has resumed. Passengers are required to prove that they are travelling within their permitted time slots.\\nRetail stores, dentists, hairdressers, physiotherapists and open-air markets have reopened. Restaurants are open for takeaway only.\\n\\nLifting of restrictions:\\nKosovo has entered the second phase of a gradual easing of restrictive measures, which will last from 18 May until 1 June. From 18 May, people over the age of 16 are allowed outside of their place of residence for two separate 2 hour periods during the day, dependent on the penultimate digit of their ID or Passport number. \\nStarting 1 June, public transport will be fully available (including taxis) and the country will review the reopening of its borders and airports.\"},EUR:{info:null,updated_at:\"2020-05-10\",source:\"https://pandemic.internationalsos.com/2019-ncov/ncov-travel-restrictions-flight-operations-and-screening\",certification_status:\"COVID-19 negative certification not required / not known\",restrictions:\"International restrictions:\\nWhile the European Commission (EC) recommends that member states close their external borders to all non-EU citizens until 15 June.\\nThe ban will affect all non-EU nationals except long-term residents, family members of EU nationals and diplomats, cross-border and healthcare workers, and people transporting goods.\\nIceland, Liechtenstein, Norway and Switzerland UK citizens will be unaffected.\\nThe Ireland/Northern Ireland border is not affected.\\nInternal travel within the EU remains based upon each countries\\u2019 respective restrictions.\"}});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/countryInfo.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _arrayLikeToArray; });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz82Yjc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmOztBQUVBLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _arrayWithHoles; });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRoSG9sZXMuanM/MGQyMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _assertThisInitialized; });\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzPzI1N2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _classCallCheck; });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanM/ZDRlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _createClass; });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanM/YmVlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _getPrototypeOf; });\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YuanM/N2U4NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICB9O1xuICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inherits.js":
/*!*************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inherits.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _inherits; });\n/* harmony import */ var _setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object(_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(subClass, superClass);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMuanM/MjYyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBOEM7QUFDL0I7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILGtCQUFrQiwrREFBYztBQUNoQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZlwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/inherits.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _iterableToArrayLimit; });\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanM/MDlmMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkNBQTZDLCtCQUErQjtBQUM1RTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _nonIterableRest; });\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzPzNkOGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _possibleConstructorReturn; });\n/* harmony import */ var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/esm/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (Object(_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return Object(_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(self);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcz85OWRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStDO0FBQ2E7QUFDN0M7QUFDZixlQUFlLG1FQUFPO0FBQ3RCO0FBQ0E7O0FBRUEsU0FBUyxzRUFBcUI7QUFDOUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfdHlwZW9mIGZyb20gXCIuLi8uLi9oZWxwZXJzL2VzbS90eXBlb2ZcIjtcbmltcG9ydCBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _setPrototypeOf; });\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanM/YjM4MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NldFByb3RvdHlwZU9mLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _slicedToArray; });\n/* harmony import */ var _arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles */ \"./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\");\n/* harmony import */ var _iterableToArrayLimit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArrayLimit */ \"./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\");\n/* harmony import */ var _unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray */ \"./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\");\n/* harmony import */ var _nonIterableRest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest */ \"./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\");\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return Object(_arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || Object(_iterableToArrayLimit__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr, i) || Object(_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr, i) || Object(_nonIterableRest__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz8zODM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUE4QztBQUNZO0FBQ1k7QUFDdEI7QUFDakM7QUFDZixTQUFTLCtEQUFjLFNBQVMscUVBQW9CLFlBQVksMkVBQTBCLFlBQVksZ0VBQWU7QUFDckgiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0XCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXlcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0XCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _typeof; });\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzPzUzY2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBfdHlwZW9mKG9iaik7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/typeof.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _unsupportedIterableToArray; });\n/* harmony import */ var _arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray */ \"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return Object(_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/MDZjNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBa0Q7QUFDbkM7QUFDZjtBQUNBLG9DQUFvQyxpRUFBZ0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGlFQUFnQjtBQUN0RyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheUxpa2VUb0FycmF5IGZyb20gXCIuL2FycmF5TGlrZVRvQXJyYXlcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inheritsLoose.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inheritsLoose.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlLmpzPzU1YjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzTG9vc2U7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/inheritsLoose.js\n");

/***/ }),

/***/ "./node_modules/@emotion/cache/dist/cache.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/cache/dist/cache.browser.esm.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/sheet */ \"./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/stylis */ \"./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/weak-memoize */ \"./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\");\n\n\n\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stylisOptions);\n\n  if (true) {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if ( true && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (true) {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__[\"StyleSheet\"]({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (createCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY2FjaGUvZGlzdC9jYWNoZS5icm93c2VyLmVzbS5qcz80ZWE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRDO0FBQ1A7QUFDTjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsdURBQU07O0FBRXpCLE1BQU0sSUFBcUM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0I7O0FBRXBCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREOztBQUU1RDtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVSxLQUFxQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0sSUFBcUM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLGVBQWUseURBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFZSwwRUFBVyxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2NhY2hlL2Rpc3QvY2FjaGUuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAnQGVtb3Rpb24vc2hlZXQnO1xuaW1wb3J0IFN0eWxpcyBmcm9tICdAZW1vdGlvbi9zdHlsaXMnO1xuaW1wb3J0ICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGh5c3VsdGFuL3N0eWxpcy5qcy90cmVlL21hc3Rlci9wbHVnaW5zL3J1bGUtc2hlZXRcbi8vIGlubGluZWQgdG8gYXZvaWQgdW1kIHdyYXBwZXIgYW5kIHBlZXJEZXAgd2FybmluZ3MvaW5zdGFsbGluZyBzdHlsaXNcbi8vIHNpbmNlIHdlIHVzZSBzdHlsaXMgYWZ0ZXIgY2xvc3VyZSBjb21waWxlclxudmFyIGRlbGltaXRlciA9ICcvKnwqLyc7XG52YXIgbmVlZGxlID0gZGVsaW1pdGVyICsgJ30nO1xuXG5mdW5jdGlvbiB0b1NoZWV0KGJsb2NrKSB7XG4gIGlmIChibG9jaykge1xuICAgIFNoZWV0LmN1cnJlbnQuaW5zZXJ0KGJsb2NrICsgJ30nKTtcbiAgfVxufVxuXG52YXIgU2hlZXQgPSB7XG4gIGN1cnJlbnQ6IG51bGxcbn07XG52YXIgcnVsZVNoZWV0ID0gZnVuY3Rpb24gcnVsZVNoZWV0KGNvbnRleHQsIGNvbnRlbnQsIHNlbGVjdG9ycywgcGFyZW50cywgbGluZSwgY29sdW1uLCBsZW5ndGgsIG5zLCBkZXB0aCwgYXQpIHtcbiAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgLy8gcHJvcGVydHlcbiAgICBjYXNlIDE6XG4gICAgICB7XG4gICAgICAgIHN3aXRjaCAoY29udGVudC5jaGFyQ29kZUF0KDApKSB7XG4gICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgLy8gQGltcG9ydFxuICAgICAgICAgICAgICBTaGVldC5jdXJyZW50Lmluc2VydChjb250ZW50ICsgJzsnKTtcbiAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIC8vIGNoYXJjb2RlIGZvciBsXG5cbiAgICAgICAgICBjYXNlIDEwODpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgLy8gY2hhcmNvZGUgZm9yIGJcbiAgICAgICAgICAgICAgLy8gdGhpcyBpZ25vcmVzIGxhYmVsXG4gICAgICAgICAgICAgIGlmIChjb250ZW50LmNoYXJDb2RlQXQoMikgPT09IDk4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAvLyBzZWxlY3RvclxuXG4gICAgY2FzZSAyOlxuICAgICAge1xuICAgICAgICBpZiAobnMgPT09IDApIHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAvLyBhdC1ydWxlXG5cbiAgICBjYXNlIDM6XG4gICAgICB7XG4gICAgICAgIHN3aXRjaCAobnMpIHtcbiAgICAgICAgICAvLyBAZm9udC1mYWNlLCBAcGFnZVxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgIGNhc2UgMTEyOlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBTaGVldC5jdXJyZW50Lmluc2VydChzZWxlY3RvcnNbMF0gKyBjb250ZW50KTtcbiAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQgKyAoYXQgPT09IDAgPyBkZWxpbWl0ZXIgOiAnJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIGNhc2UgLTI6XG4gICAgICB7XG4gICAgICAgIGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpO1xuICAgICAgfVxuICB9XG59O1xuXG52YXIgY3JlYXRlQ2FjaGUgPSBmdW5jdGlvbiBjcmVhdGVDYWNoZShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpIG9wdGlvbnMgPSB7fTtcbiAgdmFyIGtleSA9IG9wdGlvbnMua2V5IHx8ICdjc3MnO1xuICB2YXIgc3R5bGlzT3B0aW9ucztcblxuICBpZiAob3B0aW9ucy5wcmVmaXggIT09IHVuZGVmaW5lZCkge1xuICAgIHN0eWxpc09wdGlvbnMgPSB7XG4gICAgICBwcmVmaXg6IG9wdGlvbnMucHJlZml4XG4gICAgfTtcbiAgfVxuXG4gIHZhciBzdHlsaXMgPSBuZXcgU3R5bGlzKHN0eWxpc09wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGlmICgvW15hLXotXS8udGVzdChrZXkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbW90aW9uIGtleSBtdXN0IG9ubHkgY29udGFpbiBsb3dlciBjYXNlIGFscGhhYmV0aWNhbCBjaGFyYWN0ZXJzIGFuZCAtIGJ1dCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgd2FzIHBhc3NlZFwiKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5zZXJ0ZWQgPSB7fTsgLy8gJEZsb3dGaXhNZVxuXG4gIHZhciBjb250YWluZXI7XG5cbiAge1xuICAgIGNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyIHx8IGRvY3VtZW50LmhlYWQ7XG4gICAgdmFyIG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInN0eWxlW2RhdGEtZW1vdGlvbi1cIiArIGtleSArIFwiXVwiKTtcbiAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKG5vZGVzLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgdmFyIGF0dHJpYiA9IG5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1lbW90aW9uLVwiICsga2V5KTsgLy8gJEZsb3dGaXhNZVxuXG4gICAgICBhdHRyaWIuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChpZCkge1xuICAgICAgICBpbnNlcnRlZFtpZF0gPSB0cnVlO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChub2RlLnBhcmVudE5vZGUgIT09IGNvbnRhaW5lcikge1xuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB2YXIgX2luc2VydDtcblxuICB7XG4gICAgc3R5bGlzLnVzZShvcHRpb25zLnN0eWxpc1BsdWdpbnMpKHJ1bGVTaGVldCk7XG5cbiAgICBfaW5zZXJ0ID0gZnVuY3Rpb24gaW5zZXJ0KHNlbGVjdG9yLCBzZXJpYWxpemVkLCBzaGVldCwgc2hvdWxkQ2FjaGUpIHtcbiAgICAgIHZhciBuYW1lID0gc2VyaWFsaXplZC5uYW1lO1xuICAgICAgU2hlZXQuY3VycmVudCA9IHNoZWV0O1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzZXJpYWxpemVkLm1hcCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBtYXAgPSBzZXJpYWxpemVkLm1hcDtcbiAgICAgICAgU2hlZXQuY3VycmVudCA9IHtcbiAgICAgICAgICBpbnNlcnQ6IGZ1bmN0aW9uIGluc2VydChydWxlKSB7XG4gICAgICAgICAgICBzaGVldC5pbnNlcnQocnVsZSArIG1hcCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBzdHlsaXMoc2VsZWN0b3IsIHNlcmlhbGl6ZWQuc3R5bGVzKTtcblxuICAgICAgaWYgKHNob3VsZENhY2hlKSB7XG4gICAgICAgIGNhY2hlLmluc2VydGVkW25hbWVdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZjczNzFhNGNkN2U2MDA5ZWY2MWQwYVxuICAgIHZhciBjb21tZW50U3RhcnQgPSAvXFwvXFwqL2c7XG4gICAgdmFyIGNvbW1lbnRFbmQgPSAvXFwqXFwvL2c7XG4gICAgc3R5bGlzLnVzZShmdW5jdGlvbiAoY29udGV4dCwgY29udGVudCkge1xuICAgICAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgICAgIGNhc2UgLTE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgd2hpbGUgKGNvbW1lbnRTdGFydC50ZXN0KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICAgIGNvbW1lbnRFbmQubGFzdEluZGV4ID0gY29tbWVudFN0YXJ0Lmxhc3RJbmRleDtcblxuICAgICAgICAgICAgICBpZiAoY29tbWVudEVuZC50ZXN0KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICAgICAgY29tbWVudFN0YXJ0Lmxhc3RJbmRleCA9IGNvbW1lbnRFbmQubGFzdEluZGV4O1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3VyIHN0eWxlcyBoYXZlIGFuIHVudGVybWluYXRlZCBjb21tZW50IChcIi8qXCIgd2l0aG91dCBjb3JyZXNwb25kaW5nIFwiKi9cIikuJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbW1lbnRTdGFydC5sYXN0SW5kZXggPSAwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIHN0eWxpcy51c2UoZnVuY3Rpb24gKGNvbnRleHQsIGNvbnRlbnQsIHNlbGVjdG9ycykge1xuICAgICAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgICAgIGNhc2UgLTE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgdmFyIGZsYWcgPSAnZW1vdGlvbi1kaXNhYmxlLXNlcnZlci1yZW5kZXJpbmctdW5zYWZlLXNlbGVjdG9yLXdhcm5pbmctcGxlYXNlLWRvLW5vdC11c2UtdGhpcy10aGUtd2FybmluZy1leGlzdHMtZm9yLWEtcmVhc29uJztcbiAgICAgICAgICAgIHZhciB1bnNhZmVQc2V1ZG9DbGFzc2VzID0gY29udGVudC5tYXRjaCgvKDpmaXJzdHw6bnRofDpudGgtbGFzdCktY2hpbGQvZyk7XG5cbiAgICAgICAgICAgIGlmICh1bnNhZmVQc2V1ZG9DbGFzc2VzICYmIGNhY2hlLmNvbXBhdCAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICB1bnNhZmVQc2V1ZG9DbGFzc2VzLmZvckVhY2goZnVuY3Rpb24gKHVuc2FmZVBzZXVkb0NsYXNzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlnbm9yZVJlZ0V4cCA9IG5ldyBSZWdFeHAodW5zYWZlUHNldWRvQ2xhc3MgKyBcIi4qXFxcXC9cXFxcKiBcIiArIGZsYWcgKyBcIiBcXFxcKlxcXFwvXCIpO1xuICAgICAgICAgICAgICAgIHZhciBpZ25vcmUgPSBpZ25vcmVSZWdFeHAudGVzdChjb250ZW50KTtcblxuICAgICAgICAgICAgICAgIGlmICh1bnNhZmVQc2V1ZG9DbGFzcyAmJiAhaWdub3JlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlIHBzZXVkbyBjbGFzcyBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcyArIFwiXFxcIiBpcyBwb3RlbnRpYWxseSB1bnNhZmUgd2hlbiBkb2luZyBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuIFRyeSBjaGFuZ2luZyBpdCB0byBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcy5zcGxpdCgnLWNoaWxkJylbMF0gKyBcIi1vZi10eXBlXFxcIi5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdmFyIGNhY2hlID0ge1xuICAgIGtleToga2V5LFxuICAgIHNoZWV0OiBuZXcgU3R5bGVTaGVldCh7XG4gICAgICBrZXk6IGtleSxcbiAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgICBzcGVlZHk6IG9wdGlvbnMuc3BlZWR5XG4gICAgfSksXG4gICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgaW5zZXJ0ZWQ6IGluc2VydGVkLFxuICAgIHJlZ2lzdGVyZWQ6IHt9LFxuICAgIGluc2VydDogX2luc2VydFxuICB9O1xuICByZXR1cm4gY2FjaGU7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDYWNoZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@emotion/cache/dist/cache.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/core/dist/core.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/core/dist/core.browser.esm.js ***!
  \*************************************************************/
/*! exports provided: css, CacheProvider, ClassNames, Global, ThemeContext, jsx, keyframes, withEmotionCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CacheProvider\", function() { return CacheProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassNames\", function() { return ClassNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Global\", function() { return Global; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThemeContext\", function() { return ThemeContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"jsx\", function() { return jsx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyframes\", function() { return keyframes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withEmotionCache\", function() { return withEmotionCache; });\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/inheritsLoose.js\");\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/cache */ \"./node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/utils */ \"./node_modules/@emotion/utils/dist/utils.browser.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/sheet */ \"./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/css.browser.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return _emotion_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\nvar EmotionCacheContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? Object(_emotion_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"])() : null);\nvar ThemeContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"getRegisteredStyles\"])(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])(registeredStyles);\n\n  if ( true && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"insertStyles\"])(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( false || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(type, newProps);\n\n  return ele;\n};\n\nvar Emotion =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache, ref) {\n  // use Context.read for the theme when it's stable\n  if (typeof props.css === 'function') {\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (true) {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"].apply(undefined, args);\n  }\n\n  if ( true && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (true) {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|)jsx.*\\n\\s+at ([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"].apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache) {\n  if ( true && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n      var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])([styles(theme)]);\n      return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])([styles]);\n  return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default()(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new _emotion_sheet__WEBPACK_IMPORTED_MODULE_5__[\"StyleSheet\"]({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"insertStyles\"])(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nvar keyframes = function keyframes() {\n  var insertable = _emotion_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"getRegisteredStyles\"])(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])(args, context.registered);\n\n      {\n        Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"insertStyles\"])(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n\n    return ele;\n  });\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/dist/core.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/css/dist/css.browser.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@emotion/css/dist/css.browser.esm.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_0__[\"serializeStyles\"])(args);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (css);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL2Rpc3QvY3NzLmJyb3dzZXIuZXNtLmpzPzg5ODkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFxRDs7QUFFckQ7QUFDQSxxRUFBcUUsYUFBYTtBQUNsRjtBQUNBOztBQUVBLFNBQVMsMEVBQWU7QUFDeEI7O0FBRWUsa0VBQUcsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jc3MvZGlzdC9jc3MuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnO1xuXG5mdW5jdGlvbiBjc3MoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gc2VyaWFsaXplU3R5bGVzKGFyZ3MpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjc3M7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/dist/css.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/hash/dist/hash.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/hash/dist/hash.browser.esm.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (murmur2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaGFzaC9kaXN0L2hhc2guYnJvd3Nlci5lc20uanM/Y2U5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7O0FBRVo7QUFDQTtBQUNBOztBQUVBLFFBQVEsVUFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsc0VBQU8sRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanNcbi8vIFBvcnRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hYXBwbGVieS9zbWhhc2hlci9ibG9iLzYxYTA1MzBmMjgyNzdmMmU4NTBiZmMzOTYwMGNlNjFkMDJiNTE4ZGUvc3JjL011cm11ckhhc2gyLmNwcCNMMzctTDg2XG5mdW5jdGlvbiBtdXJtdXIyKHN0cikge1xuICAvLyAnbScgYW5kICdyJyBhcmUgbWl4aW5nIGNvbnN0YW50cyBnZW5lcmF0ZWQgb2ZmbGluZS5cbiAgLy8gVGhleSdyZSBub3QgcmVhbGx5ICdtYWdpYycsIHRoZXkganVzdCBoYXBwZW4gdG8gd29yayB3ZWxsLlxuICAvLyBjb25zdCBtID0gMHg1YmQxZTk5NTtcbiAgLy8gY29uc3QgciA9IDI0O1xuICAvLyBJbml0aWFsaXplIHRoZSBoYXNoXG4gIHZhciBoID0gMDsgLy8gTWl4IDQgYnl0ZXMgYXQgYSB0aW1lIGludG8gdGhlIGhhc2hcblxuICB2YXIgayxcbiAgICAgIGkgPSAwLFxuICAgICAgbGVuID0gc3RyLmxlbmd0aDtcblxuICBmb3IgKDsgbGVuID49IDQ7ICsraSwgbGVuIC09IDQpIHtcbiAgICBrID0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmIHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCA4IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAxNiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMjQ7XG4gICAgayA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gICAgayBePVxuICAgIC8qIGsgPj4+IHI6ICovXG4gICAgayA+Pj4gMjQ7XG4gICAgaCA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNikgXlxuICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIEhhbmRsZSB0aGUgbGFzdCBmZXcgYnl0ZXMgb2YgdGhlIGlucHV0IGFycmF5XG5cblxuICBzd2l0Y2ggKGxlbikge1xuICAgIGNhc2UgMzpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAyKSAmIDB4ZmYpIDw8IDE2O1xuXG4gICAgY2FzZSAyOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhmZikgPDwgODtcblxuICAgIGNhc2UgMTpcbiAgICAgIGggXj0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmO1xuICAgICAgaCA9XG4gICAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIERvIGEgZmV3IGZpbmFsIG1peGVzIG9mIHRoZSBoYXNoIHRvIGVuc3VyZSB0aGUgbGFzdCBmZXdcbiAgLy8gYnl0ZXMgYXJlIHdlbGwtaW5jb3Jwb3JhdGVkLlxuXG5cbiAgaCBePSBoID4+PiAxMztcbiAgaCA9XG4gIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgcmV0dXJuICgoaCBeIGggPj4+IDE1KSA+Pj4gMCkudG9TdHJpbmcoMzYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtdXJtdXIyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/hash/dist/hash.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanM/ZTJhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLHNFQUFPLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/serialize/dist/serialize.browser.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@emotion/serialize/dist/serialize.browser.esm.js ***!
  \***********************************************************************/
/*! exports provided: serializeStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeStyles\", function() { return serializeStyles; });\n/* harmony import */ var _emotion_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/hash */ \"./node_modules/@emotion/hash/dist/hash.browser.esm.js\");\n/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/unitless */ \"./node_modules/@emotion/unitless/dist/unitless.browser.esm.js\");\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/memoize */ \"./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (_emotion_unitless__WEBPACK_IMPORTED_MODULE_1__[\"default\"][key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (true) {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if ( true && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if ( true && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (true) {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (true) {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if ( true && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && \"development\" !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if ( true && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (true) {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if ( true && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if ( true && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (true) {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = Object(_emotion_hash__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(styles) + identifierName;\n\n  if (true) {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/sheet/dist/sheet.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/sheet/dist/sheet.browser.esm.js ***!
  \***************************************************************/
/*! exports provided: StyleSheet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleSheet\", function() { return StyleSheet; });\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? \"development\" === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (true) {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2hlZXQvZGlzdC9zaGVldC5icm93c2VyLmVzbS5qcz9jZmQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLFFBQVEsYUFBYTs7QUFFckIsaUNBQWlDLG9DQUFvQzs7QUFFckUseUJBQXlCLHVCQUF1QixFQUFFO0FBQ2xEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7O0FBR0EsaUJBQWlCLGlDQUFpQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsYUFBb0I7QUFDdkU7QUFDQTtBQUNBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUZBQW1GO0FBQ25GOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLFlBQVksSUFBcUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOztBQUVxQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L3NoZWV0LmJyb3dzZXIuZXNtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblxuQmFzZWQgb2ZmIGdsYW1vcidzIFN0eWxlU2hlZXQsIHRoYW5rcyBTdW5pbCDinaTvuI9cblxuaGlnaCBwZXJmb3JtYW5jZSBTdHlsZVNoZWV0IGZvciBjc3MtaW4tanMgc3lzdGVtc1xuXG4tIHVzZXMgbXVsdGlwbGUgc3R5bGUgdGFncyBiZWhpbmQgdGhlIHNjZW5lcyBmb3IgbWlsbGlvbnMgb2YgcnVsZXNcbi0gdXNlcyBgaW5zZXJ0UnVsZWAgZm9yIGFwcGVuZGluZyBpbiBwcm9kdWN0aW9uIGZvciAqbXVjaCogZmFzdGVyIHBlcmZvcm1hbmNlXG5cbi8vIHVzYWdlXG5cbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCdcblxubGV0IHN0eWxlU2hlZXQgPSBuZXcgU3R5bGVTaGVldCh7IGtleTogJycsIGNvbnRhaW5lcjogZG9jdW1lbnQuaGVhZCB9KVxuXG5zdHlsZVNoZWV0Lmluc2VydCgnI2JveCB7IGJvcmRlcjogMXB4IHNvbGlkIHJlZDsgfScpXG4tIGFwcGVuZHMgYSBjc3MgcnVsZSBpbnRvIHRoZSBzdHlsZXNoZWV0XG5cbnN0eWxlU2hlZXQuZmx1c2goKVxuLSBlbXB0aWVzIHRoZSBzdHlsZXNoZWV0IG9mIGFsbCBpdHMgY29udGVudHNcblxuKi9cbi8vICRGbG93Rml4TWVcbmZ1bmN0aW9uIHNoZWV0Rm9yVGFnKHRhZykge1xuICBpZiAodGFnLnNoZWV0KSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiB0YWcuc2hlZXQ7XG4gIH0gLy8gdGhpcyB3ZWlyZG5lc3MgYnJvdWdodCB0byB5b3UgYnkgZmlyZWZveFxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldLm93bmVyTm9kZSA9PT0gdGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICByZXR1cm4gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLWVtb3Rpb24nLCBvcHRpb25zLmtleSk7XG5cbiAgaWYgKG9wdGlvbnMubm9uY2UgIT09IHVuZGVmaW5lZCkge1xuICAgIHRhZy5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgb3B0aW9ucy5ub25jZSk7XG4gIH1cblxuICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpKTtcbiAgcmV0dXJuIHRhZztcbn1cblxudmFyIFN0eWxlU2hlZXQgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdHlsZVNoZWV0KG9wdGlvbnMpIHtcbiAgICB0aGlzLmlzU3BlZWR5ID0gb3B0aW9ucy5zcGVlZHkgPT09IHVuZGVmaW5lZCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgOiBvcHRpb25zLnNwZWVkeTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gICAgdGhpcy5ub25jZSA9IG9wdGlvbnMubm9uY2U7IC8vIGtleSBpcyB0aGUgdmFsdWUgb2YgdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUsIGl0J3MgdXNlZCB0byBpZGVudGlmeSBkaWZmZXJlbnQgc2hlZXRzXG5cbiAgICB0aGlzLmtleSA9IG9wdGlvbnMua2V5O1xuICAgIHRoaXMuY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXI7XG4gICAgdGhpcy5iZWZvcmUgPSBudWxsO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0eWxlU2hlZXQucHJvdG90eXBlO1xuXG4gIF9wcm90by5pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQocnVsZSkge1xuICAgIC8vIHRoZSBtYXggbGVuZ3RoIGlzIGhvdyBtYW55IHJ1bGVzIHdlIGhhdmUgcGVyIHN0eWxlIHRhZywgaXQncyA2NTAwMCBpbiBzcGVlZHkgbW9kZVxuICAgIC8vIGl0J3MgMSBpbiBkZXYgYmVjYXVzZSB3ZSBpbnNlcnQgc291cmNlIG1hcHMgdGhhdCBtYXAgYSBzaW5nbGUgcnVsZSB0byBhIGxvY2F0aW9uXG4gICAgLy8gYW5kIHlvdSBjYW4gb25seSBoYXZlIG9uZSBzb3VyY2UgbWFwIHBlciBzdHlsZSB0YWdcbiAgICBpZiAodGhpcy5jdHIgJSAodGhpcy5pc1NwZWVkeSA/IDY1MDAwIDogMSkgPT09IDApIHtcbiAgICAgIHZhciBfdGFnID0gY3JlYXRlU3R5bGVFbGVtZW50KHRoaXMpO1xuXG4gICAgICB2YXIgYmVmb3JlO1xuXG4gICAgICBpZiAodGhpcy50YWdzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBiZWZvcmUgPSB0aGlzLmJlZm9yZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJlZm9yZSA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV0ubmV4dFNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29udGFpbmVyLmluc2VydEJlZm9yZShfdGFnLCBiZWZvcmUpO1xuICAgICAgdGhpcy50YWdzLnB1c2goX3RhZyk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICBpZiAodGhpcy5pc1NwZWVkeSkge1xuICAgICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcodGFnKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdGhpcyBpcyBhIHJlYWxseSBob3QgcGF0aFxuICAgICAgICAvLyB3ZSBjaGVjayB0aGUgc2Vjb25kIGNoYXJhY3RlciBmaXJzdCBiZWNhdXNlIGhhdmluZyBcImlcIlxuICAgICAgICAvLyBhcyB0aGUgc2Vjb25kIGNoYXJhY3RlciB3aWxsIGhhcHBlbiBsZXNzIG9mdGVuIHRoYW5cbiAgICAgICAgLy8gaGF2aW5nIFwiQFwiIGFzIHRoZSBmaXJzdCBjaGFyYWN0ZXJcbiAgICAgICAgdmFyIGlzSW1wb3J0UnVsZSA9IHJ1bGUuY2hhckNvZGVBdCgxKSA9PT0gMTA1ICYmIHJ1bGUuY2hhckNvZGVBdCgwKSA9PT0gNjQ7IC8vIHRoaXMgaXMgdGhlIHVsdHJhZmFzdCB2ZXJzaW9uLCB3b3JrcyBhY3Jvc3MgYnJvd3NlcnNcbiAgICAgICAgLy8gdGhlIGJpZyBkcmF3YmFjayBpcyB0aGF0IHRoZSBjc3Mgd29uJ3QgYmUgZWRpdGFibGUgaW4gZGV2dG9vbHNcblxuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIC8vIHdlIG5lZWQgdG8gaW5zZXJ0IEBpbXBvcnQgcnVsZXMgYmVmb3JlIGFueXRoaW5nIGVsc2VcbiAgICAgICAgLy8gb3RoZXJ3aXNlIHRoZXJlIHdpbGwgYmUgYW4gZXJyb3JcbiAgICAgICAgLy8gdGVjaG5pY2FsbHkgdGhpcyBtZWFucyB0aGF0IHRoZSBAaW1wb3J0IHJ1bGVzIHdpbGxcbiAgICAgICAgLy8gX3VzdWFsbHlfKG5vdCBhbHdheXMgc2luY2UgdGhlcmUgY291bGQgYmUgbXVsdGlwbGUgc3R5bGUgdGFncylcbiAgICAgICAgLy8gYmUgdGhlIGZpcnN0IG9uZXMgaW4gcHJvZCBhbmQgZ2VuZXJhbGx5IGxhdGVyIGluIGRldlxuICAgICAgICAvLyB0aGlzIHNob3VsZG4ndCByZWFsbHkgbWF0dGVyIGluIHRoZSByZWFsIHdvcmxkIHRob3VnaFxuICAgICAgICAvLyBAaW1wb3J0IGlzIGdlbmVyYWxseSBvbmx5IHVzZWQgZm9yIGZvbnQgZmFjZXMgZnJvbSBnb29nbGUgZm9udHMgYW5kIGV0Yy5cbiAgICAgICAgLy8gc28gd2hpbGUgdGhpcyBjb3VsZCBiZSB0ZWNobmljYWxseSBjb3JyZWN0IHRoZW4gaXQgd291bGQgYmUgc2xvd2VyIGFuZCBsYXJnZXJcbiAgICAgICAgLy8gZm9yIGEgdGlueSBiaXQgb2YgY29ycmVjdG5lc3MgdGhhdCB3b24ndCBtYXR0ZXIgaW4gdGhlIHJlYWwgd29ybGRcbiAgICAgICAgaXNJbXBvcnRSdWxlID8gMCA6IHNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiVGhlcmUgd2FzIGEgcHJvYmxlbSBpbnNlcnRpbmcgdGhlIGZvbGxvd2luZyBydWxlOiBcXFwiXCIgKyBydWxlICsgXCJcXFwiXCIsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlKSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdHIrKztcbiAgfTtcblxuICBfcHJvdG8uZmx1c2ggPSBmdW5jdGlvbiBmbHVzaCgpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRhZyk7XG4gICAgfSk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG5leHBvcnQgeyBTdHlsZVNoZWV0IH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/stylis/dist/stylis.browser.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (stylis_min);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (unitlessKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcz8zMDRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLDJFQUFZLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/unitless/dist/unitless.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/utils/dist/utils.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/utils/dist/utils.browser.esm.js ***!
  \***************************************************************/
/*! exports provided: getRegisteredStyles, insertStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRegisteredStyles\", function() { return getRegisteredStyles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertStyles\", function() { return insertStyles; });\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC91dGlscy5icm93c2VyLmVzbS5qcz80ODgzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFNkMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC91dGlscy5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc0Jyb3dzZXIgPSBcIm9iamVjdFwiICE9PSAndW5kZWZpbmVkJztcbmZ1bmN0aW9uIGdldFJlZ2lzdGVyZWRTdHlsZXMocmVnaXN0ZXJlZCwgcmVnaXN0ZXJlZFN0eWxlcywgY2xhc3NOYW1lcykge1xuICB2YXIgcmF3Q2xhc3NOYW1lID0gJyc7XG4gIGNsYXNzTmFtZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICBpZiAocmVnaXN0ZXJlZFtjbGFzc05hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlZ2lzdGVyZWRTdHlsZXMucHVzaChyZWdpc3RlcmVkW2NsYXNzTmFtZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByYXdDbGFzc05hbWUgKz0gY2xhc3NOYW1lICsgXCIgXCI7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJhd0NsYXNzTmFtZTtcbn1cbnZhciBpbnNlcnRTdHlsZXMgPSBmdW5jdGlvbiBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGlzU3RyaW5nVGFnKSB7XG4gIHZhciBjbGFzc05hbWUgPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcblxuICBpZiAoIC8vIHdlIG9ubHkgbmVlZCB0byBhZGQgdGhlIHN0eWxlcyB0byB0aGUgcmVnaXN0ZXJlZCBjYWNoZSBpZiB0aGVcbiAgLy8gY2xhc3MgbmFtZSBjb3VsZCBiZSB1c2VkIGZ1cnRoZXIgZG93blxuICAvLyB0aGUgdHJlZSBidXQgaWYgaXQncyBhIHN0cmluZyB0YWcsIHdlIGtub3cgaXQgd29uJ3RcbiAgLy8gc28gd2UgZG9uJ3QgaGF2ZSB0byBhZGQgaXQgdG8gcmVnaXN0ZXJlZCBjYWNoZS5cbiAgLy8gdGhpcyBpbXByb3ZlcyBtZW1vcnkgdXNhZ2Ugc2luY2Ugd2UgY2FuIGF2b2lkIHN0b3JpbmcgdGhlIHdob2xlIHN0eWxlIHN0cmluZ1xuICAoaXNTdHJpbmdUYWcgPT09IGZhbHNlIHx8IC8vIHdlIG5lZWQgdG8gYWx3YXlzIHN0b3JlIGl0IGlmIHdlJ3JlIGluIGNvbXBhdCBtb2RlIGFuZFxuICAvLyBpbiBub2RlIHNpbmNlIGVtb3Rpb24tc2VydmVyIHJlbGllcyBvbiB3aGV0aGVyIGEgc3R5bGUgaXMgaW5cbiAgLy8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8ga25vdyB3aGV0aGVyIGEgc3R5bGUgaXMgZ2xvYmFsIG9yIG5vdFxuICAvLyBhbHNvLCBub3RlIHRoYXQgdGhpcyBjaGVjayB3aWxsIGJlIGRlYWQgY29kZSBlbGltaW5hdGVkIGluIHRoZSBicm93c2VyXG4gIGlzQnJvd3NlciA9PT0gZmFsc2UgJiYgY2FjaGUuY29tcGF0ICE9PSB1bmRlZmluZWQpICYmIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID0gc2VyaWFsaXplZC5zdHlsZXM7XG4gIH1cblxuICBpZiAoY2FjaGUuaW5zZXJ0ZWRbc2VyaWFsaXplZC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGN1cnJlbnQgPSBzZXJpYWxpemVkO1xuXG4gICAgZG8ge1xuICAgICAgdmFyIG1heWJlU3R5bGVzID0gY2FjaGUuaW5zZXJ0KFwiLlwiICsgY2xhc3NOYW1lLCBjdXJyZW50LCBjYWNoZS5zaGVldCwgdHJ1ZSk7XG5cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gICAgfSB3aGlsZSAoY3VycmVudCAhPT0gdW5kZWZpbmVkKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/utils/dist/utils.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (weakMemoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vd2Vhay1tZW1vaXplL2Rpc3Qvd2Vhay1tZW1vaXplLmJyb3dzZXIuZXNtLmpzPzgxMTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsMEVBQVcsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi93ZWFrLW1lbW9pemUvZGlzdC93ZWFrLW1lbW9pemUuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2Vha01lbW9pemUgPSBmdW5jdGlvbiB3ZWFrTWVtb2l6ZShmdW5jKSB7XG4gIC8vICRGbG93Rml4TWUgZmxvdyBkb2Vzbid0IGluY2x1ZGUgYWxsIG5vbi1wcmltaXRpdmUgdHlwZXMgYXMgYWxsb3dlZCBmb3Igd2Vha21hcHNcbiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGUuaGFzKGFyZykpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBjYWNoZS5nZXQoYXJnKTtcbiAgICB9XG5cbiAgICB2YXIgcmV0ID0gZnVuYyhhcmcpO1xuICAgIGNhY2hlLnNldChhcmcsIHJldCk7XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdlYWtNZW1vaXplO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/memoize-one/dist/memoize-one.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/memoize-one/dist/memoize-one.esm.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoizeOne);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWVtb2l6ZS1vbmUvZGlzdC9tZW1vaXplLW9uZS5lc20uanM/NWIwYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNCQUFzQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkIsMEJBQTBCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUseUVBQVUsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9tZW1vaXplLW9uZS9kaXN0L21lbW9pemUtb25lLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFyZUlucHV0c0VxdWFsKG5ld0lucHV0cywgbGFzdElucHV0cykge1xuICAgIGlmIChuZXdJbnB1dHMubGVuZ3RoICE9PSBsYXN0SW5wdXRzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3SW5wdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChuZXdJbnB1dHNbaV0gIT09IGxhc3RJbnB1dHNbaV0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gbWVtb2l6ZU9uZShyZXN1bHRGbiwgaXNFcXVhbCkge1xuICAgIGlmIChpc0VxdWFsID09PSB2b2lkIDApIHsgaXNFcXVhbCA9IGFyZUlucHV0c0VxdWFsOyB9XG4gICAgdmFyIGxhc3RUaGlzO1xuICAgIHZhciBsYXN0QXJncyA9IFtdO1xuICAgIHZhciBsYXN0UmVzdWx0O1xuICAgIHZhciBjYWxsZWRPbmNlID0gZmFsc2U7XG4gICAgZnVuY3Rpb24gbWVtb2l6ZWQoKSB7XG4gICAgICAgIHZhciBuZXdBcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBuZXdBcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhbGxlZE9uY2UgJiYgbGFzdFRoaXMgPT09IHRoaXMgJiYgaXNFcXVhbChuZXdBcmdzLCBsYXN0QXJncykpIHtcbiAgICAgICAgICAgIHJldHVybiBsYXN0UmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGxhc3RSZXN1bHQgPSByZXN1bHRGbi5hcHBseSh0aGlzLCBuZXdBcmdzKTtcbiAgICAgICAgY2FsbGVkT25jZSA9IHRydWU7XG4gICAgICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICAgICAgbGFzdEFyZ3MgPSBuZXdBcmdzO1xuICAgICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIG1lbW9pemVkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplT25lO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/memoize-one/dist/memoize-one.esm.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!***********************************************************************************************************************!*\
  !*** delegated ./node_modules/next/dist/build/polyfills/object-assign.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/next/dist/build/polyfills/object-assign.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcyBmcm9tIGRsbC1yZWZlcmVuY2UgZGxsXzJhZGMyNDAzZDg5YWRjMTZlYWQwPzQxNWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgZGxsLXJlZmVyZW5jZSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDAgKi8gXCJkbGwtcmVmZXJlbmNlIGRsbF8yYWRjMjQwM2Q4OWFkYzE2ZWFkMFwiKSkoXCIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL29iamVjdC1hc3NpZ24uanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fjoseribeiro%2FProjects%2Fcanifly%2Fpages%2Findex.js!./":
/*!***************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fjoseribeiro%2FProjects%2Fcanifly%2Fpages%2Findex.js ***!
  \***************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n      }\n    ]);\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/Yjk4ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDBDQUFvRDtBQUMzRTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP3BhZ2U9JTJGJmFic29sdXRlUGFnZVBhdGg9JTJGVXNlcnMlMkZqb3NlcmliZWlybyUyRlByb2plY3RzJTJGY2FuaWZseSUyRnBhZ2VzJTJGaW5kZXguanMhLi8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi9Vc2Vycy9qb3NlcmliZWlyby9Qcm9qZWN0cy9jYW5pZmx5L3BhZ2VzL2luZGV4LmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fjoseribeiro%2FProjects%2Fcanifly%2Fpages%2Findex.js!./\n");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/prop-types/checkPropTypes.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMgZnJvbSBkbGwtcmVmZXJlbmNlIGRsbF8yYWRjMjQwM2Q4OWFkYzE2ZWFkMD85NGNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISBkbGwtcmVmZXJlbmNlIGRsbF8yYWRjMjQwM2Q4OWFkYzE2ZWFkMCAqLyBcImRsbC1yZWZlcmVuY2UgZGxsXzJhZGMyNDAzZDg5YWRjMTZlYWQwXCIpKShcIi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/prop-types/factoryWithTypeCheckers.js\n");

/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz9kN2JjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLElBQXFDO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLGtEQUFVOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBMkI7QUFDdEQsQ0FBQyxNQUFNLEVBSU4iLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/prop-types/index.js\n");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIGZyb20gZGxsLXJlZmVyZW5jZSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDA/MGUxNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKF9fd2VicGFja19yZXF1aXJlX18oLyohIGRsbC1yZWZlcmVuY2UgZGxsXzJhZGMyNDAzZDg5YWRjMTZlYWQwICovIFwiZGxsLXJlZmVyZW5jZSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDBcIikpKFwiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!***********************************************************************************************!*\
  !*** delegated ./node_modules/react-dom/index.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/react-dom/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyBmcm9tIGRsbC1yZWZlcmVuY2UgZGxsXzJhZGMyNDAzZDg5YWRjMTZlYWQwP2Q2ZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgZGxsLXJlZmVyZW5jZSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDAgKi8gXCJkbGwtcmVmZXJlbmNlIGRsbF8yYWRjMjQwM2Q4OWFkYzE2ZWFkMFwiKSkoXCIuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-dom/index.js\n");

/***/ }),

/***/ "./node_modules/react-input-autosize/lib/AutosizeInput.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-input-autosize/lib/AutosizeInput.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar sizerStyle = {\n\tposition: 'absolute',\n\ttop: 0,\n\tleft: 0,\n\tvisibility: 'hidden',\n\theight: 0,\n\toverflow: 'scroll',\n\twhiteSpace: 'pre'\n};\n\nvar INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nvar cleanInputProps = function cleanInputProps(inputProps) {\n\tINPUT_PROPS_BLACKLIST.forEach(function (field) {\n\t\treturn delete inputProps[field];\n\t});\n\treturn inputProps;\n};\n\nvar copyStyles = function copyStyles(styles, node) {\n\tnode.style.fontSize = styles.fontSize;\n\tnode.style.fontFamily = styles.fontFamily;\n\tnode.style.fontWeight = styles.fontWeight;\n\tnode.style.fontStyle = styles.fontStyle;\n\tnode.style.letterSpacing = styles.letterSpacing;\n\tnode.style.textTransform = styles.textTransform;\n};\n\nvar isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nvar generateId = function generateId() {\n\t// we only need an auto-generated ID for stylesheet injection, which is only\n\t// used for IE. so if the browser is not IE, this should return undefined.\n\treturn isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nvar AutosizeInput = function (_Component) {\n\t_inherits(AutosizeInput, _Component);\n\n\tfunction AutosizeInput(props) {\n\t\t_classCallCheck(this, AutosizeInput);\n\n\t\tvar _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));\n\n\t\t_this.inputRef = function (el) {\n\t\t\t_this.input = el;\n\t\t\tif (typeof _this.props.inputRef === 'function') {\n\t\t\t\t_this.props.inputRef(el);\n\t\t\t}\n\t\t};\n\n\t\t_this.placeHolderSizerRef = function (el) {\n\t\t\t_this.placeHolderSizer = el;\n\t\t};\n\n\t\t_this.sizerRef = function (el) {\n\t\t\t_this.sizer = el;\n\t\t};\n\n\t\t_this.state = {\n\t\t\tinputWidth: props.minWidth,\n\t\t\tinputId: props.id || generateId()\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(AutosizeInput, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.mounted = true;\n\t\t\tthis.copyInputStyles();\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'UNSAFE_componentWillReceiveProps',\n\t\tvalue: function UNSAFE_componentWillReceiveProps(nextProps) {\n\t\t\tvar id = nextProps.id;\n\n\t\t\tif (id !== this.props.id) {\n\t\t\t\tthis.setState({ inputId: id || generateId() });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tif (prevState.inputWidth !== this.state.inputWidth) {\n\t\t\t\tif (typeof this.props.onAutosize === 'function') {\n\t\t\t\t\tthis.props.onAutosize(this.state.inputWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.mounted = false;\n\t\t}\n\t}, {\n\t\tkey: 'copyInputStyles',\n\t\tvalue: function copyInputStyles() {\n\t\t\tif (!this.mounted || !window.getComputedStyle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar inputStyles = this.input && window.getComputedStyle(this.input);\n\t\t\tif (!inputStyles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcopyStyles(inputStyles, this.sizer);\n\t\t\tif (this.placeHolderSizer) {\n\t\t\t\tcopyStyles(inputStyles, this.placeHolderSizer);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateInputWidth',\n\t\tvalue: function updateInputWidth() {\n\t\t\tif (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newInputWidth = void 0;\n\t\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\t\tnewInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n\t\t\t} else {\n\t\t\t\tnewInputWidth = this.sizer.scrollWidth + 2;\n\t\t\t}\n\t\t\t// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\t\t\tvar extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n\t\t\tnewInputWidth += extraWidth;\n\t\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\t\tnewInputWidth = this.props.minWidth;\n\t\t\t}\n\t\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputWidth: newInputWidth\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getInput',\n\t\tvalue: function getInput() {\n\t\t\treturn this.input;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blur',\n\t\tvalue: function blur() {\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.input.select();\n\t\t}\n\t}, {\n\t\tkey: 'renderStyles',\n\t\tvalue: function renderStyles() {\n\t\t\t// this method injects styles to hide IE's clear indicator, which messes\n\t\t\t// with input size detection. the stylesheet is only injected when the\n\t\t\t// browser is IE, and can also be disabled by the `injectStyles` prop.\n\t\t\tvar injectStyles = this.props.injectStyles;\n\n\t\t\treturn isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n\t\t\t\t\t__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'\n\t\t\t\t} }) : null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {\n\t\t\t\tif (previousValue !== null && previousValue !== undefined) {\n\t\t\t\t\treturn previousValue;\n\t\t\t\t}\n\t\t\t\treturn currentValue;\n\t\t\t});\n\n\t\t\tvar wrapperStyle = _extends({}, this.props.style);\n\t\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n\t\t\tvar inputStyle = _extends({\n\t\t\t\tboxSizing: 'content-box',\n\t\t\t\twidth: this.state.inputWidth + 'px'\n\t\t\t}, this.props.inputStyle);\n\n\t\t\tvar inputProps = _objectWithoutProperties(this.props, []);\n\n\t\t\tcleanInputProps(inputProps);\n\t\t\tinputProps.className = this.props.inputClassName;\n\t\t\tinputProps.id = this.state.inputId;\n\t\t\tinputProps.style = inputStyle;\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\t\tthis.renderStyles(),\n\t\t\t\t_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.sizerRef, style: sizerStyle },\n\t\t\t\t\tsizerValue\n\t\t\t\t),\n\t\t\t\tthis.props.placeholder ? _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.placeHolderSizerRef, style: sizerStyle },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn AutosizeInput;\n}(_react.Component);\n\nAutosizeInput.propTypes = {\n\tclassName: _propTypes2.default.string, // className for the outer element\n\tdefaultValue: _propTypes2.default.any, // default field value\n\textraWidth: _propTypes2.default.oneOfType([// additional width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tid: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots\n\tinjectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n\tinputClassName: _propTypes2.default.string, // className for the input element\n\tinputRef: _propTypes2.default.func, // ref callback for the input element\n\tinputStyle: _propTypes2.default.object, // css styles for the input element\n\tminWidth: _propTypes2.default.oneOfType([// minimum width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tonAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}\n\tonChange: _propTypes2.default.func, // onChange handler: function(event) {}\n\tplaceholder: _propTypes2.default.string, // placeholder text\n\tplaceholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder\n\tstyle: _propTypes2.default.object, // css styles for the outer element\n\tvalue: _propTypes2.default.any // field value\n};\nAutosizeInput.defaultProps = {\n\tminWidth: 1,\n\tinjectStyles: true\n};\n\nexports.default = AutosizeInput;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-input-autosize/lib/AutosizeInput.js\n");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NGNlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUM7QUFDRCxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBK0I7QUFDMUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n");

/***/ }),

/***/ "./node_modules/react-select/dist/Select-9fdb8cd0.browser.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-select/dist/Select-9fdb8cd0.browser.esm.js ***!
  \***********************************************************************/
/*! exports provided: S, a, c, d, m */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"S\", function() { return Select; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return defaultTheme; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return createFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return defaultProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return mergeStyles; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! memoize-one */ \"./node_modules/memoize-one/dist/memoize-one.esm.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils-06b0d5a4.browser.esm.js */ \"./node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js\");\n/* harmony import */ var _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-4322c0ed.browser.esm.js */ \"./node_modules/react-select/dist/index-4322c0ed.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/css.browser.esm.js\");\n\n\n\n\n\n\n\n\nvar diacritics = [{\n  base: 'A',\n  letters: /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g\n}, {\n  base: 'AA',\n  letters: /[\\uA732]/g\n}, {\n  base: 'AE',\n  letters: /[\\u00C6\\u01FC\\u01E2]/g\n}, {\n  base: 'AO',\n  letters: /[\\uA734]/g\n}, {\n  base: 'AU',\n  letters: /[\\uA736]/g\n}, {\n  base: 'AV',\n  letters: /[\\uA738\\uA73A]/g\n}, {\n  base: 'AY',\n  letters: /[\\uA73C]/g\n}, {\n  base: 'B',\n  letters: /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g\n}, {\n  base: 'C',\n  letters: /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g\n}, {\n  base: 'D',\n  letters: /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g\n}, {\n  base: 'DZ',\n  letters: /[\\u01F1\\u01C4]/g\n}, {\n  base: 'Dz',\n  letters: /[\\u01F2\\u01C5]/g\n}, {\n  base: 'E',\n  letters: /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g\n}, {\n  base: 'F',\n  letters: /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g\n}, {\n  base: 'G',\n  letters: /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g\n}, {\n  base: 'H',\n  letters: /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g\n}, {\n  base: 'I',\n  letters: /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g\n}, {\n  base: 'J',\n  letters: /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g\n}, {\n  base: 'K',\n  letters: /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g\n}, {\n  base: 'L',\n  letters: /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g\n}, {\n  base: 'LJ',\n  letters: /[\\u01C7]/g\n}, {\n  base: 'Lj',\n  letters: /[\\u01C8]/g\n}, {\n  base: 'M',\n  letters: /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g\n}, {\n  base: 'N',\n  letters: /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g\n}, {\n  base: 'NJ',\n  letters: /[\\u01CA]/g\n}, {\n  base: 'Nj',\n  letters: /[\\u01CB]/g\n}, {\n  base: 'O',\n  letters: /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g\n}, {\n  base: 'OI',\n  letters: /[\\u01A2]/g\n}, {\n  base: 'OO',\n  letters: /[\\uA74E]/g\n}, {\n  base: 'OU',\n  letters: /[\\u0222]/g\n}, {\n  base: 'P',\n  letters: /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g\n}, {\n  base: 'Q',\n  letters: /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g\n}, {\n  base: 'R',\n  letters: /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g\n}, {\n  base: 'S',\n  letters: /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g\n}, {\n  base: 'T',\n  letters: /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g\n}, {\n  base: 'TZ',\n  letters: /[\\uA728]/g\n}, {\n  base: 'U',\n  letters: /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g\n}, {\n  base: 'V',\n  letters: /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g\n}, {\n  base: 'VY',\n  letters: /[\\uA760]/g\n}, {\n  base: 'W',\n  letters: /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g\n}, {\n  base: 'X',\n  letters: /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g\n}, {\n  base: 'Y',\n  letters: /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g\n}, {\n  base: 'Z',\n  letters: /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g\n}, {\n  base: 'a',\n  letters: /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g\n}, {\n  base: 'aa',\n  letters: /[\\uA733]/g\n}, {\n  base: 'ae',\n  letters: /[\\u00E6\\u01FD\\u01E3]/g\n}, {\n  base: 'ao',\n  letters: /[\\uA735]/g\n}, {\n  base: 'au',\n  letters: /[\\uA737]/g\n}, {\n  base: 'av',\n  letters: /[\\uA739\\uA73B]/g\n}, {\n  base: 'ay',\n  letters: /[\\uA73D]/g\n}, {\n  base: 'b',\n  letters: /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g\n}, {\n  base: 'c',\n  letters: /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g\n}, {\n  base: 'd',\n  letters: /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g\n}, {\n  base: 'dz',\n  letters: /[\\u01F3\\u01C6]/g\n}, {\n  base: 'e',\n  letters: /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g\n}, {\n  base: 'f',\n  letters: /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g\n}, {\n  base: 'g',\n  letters: /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g\n}, {\n  base: 'h',\n  letters: /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g\n}, {\n  base: 'hv',\n  letters: /[\\u0195]/g\n}, {\n  base: 'i',\n  letters: /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g\n}, {\n  base: 'j',\n  letters: /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g\n}, {\n  base: 'k',\n  letters: /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g\n}, {\n  base: 'l',\n  letters: /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g\n}, {\n  base: 'lj',\n  letters: /[\\u01C9]/g\n}, {\n  base: 'm',\n  letters: /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g\n}, {\n  base: 'n',\n  letters: /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g\n}, {\n  base: 'nj',\n  letters: /[\\u01CC]/g\n}, {\n  base: 'o',\n  letters: /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g\n}, {\n  base: 'oi',\n  letters: /[\\u01A3]/g\n}, {\n  base: 'ou',\n  letters: /[\\u0223]/g\n}, {\n  base: 'oo',\n  letters: /[\\uA74F]/g\n}, {\n  base: 'p',\n  letters: /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g\n}, {\n  base: 'q',\n  letters: /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g\n}, {\n  base: 'r',\n  letters: /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g\n}, {\n  base: 's',\n  letters: /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g\n}, {\n  base: 't',\n  letters: /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g\n}, {\n  base: 'tz',\n  letters: /[\\uA729]/g\n}, {\n  base: 'u',\n  letters: /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g\n}, {\n  base: 'v',\n  letters: /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g\n}, {\n  base: 'vy',\n  letters: /[\\uA761]/g\n}, {\n  base: 'w',\n  letters: /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g\n}, {\n  base: 'x',\n  letters: /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g\n}, {\n  base: 'y',\n  letters: /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g\n}, {\n  base: 'z',\n  letters: /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g\n}];\nvar stripDiacritics = function stripDiacritics(str) {\n  for (var i = 0; i < diacritics.length; i++) {\n    str = str.replace(diacritics[i].letters, diacritics[i].base);\n  }\n\n  return str;\n};\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar trimString = function trimString(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\nvar defaultStringify = function defaultStringify(option) {\n  return option.label + \" \" + option.value;\n};\n\nvar createFilter = function createFilter(config) {\n  return function (option, rawInput) {\n    var _ignoreCase$ignoreAcc = _extends({\n      ignoreCase: true,\n      ignoreAccents: true,\n      stringify: defaultStringify,\n      trim: true,\n      matchFrom: 'any'\n    }, config),\n        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,\n        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,\n        stringify = _ignoreCase$ignoreAcc.stringify,\n        trim = _ignoreCase$ignoreAcc.trim,\n        matchFrom = _ignoreCase$ignoreAcc.matchFrom;\n\n    var input = trim ? trimString(rawInput) : rawInput;\n    var candidate = trim ? trimString(stringify(option)) : stringify(option);\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n      candidate = candidate.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n      candidate = stripDiacritics(candidate);\n    }\n\n    return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;\n  };\n};\n\nfunction _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\n\nvar _ref =  false ? undefined : {\n  name: \"1laao21-a11yText\",\n  styles: \"label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFNIiwiZmlsZSI6IkExMXlUZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50Q29uZmlnIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5cbi8vIEFzc2lzdGl2ZSB0ZXh0IHRvIGRlc2NyaWJlIHZpc3VhbCBlbGVtZW50cy4gSGlkZGVuIGZvciBzaWdodGVkIHVzZXJzLlxuY29uc3QgQTExeVRleHQgPSAocHJvcHM6IEVsZW1lbnRDb25maWc8J3NwYW4nPikgPT4gKFxuICAgIDxzcGFuXG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdhMTF5VGV4dCcsXG4gICAgICAgIHpJbmRleDogOTk5OSxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICBjbGlwOiAncmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpJyxcbiAgICAgICAgaGVpZ2h0OiAxLFxuICAgICAgICB3aWR0aDogMSxcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgICB9fVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBBMTF5VGV4dDtcbiJdfQ== */\"\n};\n\nvar A11yText = function A11yText(props) {\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"span\", _extends$1({\n    css: _ref\n  }, props));\n};\n\nfunction _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction DummyInput(_ref) {\n  var inProp = _ref.in,\n      out = _ref.out,\n      onExited = _ref.onExited,\n      appear = _ref.appear,\n      enter = _ref.enter,\n      exit = _ref.exit,\n      innerRef = _ref.innerRef,\n      emotion = _ref.emotion,\n      props = _objectWithoutPropertiesLoose(_ref, [\"in\", \"out\", \"onExited\", \"appear\", \"enter\", \"exit\", \"innerRef\", \"emotion\"]);\n\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"input\", _extends$2({\n    ref: innerRef\n  }, props, {\n    css:\n    /*#__PURE__*/\n    Object(_emotion_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({\n      label: 'dummyInput',\n      // get rid of any default styles\n      background: 0,\n      border: 0,\n      fontSize: 'inherit',\n      outline: 0,\n      padding: 0,\n      // important! without `width` browsers won't allow focus\n      width: 1,\n      // remove cursor on desktop\n      color: 'transparent',\n      // remove cursor on mobile whilst maintaining \"scroll into view\" behaviour\n      left: -100,\n      opacity: 0,\n      position: 'relative',\n      transform: 'scale(0)'\n    },  false ? undefined : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJNIiwiZmlsZSI6IkR1bW15SW5wdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRHVtbXlJbnB1dCh7XG4gIGluOiBpblByb3AsXG4gIG91dCxcbiAgb25FeGl0ZWQsXG4gIGFwcGVhcixcbiAgZW50ZXIsXG4gIGV4aXQsXG4gIGlubmVyUmVmLFxuICBlbW90aW9uLFxuICAuLi5wcm9wc1xufTogYW55KSB7XG4gIHJldHVybiAoXG4gICAgPGlucHV0XG4gICAgICByZWY9e2lubmVyUmVmfVxuICAgICAgey4uLnByb3BzfVxuICAgICAgY3NzPXt7XG4gICAgICAgIGxhYmVsOiAnZHVtbXlJbnB1dCcsXG4gICAgICAgIC8vIGdldCByaWQgb2YgYW55IGRlZmF1bHQgc3R5bGVzXG4gICAgICAgIGJhY2tncm91bmQ6IDAsXG4gICAgICAgIGJvcmRlcjogMCxcbiAgICAgICAgZm9udFNpemU6ICdpbmhlcml0JyxcbiAgICAgICAgb3V0bGluZTogMCxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgLy8gaW1wb3J0YW50ISB3aXRob3V0IGB3aWR0aGAgYnJvd3NlcnMgd29uJ3QgYWxsb3cgZm9jdXNcbiAgICAgICAgd2lkdGg6IDEsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBkZXNrdG9wXG4gICAgICAgIGNvbG9yOiAndHJhbnNwYXJlbnQnLFxuXG4gICAgICAgIC8vIHJlbW92ZSBjdXJzb3Igb24gbW9iaWxlIHdoaWxzdCBtYWludGFpbmluZyBcInNjcm9sbCBpbnRvIHZpZXdcIiBiZWhhdmlvdXJcbiAgICAgICAgbGVmdDogLTEwMCxcbiAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlKDApJyxcbiAgICAgIH19XG4gICAgLz5cbiAgKTtcbn1cbiJdfQ== */\")\n  }));\n}\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar NodeResolver =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(NodeResolver, _Component);\n\n  function NodeResolver() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NodeResolver.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.innerRef(Object(react_dom__WEBPACK_IMPORTED_MODULE_3__[\"findDOMNode\"])(this));\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.innerRef(null);\n  };\n\n  _proto.render = function render() {\n    return this.props.children;\n  };\n\n  return NodeResolver;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nvar STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position'];\nvar LOCK_STYLES = {\n  boxSizing: 'border-box',\n  // account for possible declaration `width: 100%;` on body\n  overflow: 'hidden',\n  position: 'relative',\n  height: '100%'\n};\n\nfunction preventTouchMove(e) {\n  e.preventDefault();\n}\nfunction allowTouchMove(e) {\n  e.stopPropagation();\n}\nfunction preventInertiaScroll() {\n  var top = this.scrollTop;\n  var totalScroll = this.scrollHeight;\n  var currentScroll = top + this.offsetHeight;\n\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n} // `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\n\nfunction isTouchDevice() {\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n\nfunction _inheritsLoose$1(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nvar canUseDOM = !!( window.document && window.document.createElement);\nvar activeScrollLocks = 0;\n\nvar ScrollLock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose$1(ScrollLock, _Component);\n\n  function ScrollLock() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.originalStyles = {};\n    _this.listenerOptions = {\n      capture: false,\n      passive: false\n    };\n    return _this;\n  }\n\n  var _proto = ScrollLock.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    if (!canUseDOM) return;\n    var _this$props = this.props,\n        accountForScrollbars = _this$props.accountForScrollbars,\n        touchScrollTarget = _this$props.touchScrollTarget;\n    var target = document.body;\n    var targetStyle = target && target.style;\n\n    if (accountForScrollbars) {\n      // store any styles already applied to the body\n      STYLE_KEYS.forEach(function (key) {\n        var val = targetStyle && targetStyle[key];\n        _this2.originalStyles[key] = val;\n      });\n    } // apply the lock styles and padding if this is the first scroll lock\n\n\n    if (accountForScrollbars && activeScrollLocks < 1) {\n      var currentPadding = parseInt(this.originalStyles.paddingRight, 10) || 0;\n      var clientWidth = document.body ? document.body.clientWidth : 0;\n      var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;\n      Object.keys(LOCK_STYLES).forEach(function (key) {\n        var val = LOCK_STYLES[key];\n\n        if (targetStyle) {\n          targetStyle[key] = val;\n        }\n      });\n\n      if (targetStyle) {\n        targetStyle.paddingRight = adjustedPadding + \"px\";\n      }\n    } // account for touch devices\n\n\n    if (target && isTouchDevice()) {\n      // Mobile Safari ignores { overflow: hidden } declaration on the body.\n      target.addEventListener('touchmove', preventTouchMove, this.listenerOptions); // Allow scroll on provided target\n\n      if (touchScrollTarget) {\n        touchScrollTarget.addEventListener('touchstart', preventInertiaScroll, this.listenerOptions);\n        touchScrollTarget.addEventListener('touchmove', allowTouchMove, this.listenerOptions);\n      }\n    } // increment active scroll locks\n\n\n    activeScrollLocks += 1;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var _this3 = this;\n\n    if (!canUseDOM) return;\n    var _this$props2 = this.props,\n        accountForScrollbars = _this$props2.accountForScrollbars,\n        touchScrollTarget = _this$props2.touchScrollTarget;\n    var target = document.body;\n    var targetStyle = target && target.style; // safely decrement active scroll locks\n\n    activeScrollLocks = Math.max(activeScrollLocks - 1, 0); // reapply original body styles, if any\n\n    if (accountForScrollbars && activeScrollLocks < 1) {\n      STYLE_KEYS.forEach(function (key) {\n        var val = _this3.originalStyles[key];\n\n        if (targetStyle) {\n          targetStyle[key] = val;\n        }\n      });\n    } // remove touch listeners\n\n\n    if (target && isTouchDevice()) {\n      target.removeEventListener('touchmove', preventTouchMove, this.listenerOptions);\n\n      if (touchScrollTarget) {\n        touchScrollTarget.removeEventListener('touchstart', preventInertiaScroll, this.listenerOptions);\n        touchScrollTarget.removeEventListener('touchmove', allowTouchMove, this.listenerOptions);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return ScrollLock;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nScrollLock.defaultProps = {\n  accountForScrollbars: true\n};\n\nfunction _inheritsLoose$2(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar _ref$1 =  false ? undefined : {\n  name: \"1dsbpcp\",\n  styles: \"position:fixed;left:0;bottom:0;right:0;top:0;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbEJsb2NrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZEVSIsImZpbGUiOiJTY3JvbGxCbG9jay5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG4vKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IFB1cmVDb21wb25lbnQsIHR5cGUgRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IE5vZGVSZXNvbHZlciBmcm9tICcuL05vZGVSZXNvbHZlcic7XG5pbXBvcnQgU2Nyb2xsTG9jayBmcm9tICcuL1Njcm9sbExvY2svaW5kZXgnO1xuXG50eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogRWxlbWVudDwqPixcbiAgaXNFbmFibGVkOiBib29sZWFuLFxufTtcbnR5cGUgU3RhdGUgPSB7XG4gIHRvdWNoU2Nyb2xsVGFyZ2V0OiBIVE1MRWxlbWVudCB8IG51bGwsXG59O1xuXG4vLyBOT1RFOlxuLy8gV2Ugc2hvdWxkbid0IG5lZWQgdGhpcyBhZnRlciB1cGRhdGluZyB0byBSZWFjdCB2MTYuMy4wLCB3aGljaCBpbnRyb2R1Y2VzOlxuLy8gLSBjcmVhdGVSZWYoKSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvcmVhY3QtYXBpLmh0bWwjcmVhY3RjcmVhdGVyZWZcbi8vIC0gZm9yd2FyZFJlZigpIGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWFjdC1hcGkuaHRtbCNyZWFjdGZvcndhcmRyZWZcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nyb2xsQmxvY2sgZXh0ZW5kcyBQdXJlQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xuICBzdGF0ZSA9IHsgdG91Y2hTY3JvbGxUYXJnZXQ6IG51bGwgfTtcblxuICAvLyBtdXN0IGJlIGluIHN0YXRlIHRvIHRyaWdnZXIgYSByZS1yZW5kZXIsIG9ubHkgcnVucyBvbmNlIHBlciBpbnN0YW5jZVxuICBnZXRTY3JvbGxUYXJnZXQgPSAocmVmOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgIGlmIChyZWYgPT09IHRoaXMuc3RhdGUudG91Y2hTY3JvbGxUYXJnZXQpIHJldHVybjtcbiAgICB0aGlzLnNldFN0YXRlKHsgdG91Y2hTY3JvbGxUYXJnZXQ6IHJlZiB9KTtcbiAgfTtcblxuICAvLyB0aGlzIHdpbGwgY2xvc2UgdGhlIG1lbnUgd2hlbiBhIHVzZXIgY2xpY2tzIG91dHNpZGVcbiAgYmx1clNlbGVjdElucHV0ID0gKCkgPT4ge1xuICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7XG4gICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGlzRW5hYmxlZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHRvdWNoU2Nyb2xsVGFyZ2V0IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgLy8gYmFpbCBlYXJseSBpZiBub3QgZW5hYmxlZFxuICAgIGlmICghaXNFbmFibGVkKSByZXR1cm4gY2hpbGRyZW47XG5cbiAgICAvKlxuICAgICAqIERpdlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIGJsb2NrcyBzY3JvbGxpbmcgb24gbm9uLWJvZHkgZWxlbWVudHMgYmVoaW5kIHRoZSBtZW51XG5cbiAgICAgKiBOb2RlUmVzb2x2ZXJcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiB3ZSBuZWVkIGEgcmVmZXJlbmNlIHRvIHRoZSBzY3JvbGxhYmxlIGVsZW1lbnQgdG8gXCJ1bmxvY2tcIiBzY3JvbGwgb25cbiAgICAgKiBtb2JpbGUgZGV2aWNlc1xuXG4gICAgICogU2Nyb2xsTG9ja1xuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIGFjdHVhbGx5IGRvZXMgdGhlIHNjcm9sbCBsb2NraW5nXG4gICAgICovXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLmJsdXJTZWxlY3RJbnB1dH1cbiAgICAgICAgICBjc3M9e3sgcG9zaXRpb246ICdmaXhlZCcsIGxlZnQ6IDAsIGJvdHRvbTogMCwgcmlnaHQ6IDAsIHRvcDogMCB9fVxuICAgICAgICAvPlxuICAgICAgICA8Tm9kZVJlc29sdmVyIGlubmVyUmVmPXt0aGlzLmdldFNjcm9sbFRhcmdldH0+e2NoaWxkcmVufTwvTm9kZVJlc29sdmVyPlxuICAgICAgICB7dG91Y2hTY3JvbGxUYXJnZXQgPyAoXG4gICAgICAgICAgPFNjcm9sbExvY2sgdG91Y2hTY3JvbGxUYXJnZXQ9e3RvdWNoU2Nyb2xsVGFyZ2V0fSAvPlxuICAgICAgICApIDogbnVsbH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */\"\n};\n\n// NOTE:\n// We shouldn't need this after updating to React v16.3.0, which introduces:\n// - createRef() https://reactjs.org/docs/react-api.html#reactcreateref\n// - forwardRef() https://reactjs.org/docs/react-api.html#reactforwardref\nvar ScrollBlock =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inheritsLoose$2(ScrollBlock, _PureComponent);\n\n  function ScrollBlock() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      touchScrollTarget: null\n    };\n\n    _this.getScrollTarget = function (ref) {\n      if (ref === _this.state.touchScrollTarget) return;\n\n      _this.setState({\n        touchScrollTarget: ref\n      });\n    };\n\n    _this.blurSelectInput = function () {\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollBlock.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        isEnabled = _this$props.isEnabled;\n    var touchScrollTarget = this.state.touchScrollTarget; // bail early if not enabled\n\n    if (!isEnabled) return children;\n    /*\n     * Div\n     * ------------------------------\n     * blocks scrolling on non-body elements behind the menu\n      * NodeResolver\n     * ------------------------------\n     * we need a reference to the scrollable element to \"unlock\" scroll on\n     * mobile devices\n      * ScrollLock\n     * ------------------------------\n     * actually does the scroll locking\n     */\n\n    return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\", null, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\", {\n      onClick: this.blurSelectInput,\n      css: _ref$1\n    }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(NodeResolver, {\n      innerRef: this.getScrollTarget\n    }, children), touchScrollTarget ? Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(ScrollLock, {\n      touchScrollTarget: touchScrollTarget\n    }) : null);\n  };\n\n  return ScrollBlock;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"PureComponent\"]);\n\nfunction _objectWithoutPropertiesLoose$1(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose$3(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar ScrollCaptor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose$3(ScrollCaptor, _Component);\n\n  function ScrollCaptor() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.isBottom = false;\n    _this.isTop = false;\n    _this.scrollTarget = void 0;\n    _this.touchStart = void 0;\n\n    _this.cancelScroll = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this.handleEventDelta = function (event, delta) {\n      var _this$props = _this.props,\n          onBottomArrive = _this$props.onBottomArrive,\n          onBottomLeave = _this$props.onBottomLeave,\n          onTopArrive = _this$props.onTopArrive,\n          onTopLeave = _this$props.onTopLeave;\n      var _this$scrollTarget = _this.scrollTarget,\n          scrollTop = _this$scrollTarget.scrollTop,\n          scrollHeight = _this$scrollTarget.scrollHeight,\n          clientHeight = _this$scrollTarget.clientHeight;\n      var target = _this.scrollTarget;\n      var isDeltaPositive = delta > 0;\n      var availableScroll = scrollHeight - clientHeight - scrollTop;\n      var shouldCancelScroll = false; // reset bottom/top flags\n\n      if (availableScroll > delta && _this.isBottom) {\n        if (onBottomLeave) onBottomLeave(event);\n        _this.isBottom = false;\n      }\n\n      if (isDeltaPositive && _this.isTop) {\n        if (onTopLeave) onTopLeave(event);\n        _this.isTop = false;\n      } // bottom limit\n\n\n      if (isDeltaPositive && delta > availableScroll) {\n        if (onBottomArrive && !_this.isBottom) {\n          onBottomArrive(event);\n        }\n\n        target.scrollTop = scrollHeight;\n        shouldCancelScroll = true;\n        _this.isBottom = true; // top limit\n      } else if (!isDeltaPositive && -delta > scrollTop) {\n        if (onTopArrive && !_this.isTop) {\n          onTopArrive(event);\n        }\n\n        target.scrollTop = 0;\n        shouldCancelScroll = true;\n        _this.isTop = true;\n      } // cancel scroll\n\n\n      if (shouldCancelScroll) {\n        _this.cancelScroll(event);\n      }\n    };\n\n    _this.onWheel = function (event) {\n      _this.handleEventDelta(event, event.deltaY);\n    };\n\n    _this.onTouchStart = function (event) {\n      // set touch start so we can calculate touchmove delta\n      _this.touchStart = event.changedTouches[0].clientY;\n    };\n\n    _this.onTouchMove = function (event) {\n      var deltaY = _this.touchStart - event.changedTouches[0].clientY;\n\n      _this.handleEventDelta(event, deltaY);\n    };\n\n    _this.getScrollTarget = function (ref) {\n      _this.scrollTarget = ref;\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollCaptor.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.startListening(this.scrollTarget);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.stopListening(this.scrollTarget);\n  };\n\n  _proto.startListening = function startListening(el) {\n    // bail early if no element is available to attach to\n    if (!el) return; // all the if statements are to appease Flow 😢\n\n    if (typeof el.addEventListener === 'function') {\n      el.addEventListener('wheel', this.onWheel, false);\n    }\n\n    if (typeof el.addEventListener === 'function') {\n      el.addEventListener('touchstart', this.onTouchStart, false);\n    }\n\n    if (typeof el.addEventListener === 'function') {\n      el.addEventListener('touchmove', this.onTouchMove, false);\n    }\n  };\n\n  _proto.stopListening = function stopListening(el) {\n    // all the if statements are to appease Flow 😢\n    if (typeof el.removeEventListener === 'function') {\n      el.removeEventListener('wheel', this.onWheel, false);\n    }\n\n    if (typeof el.removeEventListener === 'function') {\n      el.removeEventListener('touchstart', this.onTouchStart, false);\n    }\n\n    if (typeof el.removeEventListener === 'function') {\n      el.removeEventListener('touchmove', this.onTouchMove, false);\n    }\n  };\n\n  _proto.render = function render() {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(NodeResolver, {\n      innerRef: this.getScrollTarget\n    }, this.props.children);\n  };\n\n  return ScrollCaptor;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nfunction ScrollCaptorSwitch(_ref) {\n  var _ref$isEnabled = _ref.isEnabled,\n      isEnabled = _ref$isEnabled === void 0 ? true : _ref$isEnabled,\n      props = _objectWithoutPropertiesLoose$1(_ref, [\"isEnabled\"]);\n\n  return isEnabled ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ScrollCaptor, props) : props.children;\n}\n\nvar instructionsAriaMessage = function instructionsAriaMessage(event, context) {\n  if (context === void 0) {\n    context = {};\n  }\n\n  var _context = context,\n      isSearchable = _context.isSearchable,\n      isMulti = _context.isMulti,\n      label = _context.label,\n      isDisabled = _context.isDisabled;\n\n  switch (event) {\n    case 'menu':\n      return \"Use Up and Down to choose options\" + (isDisabled ? '' : ', press Enter to select the currently focused option') + \", press Escape to exit the menu, press Tab to select the option and exit the menu.\";\n\n    case 'input':\n      return (label ? label : 'Select') + \" is focused \" + (isSearchable ? ',type to refine list' : '') + \", press Down to open the menu, \" + (isMulti ? ' press left to focus selected values' : '');\n\n    case 'value':\n      return 'Use left and right to toggle between focused values, press Backspace to remove the currently focused value';\n  }\n};\nvar valueEventAriaMessage = function valueEventAriaMessage(event, context) {\n  var value = context.value,\n      isDisabled = context.isDisabled;\n  if (!value) return;\n\n  switch (event) {\n    case 'deselect-option':\n    case 'pop-value':\n    case 'remove-value':\n      return \"option \" + value + \", deselected.\";\n\n    case 'select-option':\n      return isDisabled ? \"option \" + value + \" is disabled. Select another option.\" : \"option \" + value + \", selected.\";\n  }\n};\nvar valueFocusAriaMessage = function valueFocusAriaMessage(_ref) {\n  var focusedValue = _ref.focusedValue,\n      getOptionLabel = _ref.getOptionLabel,\n      selectValue = _ref.selectValue;\n  return \"value \" + getOptionLabel(focusedValue) + \" focused, \" + (selectValue.indexOf(focusedValue) + 1) + \" of \" + selectValue.length + \".\";\n};\nvar optionFocusAriaMessage = function optionFocusAriaMessage(_ref2) {\n  var focusedOption = _ref2.focusedOption,\n      getOptionLabel = _ref2.getOptionLabel,\n      options = _ref2.options;\n  return \"option \" + getOptionLabel(focusedOption) + \" focused\" + (focusedOption.isDisabled ? ' disabled' : '') + \", \" + (options.indexOf(focusedOption) + 1) + \" of \" + options.length + \".\";\n};\nvar resultsAriaMessage = function resultsAriaMessage(_ref3) {\n  var inputValue = _ref3.inputValue,\n      screenReaderMessage = _ref3.screenReaderMessage;\n  return \"\" + screenReaderMessage + (inputValue ? ' for search term ' + inputValue : '') + \".\";\n};\n\nvar formatGroupLabel = function formatGroupLabel(group) {\n  return group.label;\n};\nvar getOptionLabel = function getOptionLabel(option) {\n  return option.label;\n};\nvar getOptionValue = function getOptionValue(option) {\n  return option.value;\n};\nvar isOptionDisabled = function isOptionDisabled(option) {\n  return !!option.isDisabled;\n};\n\nfunction _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }\nvar defaultStyles = {\n  clearIndicator: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"c\"],\n  container: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"a\"],\n  control: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"b\"],\n  dropdownIndicator: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"d\"],\n  group: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"g\"],\n  groupHeading: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"e\"],\n  indicatorsContainer: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"i\"],\n  indicatorSeparator: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"f\"],\n  input: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"h\"],\n  loadingIndicator: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"l\"],\n  loadingMessage: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"j\"],\n  menu: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"m\"],\n  menuList: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"k\"],\n  menuPortal: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"n\"],\n  multiValue: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"o\"],\n  multiValueLabel: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"p\"],\n  multiValueRemove: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"q\"],\n  noOptionsMessage: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"r\"],\n  option: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"s\"],\n  placeholder: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"t\"],\n  singleValue: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"u\"],\n  valueContainer: _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"v\"]\n}; // Merge Utility\n// Allows consumers to extend a base Select with additional styles\n\nfunction mergeStyles(source, target) {\n  if (target === void 0) {\n    target = {};\n  }\n\n  // initialize with source styles\n  var styles = _extends$3({}, source); // massage in target styles\n\n\n  Object.keys(target).forEach(function (key) {\n    if (source[key]) {\n      styles[key] = function (rsCss, props) {\n        return target[key](source[key](rsCss, props), props);\n      };\n    } else {\n      styles[key] = target[key];\n    }\n  });\n  return styles;\n}\n\nvar colors = {\n  primary: '#2684FF',\n  primary75: '#4C9AFF',\n  primary50: '#B2D4FF',\n  primary25: '#DEEBFF',\n  danger: '#DE350B',\n  dangerLight: '#FFBDAD',\n  neutral0: 'hsl(0, 0%, 100%)',\n  neutral5: 'hsl(0, 0%, 95%)',\n  neutral10: 'hsl(0, 0%, 90%)',\n  neutral20: 'hsl(0, 0%, 80%)',\n  neutral30: 'hsl(0, 0%, 70%)',\n  neutral40: 'hsl(0, 0%, 60%)',\n  neutral50: 'hsl(0, 0%, 50%)',\n  neutral60: 'hsl(0, 0%, 40%)',\n  neutral70: 'hsl(0, 0%, 30%)',\n  neutral80: 'hsl(0, 0%, 20%)',\n  neutral90: 'hsl(0, 0%, 10%)'\n};\nvar borderRadius = 4; // Used to calculate consistent margin/padding on elements\n\nvar baseUnit = 4; // The minimum height of the control\n\nvar controlHeight = 38; // The amount of space between the control and menu */\n\nvar menuGutter = baseUnit * 2;\nvar spacing = {\n  baseUnit: baseUnit,\n  controlHeight: controlHeight,\n  menuGutter: menuGutter\n};\nvar defaultTheme = {\n  borderRadius: borderRadius,\n  colors: colors,\n  spacing: spacing\n};\n\nfunction _objectWithoutPropertiesLoose$2(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }\n\nfunction _inheritsLoose$4(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nvar defaultProps = {\n  backspaceRemovesValue: true,\n  blurInputOnSelect: Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"i\"])(),\n  captureMenuScroll: !Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"i\"])(),\n  closeMenuOnSelect: true,\n  closeMenuOnScroll: false,\n  components: {},\n  controlShouldRenderValue: true,\n  escapeClearsValue: false,\n  filterOption: createFilter(),\n  formatGroupLabel: formatGroupLabel,\n  getOptionLabel: getOptionLabel,\n  getOptionValue: getOptionValue,\n  isDisabled: false,\n  isLoading: false,\n  isMulti: false,\n  isRtl: false,\n  isSearchable: true,\n  isOptionDisabled: isOptionDisabled,\n  loadingMessage: function loadingMessage() {\n    return 'Loading...';\n  },\n  maxMenuHeight: 300,\n  minMenuHeight: 140,\n  menuIsOpen: false,\n  menuPlacement: 'bottom',\n  menuPosition: 'absolute',\n  menuShouldBlockScroll: false,\n  menuShouldScrollIntoView: !Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"d\"])(),\n  noOptionsMessage: function noOptionsMessage() {\n    return 'No options';\n  },\n  openMenuOnFocus: false,\n  openMenuOnClick: true,\n  options: [],\n  pageSize: 5,\n  placeholder: 'Select...',\n  screenReaderStatus: function screenReaderStatus(_ref) {\n    var count = _ref.count;\n    return count + \" result\" + (count !== 1 ? 's' : '') + \" available\";\n  },\n  styles: {},\n  tabIndex: '0',\n  tabSelectsValue: true\n};\nvar instanceId = 1;\n\nvar Select =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose$4(Select, _Component);\n\n  // Misc. Instance Properties\n  // ------------------------------\n  // TODO\n  // Refs\n  // ------------------------------\n  // Lifecycle\n  // ------------------------------\n  function Select(_props) {\n    var _this;\n\n    _this = _Component.call(this, _props) || this;\n    _this.state = {\n      ariaLiveSelection: '',\n      ariaLiveContext: '',\n      focusedOption: null,\n      focusedValue: null,\n      inputIsHidden: false,\n      isFocused: false,\n      menuOptions: {\n        render: [],\n        focusable: []\n      },\n      selectValue: []\n    };\n    _this.blockOptionHover = false;\n    _this.isComposing = false;\n    _this.clearFocusValueOnUpdate = false;\n    _this.commonProps = void 0;\n    _this.components = void 0;\n    _this.hasGroups = false;\n    _this.initialTouchX = 0;\n    _this.initialTouchY = 0;\n    _this.inputIsHiddenAfterUpdate = void 0;\n    _this.instancePrefix = '';\n    _this.openAfterFocus = false;\n    _this.scrollToFocusedOptionOnUpdate = false;\n    _this.userIsDragging = void 0;\n    _this.controlRef = null;\n\n    _this.getControlRef = function (ref) {\n      _this.controlRef = ref;\n    };\n\n    _this.focusedOptionRef = null;\n\n    _this.getFocusedOptionRef = function (ref) {\n      _this.focusedOptionRef = ref;\n    };\n\n    _this.menuListRef = null;\n\n    _this.getMenuListRef = function (ref) {\n      _this.menuListRef = ref;\n    };\n\n    _this.inputRef = null;\n\n    _this.getInputRef = function (ref) {\n      _this.inputRef = ref;\n    };\n\n    _this.cacheComponents = function (components) {\n      _this.components = Object(_index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"w\"])({\n        components: components\n      });\n    };\n\n    _this.focus = _this.focusInput;\n    _this.blur = _this.blurInput;\n\n    _this.onChange = function (newValue, actionMeta) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          name = _this$props.name;\n      onChange(newValue, _extends$4({}, actionMeta, {\n        name: name\n      }));\n    };\n\n    _this.setValue = function (newValue, action, option) {\n      if (action === void 0) {\n        action = 'set-value';\n      }\n\n      var _this$props2 = _this.props,\n          closeMenuOnSelect = _this$props2.closeMenuOnSelect,\n          isMulti = _this$props2.isMulti;\n\n      _this.onInputChange('', {\n        action: 'set-value'\n      });\n\n      if (closeMenuOnSelect) {\n        _this.inputIsHiddenAfterUpdate = !isMulti;\n\n        _this.onMenuClose();\n      } // when the select value should change, we should reset focusedValue\n\n\n      _this.clearFocusValueOnUpdate = true;\n\n      _this.onChange(newValue, {\n        action: action,\n        option: option\n      });\n    };\n\n    _this.selectOption = function (newValue) {\n      var _this$props3 = _this.props,\n          blurInputOnSelect = _this$props3.blurInputOnSelect,\n          isMulti = _this$props3.isMulti;\n      var selectValue = _this.state.selectValue;\n\n      if (isMulti) {\n        if (_this.isOptionSelected(newValue, selectValue)) {\n          var candidate = _this.getOptionValue(newValue);\n\n          _this.setValue(selectValue.filter(function (i) {\n            return _this.getOptionValue(i) !== candidate;\n          }), 'deselect-option', newValue);\n\n          _this.announceAriaLiveSelection({\n            event: 'deselect-option',\n            context: {\n              value: _this.getOptionLabel(newValue)\n            }\n          });\n        } else {\n          if (!_this.isOptionDisabled(newValue, selectValue)) {\n            _this.setValue([].concat(selectValue, [newValue]), 'select-option', newValue);\n\n            _this.announceAriaLiveSelection({\n              event: 'select-option',\n              context: {\n                value: _this.getOptionLabel(newValue)\n              }\n            });\n          } else {\n            // announce that option is disabled\n            _this.announceAriaLiveSelection({\n              event: 'select-option',\n              context: {\n                value: _this.getOptionLabel(newValue),\n                isDisabled: true\n              }\n            });\n          }\n        }\n      } else {\n        if (!_this.isOptionDisabled(newValue, selectValue)) {\n          _this.setValue(newValue, 'select-option');\n\n          _this.announceAriaLiveSelection({\n            event: 'select-option',\n            context: {\n              value: _this.getOptionLabel(newValue)\n            }\n          });\n        } else {\n          // announce that option is disabled\n          _this.announceAriaLiveSelection({\n            event: 'select-option',\n            context: {\n              value: _this.getOptionLabel(newValue),\n              isDisabled: true\n            }\n          });\n        }\n      }\n\n      if (blurInputOnSelect) {\n        _this.blurInput();\n      }\n    };\n\n    _this.removeValue = function (removedValue) {\n      var selectValue = _this.state.selectValue;\n\n      var candidate = _this.getOptionValue(removedValue);\n\n      var newValue = selectValue.filter(function (i) {\n        return _this.getOptionValue(i) !== candidate;\n      });\n\n      _this.onChange(newValue.length ? newValue : null, {\n        action: 'remove-value',\n        removedValue: removedValue\n      });\n\n      _this.announceAriaLiveSelection({\n        event: 'remove-value',\n        context: {\n          value: removedValue ? _this.getOptionLabel(removedValue) : ''\n        }\n      });\n\n      _this.focusInput();\n    };\n\n    _this.clearValue = function () {\n      var isMulti = _this.props.isMulti;\n\n      _this.onChange(isMulti ? [] : null, {\n        action: 'clear'\n      });\n    };\n\n    _this.popValue = function () {\n      var selectValue = _this.state.selectValue;\n      var lastSelectedValue = selectValue[selectValue.length - 1];\n      var newValue = selectValue.slice(0, selectValue.length - 1);\n\n      _this.announceAriaLiveSelection({\n        event: 'pop-value',\n        context: {\n          value: lastSelectedValue ? _this.getOptionLabel(lastSelectedValue) : ''\n        }\n      });\n\n      _this.onChange(newValue.length ? newValue : null, {\n        action: 'pop-value',\n        removedValue: lastSelectedValue\n      });\n    };\n\n    _this.getOptionLabel = function (data) {\n      return _this.props.getOptionLabel(data);\n    };\n\n    _this.getOptionValue = function (data) {\n      return _this.props.getOptionValue(data);\n    };\n\n    _this.getStyles = function (key, props) {\n      var base = defaultStyles[key](props);\n      base.boxSizing = 'border-box';\n      var custom = _this.props.styles[key];\n      return custom ? custom(base, props) : base;\n    };\n\n    _this.getElementId = function (element) {\n      return _this.instancePrefix + \"-\" + element;\n    };\n\n    _this.getActiveDescendentId = function () {\n      var menuIsOpen = _this.props.menuIsOpen;\n      var _this$state = _this.state,\n          menuOptions = _this$state.menuOptions,\n          focusedOption = _this$state.focusedOption;\n      if (!focusedOption || !menuIsOpen) return undefined;\n      var index = menuOptions.focusable.indexOf(focusedOption);\n      var option = menuOptions.render[index];\n      return option && option.key;\n    };\n\n    _this.announceAriaLiveSelection = function (_ref2) {\n      var event = _ref2.event,\n          context = _ref2.context;\n\n      _this.setState({\n        ariaLiveSelection: valueEventAriaMessage(event, context)\n      });\n    };\n\n    _this.announceAriaLiveContext = function (_ref3) {\n      var event = _ref3.event,\n          context = _ref3.context;\n\n      _this.setState({\n        ariaLiveContext: instructionsAriaMessage(event, _extends$4({}, context, {\n          label: _this.props['aria-label']\n        }))\n      });\n    };\n\n    _this.onMenuMouseDown = function (event) {\n      if (event.button !== 0) {\n        return;\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n\n      _this.focusInput();\n    };\n\n    _this.onMenuMouseMove = function (event) {\n      _this.blockOptionHover = false;\n    };\n\n    _this.onControlMouseDown = function (event) {\n      var openMenuOnClick = _this.props.openMenuOnClick;\n\n      if (!_this.state.isFocused) {\n        if (openMenuOnClick) {\n          _this.openAfterFocus = true;\n        }\n\n        _this.focusInput();\n      } else if (!_this.props.menuIsOpen) {\n        if (openMenuOnClick) {\n          _this.openMenu('first');\n        }\n      } else {\n        if ( // $FlowFixMe\n        event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {\n          _this.onMenuClose();\n        }\n      }\n\n      if ( // $FlowFixMe\n      event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {\n        event.preventDefault();\n      }\n    };\n\n    _this.onDropdownIndicatorMouseDown = function (event) {\n      // ignore mouse events that weren't triggered by the primary button\n      if (event && event.type === 'mousedown' && event.button !== 0) {\n        return;\n      }\n\n      if (_this.props.isDisabled) return;\n      var _this$props4 = _this.props,\n          isMulti = _this$props4.isMulti,\n          menuIsOpen = _this$props4.menuIsOpen;\n\n      _this.focusInput();\n\n      if (menuIsOpen) {\n        _this.inputIsHiddenAfterUpdate = !isMulti;\n\n        _this.onMenuClose();\n      } else {\n        _this.openMenu('first');\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this.onClearIndicatorMouseDown = function (event) {\n      // ignore mouse events that weren't triggered by the primary button\n      if (event && event.type === 'mousedown' && event.button !== 0) {\n        return;\n      }\n\n      _this.clearValue();\n\n      event.stopPropagation();\n      _this.openAfterFocus = false;\n\n      if (event.type === 'touchend') {\n        _this.focusInput();\n      } else {\n        setTimeout(function () {\n          return _this.focusInput();\n        });\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (typeof _this.props.closeMenuOnScroll === 'boolean') {\n        if (event.target instanceof HTMLElement && Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"j\"])(event.target)) {\n          _this.props.onMenuClose();\n        }\n      } else if (typeof _this.props.closeMenuOnScroll === 'function') {\n        if (_this.props.closeMenuOnScroll(event)) {\n          _this.props.onMenuClose();\n        }\n      }\n    };\n\n    _this.onCompositionStart = function () {\n      _this.isComposing = true;\n    };\n\n    _this.onCompositionEnd = function () {\n      _this.isComposing = false;\n    };\n\n    _this.onTouchStart = function (_ref4) {\n      var touches = _ref4.touches;\n      var touch = touches.item(0);\n\n      if (!touch) {\n        return;\n      }\n\n      _this.initialTouchX = touch.clientX;\n      _this.initialTouchY = touch.clientY;\n      _this.userIsDragging = false;\n    };\n\n    _this.onTouchMove = function (_ref5) {\n      var touches = _ref5.touches;\n      var touch = touches.item(0);\n\n      if (!touch) {\n        return;\n      }\n\n      var deltaX = Math.abs(touch.clientX - _this.initialTouchX);\n      var deltaY = Math.abs(touch.clientY - _this.initialTouchY);\n      var moveThreshold = 5;\n      _this.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold;\n    };\n\n    _this.onTouchEnd = function (event) {\n      if (_this.userIsDragging) return; // close the menu if the user taps outside\n      // we're checking on event.target here instead of event.currentTarget, because we want to assert information\n      // on events on child elements, not the document (which we've attached this handler to).\n\n      if (_this.controlRef && !_this.controlRef.contains(event.target) && _this.menuListRef && !_this.menuListRef.contains(event.target)) {\n        _this.blurInput();\n      } // reset move vars\n\n\n      _this.initialTouchX = 0;\n      _this.initialTouchY = 0;\n    };\n\n    _this.onControlTouchEnd = function (event) {\n      if (_this.userIsDragging) return;\n\n      _this.onControlMouseDown(event);\n    };\n\n    _this.onClearIndicatorTouchEnd = function (event) {\n      if (_this.userIsDragging) return;\n\n      _this.onClearIndicatorMouseDown(event);\n    };\n\n    _this.onDropdownIndicatorTouchEnd = function (event) {\n      if (_this.userIsDragging) return;\n\n      _this.onDropdownIndicatorMouseDown(event);\n    };\n\n    _this.handleInputChange = function (event) {\n      var inputValue = event.currentTarget.value;\n      _this.inputIsHiddenAfterUpdate = false;\n\n      _this.onInputChange(inputValue, {\n        action: 'input-change'\n      });\n\n      _this.onMenuOpen();\n    };\n\n    _this.onInputFocus = function (event) {\n      var _this$props5 = _this.props,\n          isSearchable = _this$props5.isSearchable,\n          isMulti = _this$props5.isMulti;\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n\n      _this.inputIsHiddenAfterUpdate = false;\n\n      _this.announceAriaLiveContext({\n        event: 'input',\n        context: {\n          isSearchable: isSearchable,\n          isMulti: isMulti\n        }\n      });\n\n      _this.setState({\n        isFocused: true\n      });\n\n      if (_this.openAfterFocus || _this.props.openMenuOnFocus) {\n        _this.openMenu('first');\n      }\n\n      _this.openAfterFocus = false;\n    };\n\n    _this.onInputBlur = function (event) {\n      if (_this.menuListRef && _this.menuListRef.contains(document.activeElement)) {\n        _this.inputRef.focus();\n\n        return;\n      }\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n\n      _this.onInputChange('', {\n        action: 'input-blur'\n      });\n\n      _this.onMenuClose();\n\n      _this.setState({\n        focusedValue: null,\n        isFocused: false\n      });\n    };\n\n    _this.onOptionHover = function (focusedOption) {\n      if (_this.blockOptionHover || _this.state.focusedOption === focusedOption) {\n        return;\n      }\n\n      _this.setState({\n        focusedOption: focusedOption\n      });\n    };\n\n    _this.shouldHideSelectedOptions = function () {\n      var _this$props6 = _this.props,\n          hideSelectedOptions = _this$props6.hideSelectedOptions,\n          isMulti = _this$props6.isMulti;\n      if (hideSelectedOptions === undefined) return isMulti;\n      return hideSelectedOptions;\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$props7 = _this.props,\n          isMulti = _this$props7.isMulti,\n          backspaceRemovesValue = _this$props7.backspaceRemovesValue,\n          escapeClearsValue = _this$props7.escapeClearsValue,\n          inputValue = _this$props7.inputValue,\n          isClearable = _this$props7.isClearable,\n          isDisabled = _this$props7.isDisabled,\n          menuIsOpen = _this$props7.menuIsOpen,\n          onKeyDown = _this$props7.onKeyDown,\n          tabSelectsValue = _this$props7.tabSelectsValue,\n          openMenuOnFocus = _this$props7.openMenuOnFocus;\n      var _this$state2 = _this.state,\n          focusedOption = _this$state2.focusedOption,\n          focusedValue = _this$state2.focusedValue,\n          selectValue = _this$state2.selectValue;\n      if (isDisabled) return;\n\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event);\n\n        if (event.defaultPrevented) {\n          return;\n        }\n      } // Block option hover events when the user has just pressed a key\n\n\n      _this.blockOptionHover = true;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          if (!isMulti || inputValue) return;\n\n          _this.focusValue('previous');\n\n          break;\n\n        case 'ArrowRight':\n          if (!isMulti || inputValue) return;\n\n          _this.focusValue('next');\n\n          break;\n\n        case 'Delete':\n        case 'Backspace':\n          if (inputValue) return;\n\n          if (focusedValue) {\n            _this.removeValue(focusedValue);\n          } else {\n            if (!backspaceRemovesValue) return;\n\n            if (isMulti) {\n              _this.popValue();\n            } else if (isClearable) {\n              _this.clearValue();\n            }\n          }\n\n          break;\n\n        case 'Tab':\n          if (_this.isComposing) return;\n\n          if (event.shiftKey || !menuIsOpen || !tabSelectsValue || !focusedOption || // don't capture the event if the menu opens on focus and the focused\n          // option is already selected; it breaks the flow of navigation\n          openMenuOnFocus && _this.isOptionSelected(focusedOption, selectValue)) {\n            return;\n          }\n\n          _this.selectOption(focusedOption);\n\n          break;\n\n        case 'Enter':\n          if (event.keyCode === 229) {\n            // ignore the keydown event from an Input Method Editor(IME)\n            // ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n            break;\n          }\n\n          if (menuIsOpen) {\n            if (!focusedOption) return;\n            if (_this.isComposing) return;\n\n            _this.selectOption(focusedOption);\n\n            break;\n          }\n\n          return;\n\n        case 'Escape':\n          if (menuIsOpen) {\n            _this.inputIsHiddenAfterUpdate = false;\n\n            _this.onInputChange('', {\n              action: 'menu-close'\n            });\n\n            _this.onMenuClose();\n          } else if (isClearable && escapeClearsValue) {\n            _this.clearValue();\n          }\n\n          break;\n\n        case ' ':\n          // space\n          if (inputValue) {\n            return;\n          }\n\n          if (!menuIsOpen) {\n            _this.openMenu('first');\n\n            break;\n          }\n\n          if (!focusedOption) return;\n\n          _this.selectOption(focusedOption);\n\n          break;\n\n        case 'ArrowUp':\n          if (menuIsOpen) {\n            _this.focusOption('up');\n          } else {\n            _this.openMenu('last');\n          }\n\n          break;\n\n        case 'ArrowDown':\n          if (menuIsOpen) {\n            _this.focusOption('down');\n          } else {\n            _this.openMenu('first');\n          }\n\n          break;\n\n        case 'PageUp':\n          if (!menuIsOpen) return;\n\n          _this.focusOption('pageup');\n\n          break;\n\n        case 'PageDown':\n          if (!menuIsOpen) return;\n\n          _this.focusOption('pagedown');\n\n          break;\n\n        case 'Home':\n          if (!menuIsOpen) return;\n\n          _this.focusOption('first');\n\n          break;\n\n        case 'End':\n          if (!menuIsOpen) return;\n\n          _this.focusOption('last');\n\n          break;\n\n        default:\n          return;\n      }\n\n      event.preventDefault();\n    };\n\n    _this.buildMenuOptions = function (props, selectValue) {\n      var _props$inputValue = props.inputValue,\n          inputValue = _props$inputValue === void 0 ? '' : _props$inputValue,\n          options = props.options;\n\n      var toOption = function toOption(option, id) {\n        var isDisabled = _this.isOptionDisabled(option, selectValue);\n\n        var isSelected = _this.isOptionSelected(option, selectValue);\n\n        var label = _this.getOptionLabel(option);\n\n        var value = _this.getOptionValue(option);\n\n        if (_this.shouldHideSelectedOptions() && isSelected || !_this.filterOption({\n          label: label,\n          value: value,\n          data: option\n        }, inputValue)) {\n          return;\n        }\n\n        var onHover = isDisabled ? undefined : function () {\n          return _this.onOptionHover(option);\n        };\n        var onSelect = isDisabled ? undefined : function () {\n          return _this.selectOption(option);\n        };\n        var optionId = _this.getElementId('option') + \"-\" + id;\n        return {\n          innerProps: {\n            id: optionId,\n            onClick: onSelect,\n            onMouseMove: onHover,\n            onMouseOver: onHover,\n            tabIndex: -1\n          },\n          data: option,\n          isDisabled: isDisabled,\n          isSelected: isSelected,\n          key: optionId,\n          label: label,\n          type: 'option',\n          value: value\n        };\n      };\n\n      return options.reduce(function (acc, item, itemIndex) {\n        if (item.options) {\n          // TODO needs a tidier implementation\n          if (!_this.hasGroups) _this.hasGroups = true;\n          var items = item.options;\n          var children = items.map(function (child, i) {\n            var option = toOption(child, itemIndex + \"-\" + i);\n            if (option) acc.focusable.push(child);\n            return option;\n          }).filter(Boolean);\n\n          if (children.length) {\n            var groupId = _this.getElementId('group') + \"-\" + itemIndex;\n            acc.render.push({\n              type: 'group',\n              key: groupId,\n              data: item,\n              options: children\n            });\n          }\n        } else {\n          var option = toOption(item, \"\" + itemIndex);\n\n          if (option) {\n            acc.render.push(option);\n            acc.focusable.push(item);\n          }\n        }\n\n        return acc;\n      }, {\n        render: [],\n        focusable: []\n      });\n    };\n\n    var _value = _props.value;\n    _this.cacheComponents = Object(memoize_one__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_this.cacheComponents, _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"x\"]).bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.cacheComponents(_props.components);\n\n    _this.instancePrefix = 'react-select-' + (_this.props.instanceId || ++instanceId);\n\n    var _selectValue = Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"e\"])(_value);\n\n    _this.buildMenuOptions = Object(memoize_one__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_this.buildMenuOptions, function (newArgs, lastArgs) {\n      var _ref6 = newArgs,\n          newProps = _ref6[0],\n          newSelectValue = _ref6[1];\n      var _ref7 = lastArgs,\n          lastProps = _ref7[0],\n          lastSelectValue = _ref7[1];\n      return Object(_index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"x\"])(newSelectValue, lastSelectValue) && Object(_index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"x\"])(newProps.inputValue, lastProps.inputValue) && Object(_index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"x\"])(newProps.options, lastProps.options);\n    }).bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    var _menuOptions = _props.menuIsOpen ? _this.buildMenuOptions(_props, _selectValue) : {\n      render: [],\n      focusable: []\n    };\n\n    _this.state.menuOptions = _menuOptions;\n    _this.state.selectValue = _selectValue;\n    return _this;\n  }\n\n  var _proto = Select.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.startListeningComposition();\n    this.startListeningToTouch();\n\n    if (this.props.closeMenuOnScroll && document && document.addEventListener) {\n      // Listen to all scroll events, and filter them out inside of 'onScroll'\n      document.addEventListener('scroll', this.onScroll, true);\n    }\n\n    if (this.props.autoFocus) {\n      this.focusInput();\n    }\n  };\n\n  _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this$props8 = this.props,\n        options = _this$props8.options,\n        value = _this$props8.value,\n        menuIsOpen = _this$props8.menuIsOpen,\n        inputValue = _this$props8.inputValue; // re-cache custom components\n\n    this.cacheComponents(nextProps.components); // rebuild the menu options\n\n    if (nextProps.value !== value || nextProps.options !== options || nextProps.menuIsOpen !== menuIsOpen || nextProps.inputValue !== inputValue) {\n      var selectValue = Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"e\"])(nextProps.value);\n      var menuOptions = nextProps.menuIsOpen ? this.buildMenuOptions(nextProps, selectValue) : {\n        render: [],\n        focusable: []\n      };\n      var focusedValue = this.getNextFocusedValue(selectValue);\n      var focusedOption = this.getNextFocusedOption(menuOptions.focusable);\n      this.setState({\n        menuOptions: menuOptions,\n        selectValue: selectValue,\n        focusedOption: focusedOption,\n        focusedValue: focusedValue\n      });\n    } // some updates should toggle the state of the input visibility\n\n\n    if (this.inputIsHiddenAfterUpdate != null) {\n      this.setState({\n        inputIsHidden: this.inputIsHiddenAfterUpdate\n      });\n      delete this.inputIsHiddenAfterUpdate;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        isDisabled = _this$props9.isDisabled,\n        menuIsOpen = _this$props9.menuIsOpen;\n    var isFocused = this.state.isFocused;\n\n    if ( // ensure focus is restored correctly when the control becomes enabled\n    isFocused && !isDisabled && prevProps.isDisabled || // ensure focus is on the Input when the menu opens\n    isFocused && menuIsOpen && !prevProps.menuIsOpen) {\n      this.focusInput();\n    } // scroll the focused option into view if necessary\n\n\n    if (this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate) {\n      Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"f\"])(this.menuListRef, this.focusedOptionRef);\n      this.scrollToFocusedOptionOnUpdate = false;\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.stopListeningComposition();\n    this.stopListeningToTouch();\n    document.removeEventListener('scroll', this.onScroll, true);\n  };\n\n  // ==============================\n  // Consumer Handlers\n  // ==============================\n  _proto.onMenuOpen = function onMenuOpen() {\n    this.props.onMenuOpen();\n  };\n\n  _proto.onMenuClose = function onMenuClose() {\n    var _this$props10 = this.props,\n        isSearchable = _this$props10.isSearchable,\n        isMulti = _this$props10.isMulti;\n    this.announceAriaLiveContext({\n      event: 'input',\n      context: {\n        isSearchable: isSearchable,\n        isMulti: isMulti\n      }\n    });\n    this.onInputChange('', {\n      action: 'menu-close'\n    });\n    this.props.onMenuClose();\n  };\n\n  _proto.onInputChange = function onInputChange(newValue, actionMeta) {\n    this.props.onInputChange(newValue, actionMeta);\n  } // ==============================\n  // Methods\n  // ==============================\n  ;\n\n  _proto.focusInput = function focusInput() {\n    if (!this.inputRef) return;\n    this.inputRef.focus();\n  };\n\n  _proto.blurInput = function blurInput() {\n    if (!this.inputRef) return;\n    this.inputRef.blur();\n  } // aliased for consumers\n  ;\n\n  _proto.openMenu = function openMenu(focusOption) {\n    var _this2 = this;\n\n    var _this$state3 = this.state,\n        selectValue = _this$state3.selectValue,\n        isFocused = _this$state3.isFocused;\n    var menuOptions = this.buildMenuOptions(this.props, selectValue);\n    var isMulti = this.props.isMulti;\n    var openAtIndex = focusOption === 'first' ? 0 : menuOptions.focusable.length - 1;\n\n    if (!isMulti) {\n      var selectedIndex = menuOptions.focusable.indexOf(selectValue[0]);\n\n      if (selectedIndex > -1) {\n        openAtIndex = selectedIndex;\n      }\n    } // only scroll if the menu isn't already open\n\n\n    this.scrollToFocusedOptionOnUpdate = !(isFocused && this.menuListRef);\n    this.inputIsHiddenAfterUpdate = false;\n    this.setState({\n      menuOptions: menuOptions,\n      focusedValue: null,\n      focusedOption: menuOptions.focusable[openAtIndex]\n    }, function () {\n      _this2.onMenuOpen();\n\n      _this2.announceAriaLiveContext({\n        event: 'menu'\n      });\n    });\n  };\n\n  _proto.focusValue = function focusValue(direction) {\n    var _this$props11 = this.props,\n        isMulti = _this$props11.isMulti,\n        isSearchable = _this$props11.isSearchable;\n    var _this$state4 = this.state,\n        selectValue = _this$state4.selectValue,\n        focusedValue = _this$state4.focusedValue; // Only multiselects support value focusing\n\n    if (!isMulti) return;\n    this.setState({\n      focusedOption: null\n    });\n    var focusedIndex = selectValue.indexOf(focusedValue);\n\n    if (!focusedValue) {\n      focusedIndex = -1;\n      this.announceAriaLiveContext({\n        event: 'value'\n      });\n    }\n\n    var lastIndex = selectValue.length - 1;\n    var nextFocus = -1;\n    if (!selectValue.length) return;\n\n    switch (direction) {\n      case 'previous':\n        if (focusedIndex === 0) {\n          // don't cycle from the start to the end\n          nextFocus = 0;\n        } else if (focusedIndex === -1) {\n          // if nothing is focused, focus the last value first\n          nextFocus = lastIndex;\n        } else {\n          nextFocus = focusedIndex - 1;\n        }\n\n        break;\n\n      case 'next':\n        if (focusedIndex > -1 && focusedIndex < lastIndex) {\n          nextFocus = focusedIndex + 1;\n        }\n\n        break;\n    }\n\n    if (nextFocus === -1) {\n      this.announceAriaLiveContext({\n        event: 'input',\n        context: {\n          isSearchable: isSearchable,\n          isMulti: isMulti\n        }\n      });\n    }\n\n    this.setState({\n      inputIsHidden: nextFocus !== -1,\n      focusedValue: selectValue[nextFocus]\n    });\n  };\n\n  _proto.focusOption = function focusOption(direction) {\n    if (direction === void 0) {\n      direction = 'first';\n    }\n\n    var pageSize = this.props.pageSize;\n    var _this$state5 = this.state,\n        focusedOption = _this$state5.focusedOption,\n        menuOptions = _this$state5.menuOptions;\n    var options = menuOptions.focusable;\n    if (!options.length) return;\n    var nextFocus = 0; // handles 'first'\n\n    var focusedIndex = options.indexOf(focusedOption);\n\n    if (!focusedOption) {\n      focusedIndex = -1;\n      this.announceAriaLiveContext({\n        event: 'menu'\n      });\n    }\n\n    if (direction === 'up') {\n      nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options.length - 1;\n    } else if (direction === 'down') {\n      nextFocus = (focusedIndex + 1) % options.length;\n    } else if (direction === 'pageup') {\n      nextFocus = focusedIndex - pageSize;\n      if (nextFocus < 0) nextFocus = 0;\n    } else if (direction === 'pagedown') {\n      nextFocus = focusedIndex + pageSize;\n      if (nextFocus > options.length - 1) nextFocus = options.length - 1;\n    } else if (direction === 'last') {\n      nextFocus = options.length - 1;\n    }\n\n    this.scrollToFocusedOptionOnUpdate = true;\n    this.setState({\n      focusedOption: options[nextFocus],\n      focusedValue: null\n    });\n    this.announceAriaLiveContext({\n      event: 'menu',\n      context: {\n        isDisabled: isOptionDisabled(options[nextFocus])\n      }\n    });\n  };\n\n  // ==============================\n  // Getters\n  // ==============================\n  _proto.getTheme = function getTheme() {\n    // Use the default theme if there are no customizations.\n    if (!this.props.theme) {\n      return defaultTheme;\n    } // If the theme prop is a function, assume the function\n    // knows how to merge the passed-in default theme with\n    // its own modifications.\n\n\n    if (typeof this.props.theme === 'function') {\n      return this.props.theme(defaultTheme);\n    } // Otherwise, if a plain theme object was passed in,\n    // overlay it with the default theme.\n\n\n    return _extends$4({}, defaultTheme, this.props.theme);\n  };\n\n  _proto.getCommonProps = function getCommonProps() {\n    var clearValue = this.clearValue,\n        getStyles = this.getStyles,\n        setValue = this.setValue,\n        selectOption = this.selectOption,\n        props = this.props;\n    var classNamePrefix = props.classNamePrefix,\n        isMulti = props.isMulti,\n        isRtl = props.isRtl,\n        options = props.options;\n    var selectValue = this.state.selectValue;\n    var hasValue = this.hasValue();\n\n    var getValue = function getValue() {\n      return selectValue;\n    };\n\n    var cx = _utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"h\"].bind(null, classNamePrefix);\n    return {\n      cx: cx,\n      clearValue: clearValue,\n      getStyles: getStyles,\n      getValue: getValue,\n      hasValue: hasValue,\n      isMulti: isMulti,\n      isRtl: isRtl,\n      options: options,\n      selectOption: selectOption,\n      setValue: setValue,\n      selectProps: props,\n      theme: this.getTheme()\n    };\n  };\n\n  _proto.getNextFocusedValue = function getNextFocusedValue(nextSelectValue) {\n    if (this.clearFocusValueOnUpdate) {\n      this.clearFocusValueOnUpdate = false;\n      return null;\n    }\n\n    var _this$state6 = this.state,\n        focusedValue = _this$state6.focusedValue,\n        lastSelectValue = _this$state6.selectValue;\n    var lastFocusedIndex = lastSelectValue.indexOf(focusedValue);\n\n    if (lastFocusedIndex > -1) {\n      var nextFocusedIndex = nextSelectValue.indexOf(focusedValue);\n\n      if (nextFocusedIndex > -1) {\n        // the focused value is still in the selectValue, return it\n        return focusedValue;\n      } else if (lastFocusedIndex < nextSelectValue.length) {\n        // the focusedValue is not present in the next selectValue array by\n        // reference, so return the new value at the same index\n        return nextSelectValue[lastFocusedIndex];\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getNextFocusedOption = function getNextFocusedOption(options) {\n    var lastFocusedOption = this.state.focusedOption;\n    return lastFocusedOption && options.indexOf(lastFocusedOption) > -1 ? lastFocusedOption : options[0];\n  };\n\n  _proto.hasValue = function hasValue() {\n    var selectValue = this.state.selectValue;\n    return selectValue.length > 0;\n  };\n\n  _proto.hasOptions = function hasOptions() {\n    return !!this.state.menuOptions.render.length;\n  };\n\n  _proto.countOptions = function countOptions() {\n    return this.state.menuOptions.focusable.length;\n  };\n\n  _proto.isClearable = function isClearable() {\n    var _this$props12 = this.props,\n        isClearable = _this$props12.isClearable,\n        isMulti = _this$props12.isMulti; // single select, by default, IS NOT clearable\n    // multi select, by default, IS clearable\n\n    if (isClearable === undefined) return isMulti;\n    return isClearable;\n  };\n\n  _proto.isOptionDisabled = function isOptionDisabled(option, selectValue) {\n    return typeof this.props.isOptionDisabled === 'function' ? this.props.isOptionDisabled(option, selectValue) : false;\n  };\n\n  _proto.isOptionSelected = function isOptionSelected(option, selectValue) {\n    var _this3 = this;\n\n    if (selectValue.indexOf(option) > -1) return true;\n\n    if (typeof this.props.isOptionSelected === 'function') {\n      return this.props.isOptionSelected(option, selectValue);\n    }\n\n    var candidate = this.getOptionValue(option);\n    return selectValue.some(function (i) {\n      return _this3.getOptionValue(i) === candidate;\n    });\n  };\n\n  _proto.filterOption = function filterOption(option, inputValue) {\n    return this.props.filterOption ? this.props.filterOption(option, inputValue) : true;\n  };\n\n  _proto.formatOptionLabel = function formatOptionLabel(data, context) {\n    if (typeof this.props.formatOptionLabel === 'function') {\n      var inputValue = this.props.inputValue;\n      var selectValue = this.state.selectValue;\n      return this.props.formatOptionLabel(data, {\n        context: context,\n        inputValue: inputValue,\n        selectValue: selectValue\n      });\n    } else {\n      return this.getOptionLabel(data);\n    }\n  };\n\n  _proto.formatGroupLabel = function formatGroupLabel(data) {\n    return this.props.formatGroupLabel(data);\n  } // ==============================\n  // Mouse Handlers\n  // ==============================\n  ;\n\n  // ==============================\n  // Composition Handlers\n  // ==============================\n  _proto.startListeningComposition = function startListeningComposition() {\n    if (document && document.addEventListener) {\n      document.addEventListener('compositionstart', this.onCompositionStart, false);\n      document.addEventListener('compositionend', this.onCompositionEnd, false);\n    }\n  };\n\n  _proto.stopListeningComposition = function stopListeningComposition() {\n    if (document && document.removeEventListener) {\n      document.removeEventListener('compositionstart', this.onCompositionStart);\n      document.removeEventListener('compositionend', this.onCompositionEnd);\n    }\n  };\n\n  // ==============================\n  // Touch Handlers\n  // ==============================\n  _proto.startListeningToTouch = function startListeningToTouch() {\n    if (document && document.addEventListener) {\n      document.addEventListener('touchstart', this.onTouchStart, false);\n      document.addEventListener('touchmove', this.onTouchMove, false);\n      document.addEventListener('touchend', this.onTouchEnd, false);\n    }\n  };\n\n  _proto.stopListeningToTouch = function stopListeningToTouch() {\n    if (document && document.removeEventListener) {\n      document.removeEventListener('touchstart', this.onTouchStart);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  // ==============================\n  // Renderers\n  // ==============================\n  _proto.constructAriaLiveMessage = function constructAriaLiveMessage() {\n    var _this$state7 = this.state,\n        ariaLiveContext = _this$state7.ariaLiveContext,\n        selectValue = _this$state7.selectValue,\n        focusedValue = _this$state7.focusedValue,\n        focusedOption = _this$state7.focusedOption;\n    var _this$props13 = this.props,\n        options = _this$props13.options,\n        menuIsOpen = _this$props13.menuIsOpen,\n        inputValue = _this$props13.inputValue,\n        screenReaderStatus = _this$props13.screenReaderStatus; // An aria live message representing the currently focused value in the select.\n\n    var focusedValueMsg = focusedValue ? valueFocusAriaMessage({\n      focusedValue: focusedValue,\n      getOptionLabel: this.getOptionLabel,\n      selectValue: selectValue\n    }) : ''; // An aria live message representing the currently focused option in the select.\n\n    var focusedOptionMsg = focusedOption && menuIsOpen ? optionFocusAriaMessage({\n      focusedOption: focusedOption,\n      getOptionLabel: this.getOptionLabel,\n      options: options\n    }) : ''; // An aria live message representing the set of focusable results and current searchterm/inputvalue.\n\n    var resultsMsg = resultsAriaMessage({\n      inputValue: inputValue,\n      screenReaderMessage: screenReaderStatus({\n        count: this.countOptions()\n      })\n    });\n    return focusedValueMsg + \" \" + focusedOptionMsg + \" \" + resultsMsg + \" \" + ariaLiveContext;\n  };\n\n  _proto.renderInput = function renderInput() {\n    var _this$props14 = this.props,\n        isDisabled = _this$props14.isDisabled,\n        isSearchable = _this$props14.isSearchable,\n        inputId = _this$props14.inputId,\n        inputValue = _this$props14.inputValue,\n        tabIndex = _this$props14.tabIndex;\n    var Input = this.components.Input;\n    var inputIsHidden = this.state.inputIsHidden;\n    var id = inputId || this.getElementId('input'); // aria attributes makes the JSX \"noisy\", separated for clarity\n\n    var ariaAttributes = {\n      'aria-autocomplete': 'list',\n      'aria-label': this.props['aria-label'],\n      'aria-labelledby': this.props['aria-labelledby']\n    };\n\n    if (!isSearchable) {\n      // use a dummy input to maintain focus/blur functionality\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DummyInput, _extends$4({\n        id: id,\n        innerRef: this.getInputRef,\n        onBlur: this.onInputBlur,\n        onChange: _utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"n\"],\n        onFocus: this.onInputFocus,\n        readOnly: true,\n        disabled: isDisabled,\n        tabIndex: tabIndex,\n        value: \"\"\n      }, ariaAttributes));\n    }\n\n    var _this$commonProps = this.commonProps,\n        cx = _this$commonProps.cx,\n        theme = _this$commonProps.theme,\n        selectProps = _this$commonProps.selectProps;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Input, _extends$4({\n      autoCapitalize: \"none\",\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      cx: cx,\n      getStyles: this.getStyles,\n      id: id,\n      innerRef: this.getInputRef,\n      isDisabled: isDisabled,\n      isHidden: inputIsHidden,\n      onBlur: this.onInputBlur,\n      onChange: this.handleInputChange,\n      onFocus: this.onInputFocus,\n      selectProps: selectProps,\n      spellCheck: \"false\",\n      tabIndex: tabIndex,\n      theme: theme,\n      type: \"text\",\n      value: inputValue\n    }, ariaAttributes));\n  };\n\n  _proto.renderPlaceholderOrValue = function renderPlaceholderOrValue() {\n    var _this4 = this;\n\n    var _this$components = this.components,\n        MultiValue = _this$components.MultiValue,\n        MultiValueContainer = _this$components.MultiValueContainer,\n        MultiValueLabel = _this$components.MultiValueLabel,\n        MultiValueRemove = _this$components.MultiValueRemove,\n        SingleValue = _this$components.SingleValue,\n        Placeholder = _this$components.Placeholder;\n    var commonProps = this.commonProps;\n    var _this$props15 = this.props,\n        controlShouldRenderValue = _this$props15.controlShouldRenderValue,\n        isDisabled = _this$props15.isDisabled,\n        isMulti = _this$props15.isMulti,\n        inputValue = _this$props15.inputValue,\n        placeholder = _this$props15.placeholder;\n    var _this$state8 = this.state,\n        selectValue = _this$state8.selectValue,\n        focusedValue = _this$state8.focusedValue,\n        isFocused = _this$state8.isFocused;\n\n    if (!this.hasValue() || !controlShouldRenderValue) {\n      return inputValue ? null : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Placeholder, _extends$4({}, commonProps, {\n        key: \"placeholder\",\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }), placeholder);\n    }\n\n    if (isMulti) {\n      var selectValues = selectValue.map(function (opt, index) {\n        var isOptionFocused = opt === focusedValue;\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MultiValue, _extends$4({}, commonProps, {\n          components: {\n            Container: MultiValueContainer,\n            Label: MultiValueLabel,\n            Remove: MultiValueRemove\n          },\n          isFocused: isOptionFocused,\n          isDisabled: isDisabled,\n          key: _this4.getOptionValue(opt),\n          index: index,\n          removeProps: {\n            onClick: function onClick() {\n              return _this4.removeValue(opt);\n            },\n            onTouchEnd: function onTouchEnd() {\n              return _this4.removeValue(opt);\n            },\n            onMouseDown: function onMouseDown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          },\n          data: opt\n        }), _this4.formatOptionLabel(opt, 'value'));\n      });\n      return selectValues;\n    }\n\n    if (inputValue) {\n      return null;\n    }\n\n    var singleValue = selectValue[0];\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SingleValue, _extends$4({}, commonProps, {\n      data: singleValue,\n      isDisabled: isDisabled\n    }), this.formatOptionLabel(singleValue, 'value'));\n  };\n\n  _proto.renderClearIndicator = function renderClearIndicator() {\n    var ClearIndicator = this.components.ClearIndicator;\n    var commonProps = this.commonProps;\n    var _this$props16 = this.props,\n        isDisabled = _this$props16.isDisabled,\n        isLoading = _this$props16.isLoading;\n    var isFocused = this.state.isFocused;\n\n    if (!this.isClearable() || !ClearIndicator || isDisabled || !this.hasValue() || isLoading) {\n      return null;\n    }\n\n    var innerProps = {\n      onMouseDown: this.onClearIndicatorMouseDown,\n      onTouchEnd: this.onClearIndicatorTouchEnd,\n      'aria-hidden': 'true'\n    };\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ClearIndicator, _extends$4({}, commonProps, {\n      innerProps: innerProps,\n      isFocused: isFocused\n    }));\n  };\n\n  _proto.renderLoadingIndicator = function renderLoadingIndicator() {\n    var LoadingIndicator = this.components.LoadingIndicator;\n    var commonProps = this.commonProps;\n    var _this$props17 = this.props,\n        isDisabled = _this$props17.isDisabled,\n        isLoading = _this$props17.isLoading;\n    var isFocused = this.state.isFocused;\n    if (!LoadingIndicator || !isLoading) return null;\n    var innerProps = {\n      'aria-hidden': 'true'\n    };\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(LoadingIndicator, _extends$4({}, commonProps, {\n      innerProps: innerProps,\n      isDisabled: isDisabled,\n      isFocused: isFocused\n    }));\n  };\n\n  _proto.renderIndicatorSeparator = function renderIndicatorSeparator() {\n    var _this$components2 = this.components,\n        DropdownIndicator = _this$components2.DropdownIndicator,\n        IndicatorSeparator = _this$components2.IndicatorSeparator; // separator doesn't make sense without the dropdown indicator\n\n    if (!DropdownIndicator || !IndicatorSeparator) return null;\n    var commonProps = this.commonProps;\n    var isDisabled = this.props.isDisabled;\n    var isFocused = this.state.isFocused;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IndicatorSeparator, _extends$4({}, commonProps, {\n      isDisabled: isDisabled,\n      isFocused: isFocused\n    }));\n  };\n\n  _proto.renderDropdownIndicator = function renderDropdownIndicator() {\n    var DropdownIndicator = this.components.DropdownIndicator;\n    if (!DropdownIndicator) return null;\n    var commonProps = this.commonProps;\n    var isDisabled = this.props.isDisabled;\n    var isFocused = this.state.isFocused;\n    var innerProps = {\n      onMouseDown: this.onDropdownIndicatorMouseDown,\n      onTouchEnd: this.onDropdownIndicatorTouchEnd,\n      'aria-hidden': 'true'\n    };\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DropdownIndicator, _extends$4({}, commonProps, {\n      innerProps: innerProps,\n      isDisabled: isDisabled,\n      isFocused: isFocused\n    }));\n  };\n\n  _proto.renderMenu = function renderMenu() {\n    var _this5 = this;\n\n    var _this$components3 = this.components,\n        Group = _this$components3.Group,\n        GroupHeading = _this$components3.GroupHeading,\n        Menu = _this$components3.Menu,\n        MenuList = _this$components3.MenuList,\n        MenuPortal = _this$components3.MenuPortal,\n        LoadingMessage = _this$components3.LoadingMessage,\n        NoOptionsMessage = _this$components3.NoOptionsMessage,\n        Option = _this$components3.Option;\n    var commonProps = this.commonProps;\n    var _this$state9 = this.state,\n        focusedOption = _this$state9.focusedOption,\n        menuOptions = _this$state9.menuOptions;\n    var _this$props18 = this.props,\n        captureMenuScroll = _this$props18.captureMenuScroll,\n        inputValue = _this$props18.inputValue,\n        isLoading = _this$props18.isLoading,\n        loadingMessage = _this$props18.loadingMessage,\n        minMenuHeight = _this$props18.minMenuHeight,\n        maxMenuHeight = _this$props18.maxMenuHeight,\n        menuIsOpen = _this$props18.menuIsOpen,\n        menuPlacement = _this$props18.menuPlacement,\n        menuPosition = _this$props18.menuPosition,\n        menuPortalTarget = _this$props18.menuPortalTarget,\n        menuShouldBlockScroll = _this$props18.menuShouldBlockScroll,\n        menuShouldScrollIntoView = _this$props18.menuShouldScrollIntoView,\n        noOptionsMessage = _this$props18.noOptionsMessage,\n        onMenuScrollToTop = _this$props18.onMenuScrollToTop,\n        onMenuScrollToBottom = _this$props18.onMenuScrollToBottom;\n    if (!menuIsOpen) return null; // TODO: Internal Option Type here\n\n    var render = function render(props) {\n      // for performance, the menu options in state aren't changed when the\n      // focused option changes so we calculate additional props based on that\n      var isFocused = focusedOption === props.data;\n      props.innerRef = isFocused ? _this5.getFocusedOptionRef : undefined;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Option, _extends$4({}, commonProps, props, {\n        isFocused: isFocused\n      }), _this5.formatOptionLabel(props.data, 'menu'));\n    };\n\n    var menuUI;\n\n    if (this.hasOptions()) {\n      menuUI = menuOptions.render.map(function (item) {\n        if (item.type === 'group') {\n          var type = item.type,\n              group = _objectWithoutPropertiesLoose$2(item, [\"type\"]);\n\n          var headingId = item.key + \"-heading\";\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Group, _extends$4({}, commonProps, group, {\n            Heading: GroupHeading,\n            headingProps: {\n              id: headingId\n            },\n            label: _this5.formatGroupLabel(item.data)\n          }), item.options.map(function (option) {\n            return render(option);\n          }));\n        } else if (item.type === 'option') {\n          return render(item);\n        }\n      });\n    } else if (isLoading) {\n      var message = loadingMessage({\n        inputValue: inputValue\n      });\n      if (message === null) return null;\n      menuUI = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(LoadingMessage, commonProps, message);\n    } else {\n      var _message = noOptionsMessage({\n        inputValue: inputValue\n      });\n\n      if (_message === null) return null;\n      menuUI = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(NoOptionsMessage, commonProps, _message);\n    }\n\n    var menuPlacementProps = {\n      minMenuHeight: minMenuHeight,\n      maxMenuHeight: maxMenuHeight,\n      menuPlacement: menuPlacement,\n      menuPosition: menuPosition,\n      menuShouldScrollIntoView: menuShouldScrollIntoView\n    };\n    var menuElement = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__[\"M\"], _extends$4({}, commonProps, menuPlacementProps), function (_ref8) {\n      var ref = _ref8.ref,\n          _ref8$placerProps = _ref8.placerProps,\n          placement = _ref8$placerProps.placement,\n          maxHeight = _ref8$placerProps.maxHeight;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Menu, _extends$4({}, commonProps, menuPlacementProps, {\n        innerRef: ref,\n        innerProps: {\n          onMouseDown: _this5.onMenuMouseDown,\n          onMouseMove: _this5.onMenuMouseMove\n        },\n        isLoading: isLoading,\n        placement: placement\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ScrollCaptorSwitch, {\n        isEnabled: captureMenuScroll,\n        onTopArrive: onMenuScrollToTop,\n        onBottomArrive: onMenuScrollToBottom\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ScrollBlock, {\n        isEnabled: menuShouldBlockScroll\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MenuList, _extends$4({}, commonProps, {\n        innerRef: _this5.getMenuListRef,\n        isLoading: isLoading,\n        maxHeight: maxHeight\n      }), menuUI))));\n    }); // positioning behaviour is almost identical for portalled and fixed,\n    // so we use the same component. the actual portalling logic is forked\n    // within the component based on `menuPosition`\n\n    return menuPortalTarget || menuPosition === 'fixed' ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MenuPortal, _extends$4({}, commonProps, {\n      appendTo: menuPortalTarget,\n      controlElement: this.controlRef,\n      menuPlacement: menuPlacement,\n      menuPosition: menuPosition\n    }), menuElement) : menuElement;\n  };\n\n  _proto.renderFormField = function renderFormField() {\n    var _this6 = this;\n\n    var _this$props19 = this.props,\n        delimiter = _this$props19.delimiter,\n        isDisabled = _this$props19.isDisabled,\n        isMulti = _this$props19.isMulti,\n        name = _this$props19.name;\n    var selectValue = this.state.selectValue;\n    if (!name || isDisabled) return;\n\n    if (isMulti) {\n      if (delimiter) {\n        var value = selectValue.map(function (opt) {\n          return _this6.getOptionValue(opt);\n        }).join(delimiter);\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n          name: name,\n          type: \"hidden\",\n          value: value\n        });\n      } else {\n        var input = selectValue.length > 0 ? selectValue.map(function (opt, i) {\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n            key: \"i-\" + i,\n            name: name,\n            type: \"hidden\",\n            value: _this6.getOptionValue(opt)\n          });\n        }) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n          name: name,\n          type: \"hidden\"\n        });\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, input);\n      }\n    } else {\n      var _value2 = selectValue[0] ? this.getOptionValue(selectValue[0]) : '';\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        name: name,\n        type: \"hidden\",\n        value: _value2\n      });\n    }\n  };\n\n  _proto.renderLiveRegion = function renderLiveRegion() {\n    if (!this.state.isFocused) return null;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(A11yText, {\n      \"aria-live\": \"polite\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", {\n      id: \"aria-selection-event\"\n    }, \"\\xA0\", this.state.ariaLiveSelection), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", {\n      id: \"aria-context\"\n    }, \"\\xA0\", this.constructAriaLiveMessage()));\n  };\n\n  _proto.render = function render() {\n    var _this$components4 = this.components,\n        Control = _this$components4.Control,\n        IndicatorsContainer = _this$components4.IndicatorsContainer,\n        SelectContainer = _this$components4.SelectContainer,\n        ValueContainer = _this$components4.ValueContainer;\n    var _this$props20 = this.props,\n        className = _this$props20.className,\n        id = _this$props20.id,\n        isDisabled = _this$props20.isDisabled,\n        menuIsOpen = _this$props20.menuIsOpen;\n    var isFocused = this.state.isFocused;\n    var commonProps = this.commonProps = this.getCommonProps();\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SelectContainer, _extends$4({}, commonProps, {\n      className: className,\n      innerProps: {\n        id: id,\n        onKeyDown: this.onKeyDown\n      },\n      isDisabled: isDisabled,\n      isFocused: isFocused\n    }), this.renderLiveRegion(), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Control, _extends$4({}, commonProps, {\n      innerRef: this.getControlRef,\n      innerProps: {\n        onMouseDown: this.onControlMouseDown,\n        onTouchEnd: this.onControlTouchEnd\n      },\n      isDisabled: isDisabled,\n      isFocused: isFocused,\n      menuIsOpen: menuIsOpen\n    }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ValueContainer, _extends$4({}, commonProps, {\n      isDisabled: isDisabled\n    }), this.renderPlaceholderOrValue(), this.renderInput()), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IndicatorsContainer, _extends$4({}, commonProps, {\n      isDisabled: isDisabled\n    }), this.renderClearIndicator(), this.renderLoadingIndicator(), this.renderIndicatorSeparator(), this.renderDropdownIndicator())), this.renderMenu(), this.renderFormField());\n  };\n\n  return Select;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nSelect.defaultProps = defaultProps;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-select/dist/Select-9fdb8cd0.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/react-select/dist/index-4322c0ed.browser.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-select/dist/index-4322c0ed.browser.esm.js ***!
  \**********************************************************************/
/*! exports provided: M, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"M\", function() { return MenuPlacer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return containerCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return css; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return clearIndicatorCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return dropdownIndicatorCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return groupHeadingCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return indicatorSeparatorCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return groupCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return inputCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return indicatorsContainerCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return loadingMessageCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return menuListCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return loadingIndicatorCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return menuCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return menuPortalCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return multiValueCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return multiValueLabelCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return multiValueRemoveCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return noOptionsMessageCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return optionCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return placeholderCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return css$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return valueContainerCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return defaultComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return exportedEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return components; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils-06b0d5a4.browser.esm.js */ \"./node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/css.browser.esm.js\");\n/* harmony import */ var react_input_autosize__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-input-autosize */ \"./node_modules/react-input-autosize/lib/AutosizeInput.js\");\n/* harmony import */ var react_input_autosize__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_input_autosize__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nfunction getMenuPlacement(_ref) {\n  var maxHeight = _ref.maxHeight,\n      menuEl = _ref.menuEl,\n      minHeight = _ref.minHeight,\n      placement = _ref.placement,\n      shouldScroll = _ref.shouldScroll,\n      isFixedPosition = _ref.isFixedPosition,\n      theme = _ref.theme;\n  var spacing = theme.spacing;\n  var scrollParent = Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"a\"])(menuEl);\n  var defaultState = {\n    placement: 'bottom',\n    maxHeight: maxHeight\n  }; // something went wrong, return default state\n\n  if (!menuEl || !menuEl.offsetParent) return defaultState; // we can't trust `scrollParent.scrollHeight` --> it may increase when\n  // the menu is rendered\n\n  var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),\n      scrollHeight = _scrollParent$getBoun.height;\n\n  var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),\n      menuBottom = _menuEl$getBoundingCl.bottom,\n      menuHeight = _menuEl$getBoundingCl.height,\n      menuTop = _menuEl$getBoundingCl.top;\n\n  var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),\n      containerTop = _menuEl$offsetParent$.top;\n\n  var viewHeight = window.innerHeight;\n  var scrollTop = Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"b\"])(scrollParent);\n  var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);\n  var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);\n  var viewSpaceAbove = containerTop - marginTop;\n  var viewSpaceBelow = viewHeight - menuTop;\n  var scrollSpaceAbove = viewSpaceAbove + scrollTop;\n  var scrollSpaceBelow = scrollHeight - scrollTop - menuTop;\n  var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;\n  var scrollUp = scrollTop + menuTop - marginTop;\n  var scrollDuration = 160;\n\n  switch (placement) {\n    case 'auto':\n    case 'bottom':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceBelow >= menuHeight) {\n        return {\n          placement: 'bottom',\n          maxHeight: maxHeight\n        };\n      } // 2: the menu will fit, if scrolled\n\n\n      if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"c\"])(scrollParent, scrollDown, scrollDuration);\n        }\n\n        return {\n          placement: 'bottom',\n          maxHeight: maxHeight\n        };\n      } // 3: the menu will fit, if constrained\n\n\n      if (!isFixedPosition && scrollSpaceBelow >= minHeight || isFixedPosition && viewSpaceBelow >= minHeight) {\n        if (shouldScroll) {\n          Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"c\"])(scrollParent, scrollDown, scrollDuration);\n        } // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n\n\n        var constrainedHeight = isFixedPosition ? viewSpaceBelow - marginBottom : scrollSpaceBelow - marginBottom;\n        return {\n          placement: 'bottom',\n          maxHeight: constrainedHeight\n        };\n      } // 4. Forked beviour when there isn't enough space below\n      // AUTO: flip the menu, render above\n\n\n      if (placement === 'auto' || isFixedPosition) {\n        // may need to be constrained after flipping\n        var _constrainedHeight = maxHeight;\n        var spaceAbove = isFixedPosition ? viewSpaceAbove : scrollSpaceAbove;\n\n        if (spaceAbove >= minHeight) {\n          _constrainedHeight = Math.min(spaceAbove - marginBottom - spacing.controlHeight, maxHeight);\n        }\n\n        return {\n          placement: 'top',\n          maxHeight: _constrainedHeight\n        };\n      } // BOTTOM: allow browser to increase scrollable area and immediately set scroll\n\n\n      if (placement === 'bottom') {\n        Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"s\"])(scrollParent, scrollDown);\n        return {\n          placement: 'bottom',\n          maxHeight: maxHeight\n        };\n      }\n\n      break;\n\n    case 'top':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceAbove >= menuHeight) {\n        return {\n          placement: 'top',\n          maxHeight: maxHeight\n        };\n      } // 2: the menu will fit, if scrolled\n\n\n      if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"c\"])(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return {\n          placement: 'top',\n          maxHeight: maxHeight\n        };\n      } // 3: the menu will fit, if constrained\n\n\n      if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n        var _constrainedHeight2 = maxHeight; // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n\n        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n          _constrainedHeight2 = isFixedPosition ? viewSpaceAbove - marginTop : scrollSpaceAbove - marginTop;\n        }\n\n        if (shouldScroll) {\n          Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"c\"])(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return {\n          placement: 'top',\n          maxHeight: _constrainedHeight2\n        };\n      } // 4. not enough space, the browser WILL NOT increase scrollable area when\n      // absolutely positioned element rendered above the viewport (only below).\n      // Flip the menu, render below\n\n\n      return {\n        placement: 'bottom',\n        maxHeight: maxHeight\n      };\n\n    default:\n      throw new Error(\"Invalid placement provided \\\"\" + placement + \"\\\".\");\n  } // fulfil contract with flow: implicit return value of undefined\n\n\n  return defaultState;\n} // Menu Component\n// ------------------------------\n\nfunction alignToControl(placement) {\n  var placementToCSSProp = {\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement ? placementToCSSProp[placement] : 'bottom';\n}\n\nvar coercePlacement = function coercePlacement(p) {\n  return p === 'auto' ? 'bottom' : p;\n};\n\nvar menuCSS = function menuCSS(_ref2) {\n  var _ref3;\n\n  var placement = _ref2.placement,\n      _ref2$theme = _ref2.theme,\n      borderRadius = _ref2$theme.borderRadius,\n      spacing = _ref2$theme.spacing,\n      colors = _ref2$theme.colors;\n  return _ref3 = {\n    label: 'menu'\n  }, _ref3[alignToControl(placement)] = '100%', _ref3.backgroundColor = colors.neutral0, _ref3.borderRadius = borderRadius, _ref3.boxShadow = '0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)', _ref3.marginBottom = spacing.menuGutter, _ref3.marginTop = spacing.menuGutter, _ref3.position = 'absolute', _ref3.width = '100%', _ref3.zIndex = 1, _ref3;\n}; // NOTE: internal only\n\nvar MenuPlacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuPlacer, _Component);\n\n  function MenuPlacer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      maxHeight: _this.props.maxMenuHeight,\n      placement: null\n    };\n\n    _this.getPlacement = function (ref) {\n      var _this$props = _this.props,\n          minMenuHeight = _this$props.minMenuHeight,\n          maxMenuHeight = _this$props.maxMenuHeight,\n          menuPlacement = _this$props.menuPlacement,\n          menuPosition = _this$props.menuPosition,\n          menuShouldScrollIntoView = _this$props.menuShouldScrollIntoView,\n          theme = _this$props.theme;\n      var getPortalPlacement = _this.context.getPortalPlacement;\n      if (!ref) return; // DO NOT scroll if position is fixed\n\n      var isFixedPosition = menuPosition === 'fixed';\n      var shouldScroll = menuShouldScrollIntoView && !isFixedPosition;\n      var state = getMenuPlacement({\n        maxHeight: maxMenuHeight,\n        menuEl: ref,\n        minHeight: minMenuHeight,\n        placement: menuPlacement,\n        shouldScroll: shouldScroll,\n        isFixedPosition: isFixedPosition,\n        theme: theme\n      });\n      if (getPortalPlacement) getPortalPlacement(state);\n\n      _this.setState(state);\n    };\n\n    _this.getUpdatedProps = function () {\n      var menuPlacement = _this.props.menuPlacement;\n      var placement = _this.state.placement || coercePlacement(menuPlacement);\n      return _extends({}, _this.props, {\n        placement: placement,\n        maxHeight: _this.state.maxHeight\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = MenuPlacer.prototype;\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return children({\n      ref: this.getPlacement,\n      placerProps: this.getUpdatedProps()\n    });\n  };\n\n  return MenuPlacer;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\nMenuPlacer.contextTypes = {\n  getPortalPlacement: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func\n};\n\nvar Menu = function Menu(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends({\n    css: getStyles('menu', props),\n    className: cx({\n      menu: true\n    }, className)\n  }, innerProps, {\n    ref: innerRef\n  }), children);\n};\n// Menu List\n// ==============================\n\nvar menuListCSS = function menuListCSS(_ref4) {\n  var maxHeight = _ref4.maxHeight,\n      baseUnit = _ref4.theme.spacing.baseUnit;\n  return {\n    maxHeight: maxHeight,\n    overflowY: 'auto',\n    paddingBottom: baseUnit,\n    paddingTop: baseUnit,\n    position: 'relative',\n    // required for offset[Height, Top] > keyboard scroll\n    WebkitOverflowScrolling: 'touch'\n  };\n};\nvar MenuList = function MenuList(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isMulti = props.isMulti,\n      innerRef = props.innerRef;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", {\n    css: getStyles('menuList', props),\n    className: cx({\n      'menu-list': true,\n      'menu-list--is-multi': isMulti\n    }, className),\n    ref: innerRef\n  }, children);\n}; // ==============================\n// Menu Notices\n// ==============================\n\nvar noticeCSS = function noticeCSS(_ref5) {\n  var _ref5$theme = _ref5.theme,\n      baseUnit = _ref5$theme.spacing.baseUnit,\n      colors = _ref5$theme.colors;\n  return {\n    color: colors.neutral40,\n    padding: baseUnit * 2 + \"px \" + baseUnit * 3 + \"px\",\n    textAlign: 'center'\n  };\n};\n\nvar noOptionsMessageCSS = noticeCSS;\nvar loadingMessageCSS = noticeCSS;\nvar NoOptionsMessage = function NoOptionsMessage(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends({\n    css: getStyles('noOptionsMessage', props),\n    className: cx({\n      'menu-notice': true,\n      'menu-notice--no-options': true\n    }, className)\n  }, innerProps), children);\n};\nNoOptionsMessage.defaultProps = {\n  children: 'No options'\n};\nvar LoadingMessage = function LoadingMessage(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends({\n    css: getStyles('loadingMessage', props),\n    className: cx({\n      'menu-notice': true,\n      'menu-notice--loading': true\n    }, className)\n  }, innerProps), children);\n};\nLoadingMessage.defaultProps = {\n  children: 'Loading...'\n}; // ==============================\n// Menu Portal\n// ==============================\n\nvar menuPortalCSS = function menuPortalCSS(_ref6) {\n  var rect = _ref6.rect,\n      offset = _ref6.offset,\n      position = _ref6.position;\n  return {\n    left: rect.left,\n    position: position,\n    top: offset,\n    width: rect.width,\n    zIndex: 1\n  };\n};\nvar MenuPortal =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inheritsLoose(MenuPortal, _Component2);\n\n  function MenuPortal() {\n    var _this2;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _Component2.call.apply(_Component2, [this].concat(args)) || this;\n    _this2.state = {\n      placement: null\n    };\n\n    _this2.getPortalPlacement = function (_ref7) {\n      var placement = _ref7.placement;\n      var initialPlacement = coercePlacement(_this2.props.menuPlacement); // avoid re-renders if the placement has not changed\n\n      if (placement !== initialPlacement) {\n        _this2.setState({\n          placement: placement\n        });\n      }\n    };\n\n    return _this2;\n  }\n\n  var _proto2 = MenuPortal.prototype;\n\n  _proto2.getChildContext = function getChildContext() {\n    return {\n      getPortalPlacement: this.getPortalPlacement\n    };\n  } // callback for occassions where the menu must \"flip\"\n  ;\n\n  _proto2.render = function render() {\n    var _this$props2 = this.props,\n        appendTo = _this$props2.appendTo,\n        children = _this$props2.children,\n        controlElement = _this$props2.controlElement,\n        menuPlacement = _this$props2.menuPlacement,\n        position = _this$props2.menuPosition,\n        getStyles = _this$props2.getStyles;\n    var isFixed = position === 'fixed'; // bail early if required elements aren't present\n\n    if (!appendTo && !isFixed || !controlElement) {\n      return null;\n    }\n\n    var placement = this.state.placement || coercePlacement(menuPlacement);\n    var rect = Object(_utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__[\"g\"])(controlElement);\n    var scrollDistance = isFixed ? 0 : window.pageYOffset;\n    var offset = rect[placement] + scrollDistance;\n    var state = {\n      offset: offset,\n      position: position,\n      rect: rect\n    }; // same wrapper element whether fixed or portalled\n\n    var menuWrapper = Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", {\n      css: getStyles('menuPortal', state)\n    }, children);\n    return appendTo ? Object(react_dom__WEBPACK_IMPORTED_MODULE_2__[\"createPortal\"])(menuWrapper, appendTo) : menuWrapper;\n  };\n\n  return MenuPortal;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\nMenuPortal.childContextTypes = {\n  getPortalPlacement: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func\n};\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a),\n        arrB = isArray(b),\n        i,\n        length,\n        key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n    var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length) {\n      return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      if (!hasProp.call(b, keys[i])) return false;\n    } // end fast-deep-equal\n    // Custom handling for React\n\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    } // fast-deep-equal index.js 2.0.1\n\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n} // end fast-deep-equal\n\n\nfunction exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (error.message && error.message.match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    } // some other error. we should definitely know about these\n\n\n    throw error;\n  }\n}\n\nfunction _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\nvar containerCSS = function containerCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isRtl = _ref.isRtl;\n  return {\n    label: 'container',\n    direction: isRtl ? 'rtl' : null,\n    pointerEvents: isDisabled ? 'none' : null,\n    // cancel mouse events when disabled\n    position: 'relative'\n  };\n};\nvar SelectContainer = function SelectContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isDisabled = props.isDisabled,\n      isRtl = props.isRtl;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$1({\n    css: getStyles('container', props),\n    className: cx({\n      '--is-disabled': isDisabled,\n      '--is-rtl': isRtl\n    }, className)\n  }, innerProps), children);\n}; // ==============================\n// Value Container\n// ==============================\n\nvar valueContainerCSS = function valueContainerCSS(_ref2) {\n  var spacing = _ref2.theme.spacing;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    flex: 1,\n    flexWrap: 'wrap',\n    padding: spacing.baseUnit / 2 + \"px \" + spacing.baseUnit * 2 + \"px\",\n    WebkitOverflowScrolling: 'touch',\n    position: 'relative',\n    overflow: 'hidden'\n  };\n};\nvar ValueContainer = function ValueContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      isMulti = props.isMulti,\n      getStyles = props.getStyles,\n      hasValue = props.hasValue;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", {\n    css: getStyles('valueContainer', props),\n    className: cx({\n      'value-container': true,\n      'value-container--is-multi': isMulti,\n      'value-container--has-value': hasValue\n    }, className)\n  }, children);\n}; // ==============================\n// Indicator Container\n// ==============================\n\nvar indicatorsContainerCSS = function indicatorsContainerCSS() {\n  return {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    display: 'flex',\n    flexShrink: 0\n  };\n};\nvar IndicatorsContainer = function IndicatorsContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", {\n    css: getStyles('indicatorsContainer', props),\n    className: cx({\n      indicators: true\n    }, className)\n  }, children);\n};\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  0%, 80%, 100% { opacity: 0; }\\n  40% { opacity: 1; }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\nfunction _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar _ref2 =  false ? undefined : {\n  name: \"19bqh2r\",\n  styles: \"display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"\n};\n\n// ==============================\n// Dropdown & Clear Icons\n// ==============================\nvar Svg = function Svg(_ref) {\n  var size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"size\"]);\n\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"svg\", _extends$2({\n    height: size,\n    width: size,\n    viewBox: \"0 0 20 20\",\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    css: _ref2\n  }, props));\n};\n\nvar CrossIcon = function CrossIcon(props) {\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Svg, _extends$2({\n    size: 20\n  }, props), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"path\", {\n    d: \"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"\n  }));\n};\nvar DownChevron = function DownChevron(props) {\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Svg, _extends$2({\n    size: 20\n  }, props), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"path\", {\n    d: \"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"\n  }));\n}; // ==============================\n// Dropdown & Clear Buttons\n// ==============================\n\nvar baseCSS = function baseCSS(_ref3) {\n  var isFocused = _ref3.isFocused,\n      _ref3$theme = _ref3.theme,\n      baseUnit = _ref3$theme.spacing.baseUnit,\n      colors = _ref3$theme.colors;\n  return {\n    label: 'indicatorContainer',\n    color: isFocused ? colors.neutral60 : colors.neutral20,\n    display: 'flex',\n    padding: baseUnit * 2,\n    transition: 'color 150ms',\n    ':hover': {\n      color: isFocused ? colors.neutral80 : colors.neutral40\n    }\n  };\n};\n\nvar dropdownIndicatorCSS = baseCSS;\nvar DropdownIndicator = function DropdownIndicator(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$2({}, innerProps, {\n    css: getStyles('dropdownIndicator', props),\n    className: cx({\n      indicator: true,\n      'dropdown-indicator': true\n    }, className)\n  }), children || Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(DownChevron, null));\n};\nvar clearIndicatorCSS = baseCSS;\nvar ClearIndicator = function ClearIndicator(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$2({}, innerProps, {\n    css: getStyles('clearIndicator', props),\n    className: cx({\n      indicator: true,\n      'clear-indicator': true\n    }, className)\n  }), children || Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(CrossIcon, null));\n}; // ==============================\n// Separator\n// ==============================\n\nvar indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref4) {\n  var isDisabled = _ref4.isDisabled,\n      _ref4$theme = _ref4.theme,\n      baseUnit = _ref4$theme.spacing.baseUnit,\n      colors = _ref4$theme.colors;\n  return {\n    label: 'indicatorSeparator',\n    alignSelf: 'stretch',\n    backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,\n    marginBottom: baseUnit * 2,\n    marginTop: baseUnit * 2,\n    width: 1\n  };\n};\nvar IndicatorSeparator = function IndicatorSeparator(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"span\", _extends$2({}, innerProps, {\n    css: getStyles('indicatorSeparator', props),\n    className: cx({\n      'indicator-separator': true\n    }, className)\n  }));\n}; // ==============================\n// Loading\n// ==============================\n\nvar loadingDotAnimations = Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"keyframes\"])(_templateObject());\nvar loadingIndicatorCSS = function loadingIndicatorCSS(_ref5) {\n  var isFocused = _ref5.isFocused,\n      size = _ref5.size,\n      _ref5$theme = _ref5.theme,\n      colors = _ref5$theme.colors,\n      baseUnit = _ref5$theme.spacing.baseUnit;\n  return {\n    label: 'loadingIndicator',\n    color: isFocused ? colors.neutral60 : colors.neutral20,\n    display: 'flex',\n    padding: baseUnit * 2,\n    transition: 'color 150ms',\n    alignSelf: 'center',\n    fontSize: size,\n    lineHeight: 1,\n    marginRight: size,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n};\n\nvar LoadingDot = function LoadingDot(_ref6) {\n  var delay = _ref6.delay,\n      offset = _ref6.offset;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"span\", {\n    css:\n    /*#__PURE__*/\n    Object(_emotion_css__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n      animation: loadingDotAnimations + \" 1s ease-in-out \" + delay + \"ms infinite;\",\n      backgroundColor: 'currentColor',\n      borderRadius: '1em',\n      display: 'inline-block',\n      marginLeft: offset ? '1em' : null,\n      height: '1em',\n      verticalAlign: 'top',\n      width: '1em'\n    },  false ? undefined : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")\n  });\n};\n\nvar LoadingIndicator = function LoadingIndicator(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isRtl = props.isRtl;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$2({}, innerProps, {\n    css: getStyles('loadingIndicator', props),\n    className: cx({\n      indicator: true,\n      'loading-indicator': true\n    }, className)\n  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(LoadingDot, {\n    delay: 0,\n    offset: isRtl\n  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(LoadingDot, {\n    delay: 160,\n    offset: true\n  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(LoadingDot, {\n    delay: 320,\n    offset: !isRtl\n  }));\n};\nLoadingIndicator.defaultProps = {\n  size: 4\n};\n\nfunction _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }\nvar css = function css(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isFocused = _ref.isFocused,\n      _ref$theme = _ref.theme,\n      colors = _ref$theme.colors,\n      borderRadius = _ref$theme.borderRadius,\n      spacing = _ref$theme.spacing;\n  return {\n    label: 'control',\n    alignItems: 'center',\n    backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,\n    borderColor: isDisabled ? colors.neutral10 : isFocused ? colors.primary : colors.neutral20,\n    borderRadius: borderRadius,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    boxShadow: isFocused ? \"0 0 0 1px \" + colors.primary : null,\n    cursor: 'default',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    minHeight: spacing.controlHeight,\n    outline: '0 !important',\n    position: 'relative',\n    transition: 'all 100ms',\n    '&:hover': {\n      borderColor: isFocused ? colors.primary : colors.neutral30\n    }\n  };\n};\n\nvar Control = function Control(props) {\n  var children = props.children,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      className = props.className,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps,\n      menuIsOpen = props.menuIsOpen;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$3({\n    ref: innerRef,\n    css: getStyles('control', props),\n    className: cx({\n      control: true,\n      'control--is-disabled': isDisabled,\n      'control--is-focused': isFocused,\n      'control--menu-is-open': menuIsOpen\n    }, className)\n  }, innerProps), children);\n};\n\nfunction _objectWithoutPropertiesLoose$1(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }\nvar groupCSS = function groupCSS(_ref) {\n  var spacing = _ref.theme.spacing;\n  return {\n    paddingBottom: spacing.baseUnit * 2,\n    paddingTop: spacing.baseUnit * 2\n  };\n};\n\nvar Group = function Group(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      Heading = props.Heading,\n      headingProps = props.headingProps,\n      label = props.label,\n      theme = props.theme,\n      selectProps = props.selectProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", {\n    css: getStyles('group', props),\n    className: cx({\n      group: true\n    }, className)\n  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Heading, _extends$4({}, headingProps, {\n    selectProps: selectProps,\n    theme: theme,\n    getStyles: getStyles,\n    cx: cx\n  }), label), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", null, children));\n};\n\nvar groupHeadingCSS = function groupHeadingCSS(_ref2) {\n  var spacing = _ref2.theme.spacing;\n  return {\n    label: 'group',\n    color: '#999',\n    cursor: 'default',\n    display: 'block',\n    fontSize: '75%',\n    fontWeight: '500',\n    marginBottom: '0.25em',\n    paddingLeft: spacing.baseUnit * 3,\n    paddingRight: spacing.baseUnit * 3,\n    textTransform: 'uppercase'\n  };\n};\nvar GroupHeading = function GroupHeading(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      theme = props.theme,\n      selectProps = props.selectProps,\n      cleanProps = _objectWithoutPropertiesLoose$1(props, [\"className\", \"cx\", \"getStyles\", \"theme\", \"selectProps\"]);\n\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$4({\n    css: getStyles('groupHeading', _extends$4({\n      theme: theme\n    }, cleanProps)),\n    className: cx({\n      'group-heading': true\n    }, className)\n  }, cleanProps));\n};\n\nfunction _extends$5() { _extends$5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose$2(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nvar inputCSS = function inputCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    margin: spacing.baseUnit / 2,\n    paddingBottom: spacing.baseUnit / 2,\n    paddingTop: spacing.baseUnit / 2,\n    visibility: isDisabled ? 'hidden' : 'visible',\n    color: colors.neutral80\n  };\n};\n\nvar inputStyle = function inputStyle(isHidden) {\n  return {\n    label: 'input',\n    background: 0,\n    border: 0,\n    fontSize: 'inherit',\n    opacity: isHidden ? 0 : 1,\n    outline: 0,\n    padding: 0,\n    color: 'inherit'\n  };\n};\n\nvar Input = function Input(_ref2) {\n  var className = _ref2.className,\n      cx = _ref2.cx,\n      getStyles = _ref2.getStyles,\n      innerRef = _ref2.innerRef,\n      isHidden = _ref2.isHidden,\n      isDisabled = _ref2.isDisabled,\n      theme = _ref2.theme,\n      selectProps = _ref2.selectProps,\n      props = _objectWithoutPropertiesLoose$2(_ref2, [\"className\", \"cx\", \"getStyles\", \"innerRef\", \"isHidden\", \"isDisabled\", \"theme\", \"selectProps\"]);\n\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", {\n    css: getStyles('input', _extends$5({\n      theme: theme\n    }, props))\n  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(react_input_autosize__WEBPACK_IMPORTED_MODULE_6___default.a, _extends$5({\n    className: cx({\n      input: true\n    }, className),\n    inputRef: innerRef,\n    inputStyle: inputStyle(isHidden),\n    disabled: isDisabled\n  }, props)));\n};\n\nfunction _extends$6() { _extends$6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }\nvar multiValueCSS = function multiValueCSS(_ref) {\n  var _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      borderRadius = _ref$theme.borderRadius,\n      colors = _ref$theme.colors;\n  return {\n    label: 'multiValue',\n    backgroundColor: colors.neutral10,\n    borderRadius: borderRadius / 2,\n    display: 'flex',\n    margin: spacing.baseUnit / 2,\n    minWidth: 0 // resolves flex/text-overflow bug\n\n  };\n};\nvar multiValueLabelCSS = function multiValueLabelCSS(_ref2) {\n  var _ref2$theme = _ref2.theme,\n      borderRadius = _ref2$theme.borderRadius,\n      colors = _ref2$theme.colors,\n      cropWithEllipsis = _ref2.cropWithEllipsis;\n  return {\n    borderRadius: borderRadius / 2,\n    color: colors.neutral80,\n    fontSize: '85%',\n    overflow: 'hidden',\n    padding: 3,\n    paddingLeft: 6,\n    textOverflow: cropWithEllipsis ? 'ellipsis' : null,\n    whiteSpace: 'nowrap'\n  };\n};\nvar multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {\n  var _ref3$theme = _ref3.theme,\n      spacing = _ref3$theme.spacing,\n      borderRadius = _ref3$theme.borderRadius,\n      colors = _ref3$theme.colors,\n      isFocused = _ref3.isFocused;\n  return {\n    alignItems: 'center',\n    borderRadius: borderRadius / 2,\n    backgroundColor: isFocused && colors.dangerLight,\n    display: 'flex',\n    paddingLeft: spacing.baseUnit,\n    paddingRight: spacing.baseUnit,\n    ':hover': {\n      backgroundColor: colors.dangerLight,\n      color: colors.danger\n    }\n  };\n};\nvar MultiValueGeneric = function MultiValueGeneric(_ref4) {\n  var children = _ref4.children,\n      innerProps = _ref4.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", innerProps, children);\n};\nvar MultiValueContainer = MultiValueGeneric;\nvar MultiValueLabel = MultiValueGeneric;\nfunction MultiValueRemove(_ref5) {\n  var children = _ref5.children,\n      innerProps = _ref5.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", innerProps, children || Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(CrossIcon, {\n    size: 14\n  }));\n}\n\nvar MultiValue = function MultiValue(props) {\n  var children = props.children,\n      className = props.className,\n      components = props.components,\n      cx = props.cx,\n      data = props.data,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isDisabled = props.isDisabled,\n      removeProps = props.removeProps,\n      selectProps = props.selectProps;\n  var Container = components.Container,\n      Label = components.Label,\n      Remove = components.Remove;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"ClassNames\"], null, function (_ref6) {\n    var css = _ref6.css,\n        emotionCx = _ref6.cx;\n    return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Container, {\n      data: data,\n      innerProps: _extends$6({}, innerProps, {\n        className: emotionCx(css(getStyles('multiValue', props)), cx({\n          'multi-value': true,\n          'multi-value--is-disabled': isDisabled\n        }, className))\n      }),\n      selectProps: selectProps\n    }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Label, {\n      data: data,\n      innerProps: {\n        className: emotionCx(css(getStyles('multiValueLabel', props)), cx({\n          'multi-value__label': true\n        }, className))\n      },\n      selectProps: selectProps\n    }, children), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Remove, {\n      data: data,\n      innerProps: _extends$6({\n        className: emotionCx(css(getStyles('multiValueRemove', props)), cx({\n          'multi-value__remove': true\n        }, className))\n      }, removeProps),\n      selectProps: selectProps\n    }));\n  });\n};\n\nMultiValue.defaultProps = {\n  cropWithEllipsis: true\n};\n\nfunction _extends$7() { _extends$7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7.apply(this, arguments); }\nvar optionCSS = function optionCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isFocused = _ref.isFocused,\n      isSelected = _ref.isSelected,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    label: 'option',\n    backgroundColor: isSelected ? colors.primary : isFocused ? colors.primary25 : 'transparent',\n    color: isDisabled ? colors.neutral20 : isSelected ? colors.neutral0 : 'inherit',\n    cursor: 'default',\n    display: 'block',\n    fontSize: 'inherit',\n    padding: spacing.baseUnit * 2 + \"px \" + spacing.baseUnit * 3 + \"px\",\n    width: '100%',\n    userSelect: 'none',\n    WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n    // provide some affordance on touch devices\n    ':active': {\n      backgroundColor: !isDisabled && (isSelected ? colors.primary : colors.primary50)\n    }\n  };\n};\n\nvar Option = function Option(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      isSelected = props.isSelected,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$7({\n    css: getStyles('option', props),\n    className: cx({\n      option: true,\n      'option--is-disabled': isDisabled,\n      'option--is-focused': isFocused,\n      'option--is-selected': isSelected\n    }, className),\n    ref: innerRef\n  }, innerProps), children);\n};\n\nfunction _extends$8() { _extends$8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8.apply(this, arguments); }\nvar placeholderCSS = function placeholderCSS(_ref) {\n  var _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    label: 'placeholder',\n    color: colors.neutral50,\n    marginLeft: spacing.baseUnit / 2,\n    marginRight: spacing.baseUnit / 2,\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  };\n};\n\nvar Placeholder = function Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$8({\n    css: getStyles('placeholder', props),\n    className: cx({\n      placeholder: true\n    }, className)\n  }, innerProps), children);\n};\n\nfunction _extends$9() { _extends$9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9.apply(this, arguments); }\nvar css$1 = function css(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    label: 'singleValue',\n    color: isDisabled ? colors.neutral40 : colors.neutral80,\n    marginLeft: spacing.baseUnit / 2,\n    marginRight: spacing.baseUnit / 2,\n    maxWidth: \"calc(100% - \" + spacing.baseUnit * 2 + \"px)\",\n    overflow: 'hidden',\n    position: 'absolute',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  };\n};\n\nvar SingleValue = function SingleValue(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      innerProps = props.innerProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\", _extends$9({\n    css: getStyles('singleValue', props),\n    className: cx({\n      'single-value': true,\n      'single-value--is-disabled': isDisabled\n    }, className)\n  }, innerProps), children);\n};\n\nfunction _extends$a() { _extends$a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a.apply(this, arguments); }\nvar components = {\n  ClearIndicator: ClearIndicator,\n  Control: Control,\n  DropdownIndicator: DropdownIndicator,\n  DownChevron: DownChevron,\n  CrossIcon: CrossIcon,\n  Group: Group,\n  GroupHeading: GroupHeading,\n  IndicatorsContainer: IndicatorsContainer,\n  IndicatorSeparator: IndicatorSeparator,\n  Input: Input,\n  LoadingIndicator: LoadingIndicator,\n  Menu: Menu,\n  MenuList: MenuList,\n  MenuPortal: MenuPortal,\n  LoadingMessage: LoadingMessage,\n  NoOptionsMessage: NoOptionsMessage,\n  MultiValue: MultiValue,\n  MultiValueContainer: MultiValueContainer,\n  MultiValueLabel: MultiValueLabel,\n  MultiValueRemove: MultiValueRemove,\n  Option: Option,\n  Placeholder: Placeholder,\n  SelectContainer: SelectContainer,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\nvar defaultComponents = function defaultComponents(props) {\n  return _extends$a({}, components, props.components);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-select/dist/index-4322c0ed.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/react-select/dist/react-select.browser.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-select/dist/react-select.browser.esm.js ***!
  \********************************************************************/
/*! exports provided: components, createFilter, defaultTheme, mergeStyles, default, NonceProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NonceProvider\", function() { return NonceProvider; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! memoize-one */ \"./node_modules/memoize-one/dist/memoize-one.esm.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils_06b0d5a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils-06b0d5a4.browser.esm.js */ \"./node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js\");\n/* harmony import */ var _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-4322c0ed.browser.esm.js */ \"./node_modules/react-select/dist/index-4322c0ed.browser.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"components\", function() { return _index_4322c0ed_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__[\"y\"]; });\n\n/* harmony import */ var _Select_9fdb8cd0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Select-9fdb8cd0.browser.esm.js */ \"./node_modules/react-select/dist/Select-9fdb8cd0.browser.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createFilter\", function() { return _Select_9fdb8cd0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__[\"c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultTheme\", function() { return _Select_9fdb8cd0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__[\"a\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mergeStyles\", function() { return _Select_9fdb8cd0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__[\"m\"]; });\n\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/css.browser.esm.js\");\n/* harmony import */ var react_input_autosize__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-input-autosize */ \"./node_modules/react-input-autosize/lib/AutosizeInput.js\");\n/* harmony import */ var react_input_autosize__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_input_autosize__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _stateManager_04f734a2_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./stateManager-04f734a2.browser.esm.js */ \"./node_modules/react-select/dist/stateManager-04f734a2.browser.esm.js\");\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @emotion/cache */ \"./node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.createEmotionCache = function (nonce) {\n      return Object(_emotion_cache__WEBPACK_IMPORTED_MODULE_11__[\"default\"])({\n        nonce: nonce\n      });\n    };\n\n    _this.createEmotionCache = Object(memoize_one__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_this.createEmotionCache);\n    return _this;\n  }\n\n  var _proto = NonceProvider.prototype;\n\n  _proto.render = function render() {\n    var emotionCache = this.createEmotionCache(this.props.nonce);\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"CacheProvider\"], {\n      value: emotionCache\n    }, this.props.children);\n  };\n\n  return NonceProvider;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nvar index = Object(_stateManager_04f734a2_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__[\"m\"])(_Select_9fdb8cd0_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__[\"S\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2VsZWN0L2Rpc3QvcmVhY3Qtc2VsZWN0LmJyb3dzZXIuZXNtLmpzPzBhY2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5QztBQUNKO0FBQ1M7QUFDM0I7QUFDQztBQUNxQjtBQUN5QjtBQUNIO0FBQzJDO0FBQ3BGO0FBQ1E7QUFDNEM7QUFDakM7O0FBRXpDLCtDQUErQywwREFBMEQsMkNBQTJDLGlDQUFpQzs7QUFFckw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLGFBQWEsK0RBQVc7QUFDeEI7QUFDQSxPQUFPO0FBQ1A7O0FBRUEsK0JBQStCLDJEQUFVO0FBQ3pDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFdBQVcsNENBQUssZUFBZSwyREFBYTtBQUM1QztBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBLENBQUMsQ0FBQywrQ0FBUzs7QUFFWCxZQUFZLGdGQUFXLENBQUMsaUVBQU07O0FBRWYsb0VBQUssRUFBQztBQUNJIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0LXNlbGVjdC9kaXN0L3JlYWN0LXNlbGVjdC5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbWVtb2l6ZU9uZSBmcm9tICdtZW1vaXplLW9uZSc7XG5pbXBvcnQgeyBDYWNoZVByb3ZpZGVyIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgJ3JlYWN0LWRvbSc7XG5pbXBvcnQgJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICcuL3V0aWxzLTA2YjBkNWE0LmJyb3dzZXIuZXNtLmpzJztcbmV4cG9ydCB7IHkgYXMgY29tcG9uZW50cyB9IGZyb20gJy4vaW5kZXgtNDMyMmMwZWQuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgUyBhcyBTZWxlY3QgfSBmcm9tICcuL1NlbGVjdC05ZmRiOGNkMC5icm93c2VyLmVzbS5qcyc7XG5leHBvcnQgeyBjIGFzIGNyZWF0ZUZpbHRlciwgYSBhcyBkZWZhdWx0VGhlbWUsIG0gYXMgbWVyZ2VTdHlsZXMgfSBmcm9tICcuL1NlbGVjdC05ZmRiOGNkMC5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgJ3JlYWN0LWlucHV0LWF1dG9zaXplJztcbmltcG9ydCB7IG0gYXMgbWFuYWdlU3RhdGUgfSBmcm9tICcuL3N0YXRlTWFuYWdlci0wNGY3MzRhMi5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgY3JlYXRlQ2FjaGUgZnJvbSAnQGVtb3Rpb24vY2FjaGUnO1xuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE5vbmNlUHJvdmlkZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTm9uY2VQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTm9uY2VQcm92aWRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuY3JlYXRlRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gKG5vbmNlKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ2FjaGUoe1xuICAgICAgICBub25jZTogbm9uY2VcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfdGhpcy5jcmVhdGVFbW90aW9uQ2FjaGUgPSBtZW1vaXplT25lKF90aGlzLmNyZWF0ZUVtb3Rpb25DYWNoZSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE5vbmNlUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGVtb3Rpb25DYWNoZSA9IHRoaXMuY3JlYXRlRW1vdGlvbkNhY2hlKHRoaXMucHJvcHMubm9uY2UpO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENhY2hlUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBlbW90aW9uQ2FjaGVcbiAgICB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgfTtcblxuICByZXR1cm4gTm9uY2VQcm92aWRlcjtcbn0oQ29tcG9uZW50KTtcblxudmFyIGluZGV4ID0gbWFuYWdlU3RhdGUoU2VsZWN0KTtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG5leHBvcnQgeyBOb25jZVByb3ZpZGVyIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-select/dist/react-select.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/react-select/dist/stateManager-04f734a2.browser.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/react-select/dist/stateManager-04f734a2.browser.esm.js ***!
  \*****************************************************************************/
/*! exports provided: m */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return manageState; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nvar defaultProps = {\n  defaultInputValue: '',\n  defaultMenuIsOpen: false,\n  defaultValue: null\n};\n\nvar manageState = function manageState(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(StateManager, _Component);\n\n    function StateManager() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n      _this.select = void 0;\n      _this.state = {\n        inputValue: _this.props.inputValue !== undefined ? _this.props.inputValue : _this.props.defaultInputValue,\n        menuIsOpen: _this.props.menuIsOpen !== undefined ? _this.props.menuIsOpen : _this.props.defaultMenuIsOpen,\n        value: _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue\n      };\n\n      _this.onChange = function (value, actionMeta) {\n        _this.callProp('onChange', value, actionMeta);\n\n        _this.setState({\n          value: value\n        });\n      };\n\n      _this.onInputChange = function (value, actionMeta) {\n        // TODO: for backwards compatibility, we allow the prop to return a new\n        // value, but now inputValue is a controllable prop we probably shouldn't\n        var newValue = _this.callProp('onInputChange', value, actionMeta);\n\n        _this.setState({\n          inputValue: newValue !== undefined ? newValue : value\n        });\n      };\n\n      _this.onMenuOpen = function () {\n        _this.callProp('onMenuOpen');\n\n        _this.setState({\n          menuIsOpen: true\n        });\n      };\n\n      _this.onMenuClose = function () {\n        _this.callProp('onMenuClose');\n\n        _this.setState({\n          menuIsOpen: false\n        });\n      };\n\n      return _this;\n    }\n\n    var _proto = StateManager.prototype;\n\n    _proto.focus = function focus() {\n      this.select.focus();\n    };\n\n    _proto.blur = function blur() {\n      this.select.blur();\n    } // FIXME: untyped flow code, return any\n    ;\n\n    _proto.getProp = function getProp(key) {\n      return this.props[key] !== undefined ? this.props[key] : this.state[key];\n    } // FIXME: untyped flow code, return any\n    ;\n\n    _proto.callProp = function callProp(name) {\n      if (typeof this.props[name] === 'function') {\n        var _this$props;\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        return (_this$props = this.props)[name].apply(_this$props, args);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          defaultInputValue = _this$props2.defaultInputValue,\n          defaultMenuIsOpen = _this$props2.defaultMenuIsOpen,\n          defaultValue = _this$props2.defaultValue,\n          props = _objectWithoutPropertiesLoose(_this$props2, [\"defaultInputValue\", \"defaultMenuIsOpen\", \"defaultValue\"]);\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SelectComponent, _extends({}, props, {\n        ref: function ref(_ref) {\n          _this2.select = _ref;\n        },\n        inputValue: this.getProp('inputValue'),\n        menuIsOpen: this.getProp('menuIsOpen'),\n        onChange: this.onChange,\n        onInputChange: this.onInputChange,\n        onMenuClose: this.onMenuClose,\n        onMenuOpen: this.onMenuOpen,\n        value: this.getProp('value')\n      }));\n    };\n\n    return StateManager;\n  }(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]), _class.defaultProps = defaultProps, _temp;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2VsZWN0L2Rpc3Qvc3RhdGVNYW5hZ2VyLTA0ZjczNGEyLmJyb3dzZXIuZXNtLmpzP2Q2NmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUM7O0FBRXpDLHFCQUFxQixnREFBZ0QsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlLEdBQUcsd0NBQXdDOztBQUUzVCwwREFBMEQsK0JBQStCLGlCQUFpQixzQ0FBc0MsWUFBWSxZQUFZLHVCQUF1QixPQUFPLHFCQUFxQiwwQ0FBMEMsMkJBQTJCLEVBQUUsZUFBZTs7QUFFalQsK0NBQStDLDBEQUEwRCwyQ0FBMkMsaUNBQWlDO0FBQ3JMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHlFQUF5RSxhQUFhO0FBQ3RGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtHQUFrRyxlQUFlO0FBQ2pIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLDRDQUFLLDJDQUEyQztBQUM3RDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0EsR0FBRyxDQUFDLCtDQUFTO0FBQ2I7O0FBRTRCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0LXNlbGVjdC9kaXN0L3N0YXRlTWFuYWdlci0wNGY3MzRhMi5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBkZWZhdWx0SW5wdXRWYWx1ZTogJycsXG4gIGRlZmF1bHRNZW51SXNPcGVuOiBmYWxzZSxcbiAgZGVmYXVsdFZhbHVlOiBudWxsXG59O1xuXG52YXIgbWFuYWdlU3RhdGUgPSBmdW5jdGlvbiBtYW5hZ2VTdGF0ZShTZWxlY3RDb21wb25lbnQpIHtcbiAgdmFyIF9jbGFzcywgX3RlbXA7XG5cbiAgcmV0dXJuIF90ZW1wID0gX2NsYXNzID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFN0YXRlTWFuYWdlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBTdGF0ZU1hbmFnZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuY2FsbC5hcHBseShfQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuc2VsZWN0ID0gdm9pZCAwO1xuICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgIGlucHV0VmFsdWU6IF90aGlzLnByb3BzLmlucHV0VmFsdWUgIT09IHVuZGVmaW5lZCA/IF90aGlzLnByb3BzLmlucHV0VmFsdWUgOiBfdGhpcy5wcm9wcy5kZWZhdWx0SW5wdXRWYWx1ZSxcbiAgICAgICAgbWVudUlzT3BlbjogX3RoaXMucHJvcHMubWVudUlzT3BlbiAhPT0gdW5kZWZpbmVkID8gX3RoaXMucHJvcHMubWVudUlzT3BlbiA6IF90aGlzLnByb3BzLmRlZmF1bHRNZW51SXNPcGVuLFxuICAgICAgICB2YWx1ZTogX3RoaXMucHJvcHMudmFsdWUgIT09IHVuZGVmaW5lZCA/IF90aGlzLnByb3BzLnZhbHVlIDogX3RoaXMucHJvcHMuZGVmYXVsdFZhbHVlXG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5vbkNoYW5nZSA9IGZ1bmN0aW9uICh2YWx1ZSwgYWN0aW9uTWV0YSkge1xuICAgICAgICBfdGhpcy5jYWxsUHJvcCgnb25DaGFuZ2UnLCB2YWx1ZSwgYWN0aW9uTWV0YSk7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIF90aGlzLm9uSW5wdXRDaGFuZ2UgPSBmdW5jdGlvbiAodmFsdWUsIGFjdGlvbk1ldGEpIHtcbiAgICAgICAgLy8gVE9ETzogZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LCB3ZSBhbGxvdyB0aGUgcHJvcCB0byByZXR1cm4gYSBuZXdcbiAgICAgICAgLy8gdmFsdWUsIGJ1dCBub3cgaW5wdXRWYWx1ZSBpcyBhIGNvbnRyb2xsYWJsZSBwcm9wIHdlIHByb2JhYmx5IHNob3VsZG4ndFxuICAgICAgICB2YXIgbmV3VmFsdWUgPSBfdGhpcy5jYWxsUHJvcCgnb25JbnB1dENoYW5nZScsIHZhbHVlLCBhY3Rpb25NZXRhKTtcblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgaW5wdXRWYWx1ZTogbmV3VmFsdWUgIT09IHVuZGVmaW5lZCA/IG5ld1ZhbHVlIDogdmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5vbk1lbnVPcGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpcy5jYWxsUHJvcCgnb25NZW51T3BlbicpO1xuXG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBtZW51SXNPcGVuOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgX3RoaXMub25NZW51Q2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLmNhbGxQcm9wKCdvbk1lbnVDbG9zZScpO1xuXG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBtZW51SXNPcGVuOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gU3RhdGVNYW5hZ2VyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5mb2N1cyA9IGZ1bmN0aW9uIGZvY3VzKCkge1xuICAgICAgdGhpcy5zZWxlY3QuZm9jdXMoKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmJsdXIgPSBmdW5jdGlvbiBibHVyKCkge1xuICAgICAgdGhpcy5zZWxlY3QuYmx1cigpO1xuICAgIH0gLy8gRklYTUU6IHVudHlwZWQgZmxvdyBjb2RlLCByZXR1cm4gYW55XG4gICAgO1xuXG4gICAgX3Byb3RvLmdldFByb3AgPSBmdW5jdGlvbiBnZXRQcm9wKGtleSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHNba2V5XSAhPT0gdW5kZWZpbmVkID8gdGhpcy5wcm9wc1trZXldIDogdGhpcy5zdGF0ZVtrZXldO1xuICAgIH0gLy8gRklYTUU6IHVudHlwZWQgZmxvdyBjb2RlLCByZXR1cm4gYW55XG4gICAgO1xuXG4gICAgX3Byb3RvLmNhbGxQcm9wID0gZnVuY3Rpb24gY2FsbFByb3AobmFtZSkge1xuICAgICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzW25hbWVdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBfdGhpcyRwcm9wcztcblxuICAgICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKF90aGlzJHByb3BzID0gdGhpcy5wcm9wcylbbmFtZV0uYXBwbHkoX3RoaXMkcHJvcHMsIGFyZ3MpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGRlZmF1bHRJbnB1dFZhbHVlID0gX3RoaXMkcHJvcHMyLmRlZmF1bHRJbnB1dFZhbHVlLFxuICAgICAgICAgIGRlZmF1bHRNZW51SXNPcGVuID0gX3RoaXMkcHJvcHMyLmRlZmF1bHRNZW51SXNPcGVuLFxuICAgICAgICAgIGRlZmF1bHRWYWx1ZSA9IF90aGlzJHByb3BzMi5kZWZhdWx0VmFsdWUsXG4gICAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImRlZmF1bHRJbnB1dFZhbHVlXCIsIFwiZGVmYXVsdE1lbnVJc09wZW5cIiwgXCJkZWZhdWx0VmFsdWVcIl0pO1xuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3RDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihfcmVmKSB7XG4gICAgICAgICAgX3RoaXMyLnNlbGVjdCA9IF9yZWY7XG4gICAgICAgIH0sXG4gICAgICAgIGlucHV0VmFsdWU6IHRoaXMuZ2V0UHJvcCgnaW5wdXRWYWx1ZScpLFxuICAgICAgICBtZW51SXNPcGVuOiB0aGlzLmdldFByb3AoJ21lbnVJc09wZW4nKSxcbiAgICAgICAgb25DaGFuZ2U6IHRoaXMub25DaGFuZ2UsXG4gICAgICAgIG9uSW5wdXRDaGFuZ2U6IHRoaXMub25JbnB1dENoYW5nZSxcbiAgICAgICAgb25NZW51Q2xvc2U6IHRoaXMub25NZW51Q2xvc2UsXG4gICAgICAgIG9uTWVudU9wZW46IHRoaXMub25NZW51T3BlbixcbiAgICAgICAgdmFsdWU6IHRoaXMuZ2V0UHJvcCgndmFsdWUnKVxuICAgICAgfSkpO1xuICAgIH07XG5cbiAgICByZXR1cm4gU3RhdGVNYW5hZ2VyO1xuICB9KENvbXBvbmVudCksIF9jbGFzcy5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHMsIF90ZW1wO1xufTtcblxuZXhwb3J0IHsgbWFuYWdlU3RhdGUgYXMgbSB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-select/dist/stateManager-04f734a2.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js ***!
  \**********************************************************************/
/*! exports provided: a, b, c, d, e, f, g, h, i, j, k, n, s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return getScrollParent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getScrollTop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return animatedScrollTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return isMobileDevice; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return cleanValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return scrollIntoView; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return getBoundingClientObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return classNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return isTouchCapable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return isDocumentElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return handleInputChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return scrollTo; });\n// ==============================\n// NO OP\n// ==============================\nvar noop = function noop() {};\n// Class Name Prefixer\n// ==============================\n\n/**\n String representation of component state for styling with class names.\n\n Expects an array of strings OR a string/object pair:\n - className(['comp', 'comp-arg', 'comp-arg-2'])\n   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'\n - className('comp', { some: true, state: false })\n   @returns 'react-select__comp react-select__comp--some'\n*/\n\nfunction applyPrefixToName(prefix, name) {\n  if (!name) {\n    return prefix;\n  } else if (name[0] === '-') {\n    return prefix + name;\n  } else {\n    return prefix + '__' + name;\n  }\n}\n\nfunction classNames(prefix, state, className) {\n  var arr = [className];\n\n  if (state && prefix) {\n    for (var key in state) {\n      if (state.hasOwnProperty(key) && state[key]) {\n        arr.push(\"\" + applyPrefixToName(prefix, key));\n      }\n    }\n  }\n\n  return arr.filter(function (i) {\n    return i;\n  }).map(function (i) {\n    return String(i).trim();\n  }).join(' ');\n} // ==============================\n// Clean Value\n// ==============================\n\nvar cleanValue = function cleanValue(value) {\n  if (Array.isArray(value)) return value.filter(Boolean);\n  if (typeof value === 'object' && value !== null) return [value];\n  return [];\n}; // ==============================\n// Handle Input Change\n// ==============================\n\nfunction handleInputChange(inputValue, actionMeta, onInputChange) {\n  if (onInputChange) {\n    var newValue = onInputChange(inputValue, actionMeta);\n    if (typeof newValue === 'string') return newValue;\n  }\n\n  return inputValue;\n} // ==============================\n// Scroll Helpers\n// ==============================\n\nfunction isDocumentElement(el) {\n  return [document.documentElement, document.body, window].indexOf(el) > -1;\n} // Normalized Scroll Top\n// ------------------------------\n\nfunction getScrollTop(el) {\n  if (isDocumentElement(el)) {\n    return window.pageYOffset;\n  }\n\n  return el.scrollTop;\n}\nfunction scrollTo(el, top) {\n  // with a scroll distance, we perform scroll on the element\n  if (isDocumentElement(el)) {\n    window.scrollTo(0, top);\n    return;\n  }\n\n  el.scrollTop = top;\n} // Get Scroll Parent\n// ------------------------------\n\nfunction getScrollParent(element) {\n  var style = getComputedStyle(element);\n  var excludeStaticParent = style.position === 'absolute';\n  var overflowRx = /(auto|scroll)/;\n  var docEl = document.documentElement; // suck it, flow...\n\n  if (style.position === 'fixed') return docEl;\n\n  for (var parent = element; parent = parent.parentElement;) {\n    style = getComputedStyle(parent);\n\n    if (excludeStaticParent && style.position === 'static') {\n      continue;\n    }\n\n    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {\n      return parent;\n    }\n  }\n\n  return docEl;\n} // Animated Scroll To\n// ------------------------------\n\n/**\n  @param t: time (elapsed)\n  @param b: initial value\n  @param c: amount of change\n  @param d: duration\n*/\n\nfunction easeOutCubic(t, b, c, d) {\n  return c * ((t = t / d - 1) * t * t + 1) + b;\n}\n\nfunction animatedScrollTo(element, to, duration, callback) {\n  if (duration === void 0) {\n    duration = 200;\n  }\n\n  if (callback === void 0) {\n    callback = noop;\n  }\n\n  var start = getScrollTop(element);\n  var change = to - start;\n  var increment = 10;\n  var currentTime = 0;\n\n  function animateScroll() {\n    currentTime += increment;\n    var val = easeOutCubic(currentTime, start, change, duration);\n    scrollTo(element, val);\n\n    if (currentTime < duration) {\n      window.requestAnimationFrame(animateScroll);\n    } else {\n      callback(element);\n    }\n  }\n\n  animateScroll();\n} // Scroll Into View\n// ------------------------------\n\nfunction scrollIntoView(menuEl, focusedEl) {\n  var menuRect = menuEl.getBoundingClientRect();\n  var focusedRect = focusedEl.getBoundingClientRect();\n  var overScroll = focusedEl.offsetHeight / 3;\n\n  if (focusedRect.bottom + overScroll > menuRect.bottom) {\n    scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight));\n  } else if (focusedRect.top - overScroll < menuRect.top) {\n    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));\n  }\n} // ==============================\n// Get bounding client object\n// ==============================\n// cannot get keys using array notation with DOMRect\n\nfunction getBoundingClientObj(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width\n  };\n}\n// Touch Capability Detector\n// ==============================\n\nfunction isTouchCapable() {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // ==============================\n// Mobile Device Detector\n// ==============================\n\nfunction isMobileDevice() {\n  try {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  } catch (e) {\n    return false;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/react/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIGZyb20gZGxsLXJlZmVyZW5jZSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDA/YmEzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKF9fd2VicGFja19yZXF1aXJlX18oLyohIGRsbC1yZWZlcmVuY2UgZGxsXzJhZGMyNDAzZDg5YWRjMTZlYWQwICovIFwiZGxsLXJlZmVyZW5jZSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDBcIikpKFwiLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2hhcm1vbnktbW9kdWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/harmony-module.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react_select__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-select */ \"./node_modules/react-select/dist/react-select.browser.esm.js\");\n/* harmony import */ var _components_index_Header__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/index/Header */ \"./components/index/Header.js\");\n/* harmony import */ var _components_index_Footer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/index/Footer */ \"./components/index/Footer.js\");\n/* harmony import */ var _data_countries__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data/countries */ \"./data/countries.js\");\n/* harmony import */ var _data_countryInfo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/countryInfo */ \"./data/countryInfo.js\");\n/* harmony import */ var _data_airlineInfo__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data/airlineInfo */ \"./data/airlineInfo.js\");\n\n\n\n\n\n\n\nvar _jsxFileName = \"/Users/joseribeiro/Projects/canifly/pages/index.js\",\n    _this3 = undefined;\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\nvar HomePage = /*#__PURE__*/function (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(HomePage, _React$Component);\n\n  var _super = _createSuper(HomePage);\n\n  function HomePage(props) {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, HomePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      originCountry: \"*\",\n      destinationCountry: \"*\"\n    };\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(HomePage, [{\n    key: \"handleDestinationChange\",\n    value: function handleDestinationChange(option) {\n      this.setState({\n        destinationCountry: option.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var countriesOptions = Object.entries(_data_countries__WEBPACK_IMPORTED_MODULE_10__[\"default\"]).map(function (_ref) {\n        var _ref2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref, 2),\n            key = _ref2[0],\n            country = _ref2[1];\n\n        return {\n          value: key,\n          label: \"\".concat(country.flag, \" \").concat(country.name)\n        };\n      });\n      var destinationOption = countriesOptions.find(function (options) {\n        return options.value === _this2.state.destinationCountry;\n      });\n      var destination = _data_countries__WEBPACK_IMPORTED_MODULE_10__[\"default\"][this.state.destinationCountry];\n      var destinationInfo = _data_countryInfo__WEBPACK_IMPORTED_MODULE_11__[\"default\"][this.state.destinationCountry];\n      var destinationAirlineInfo = _data_airlineInfo__WEBPACK_IMPORTED_MODULE_12__[\"default\"][this.state.destinationCountry];\n      console.log(this.state.destinationCountry);\n      return __jsx(\"main\", {\n        className: \"container mx-auto p-5 my-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, __jsx(_components_index_Header__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"grid grid-cols-12 gap-4 my-10 mx-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"col-span-12 md:col-span-6 lg:col-span-4 lg:col-start-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, __jsx(\"h3\", {\n        className: \"font-medium mb-1 inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, \"I am leaving from\"), __jsx(\"span\", {\n        className: \"italic text-gray-500 text-xs ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"(Coming soon)\"), __jsx(react_select__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        options: countriesOptions,\n        defaultValue: countriesOptions[0],\n        isDisabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        className: \"col-span-12 md:col-span-6 lg:col-span-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, __jsx(\"h3\", {\n        className: \"font-medium mb-1 inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"I want to go\"), __jsx(react_select__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        options: countriesOptions,\n        value: destinationOption,\n        onChange: this.handleDestinationChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        className: \"col-span-12 lg:col-span-8 lg:col-start-3 mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, destinationOption.value === \"*\" ? __jsx(\"h4\", {\n        className: \"text-2xl font-medium text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"Select a destination above to see more information about the country.\") : __jsx(\"article\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, __jsx(\"h4\", {\n        className: \"text-5xl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, destination.flag), __jsx(\"h4\", {\n        className: \"text-2xl font-black tracking-tighter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, destination.name), destinationInfo ? __jsx(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, __jsx(\"p\", {\n        className: \"text-gray-500 mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, destinationInfo.updated_at), __jsx(Description, {\n        data: destinationInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }), \" \", __jsx(AirlineInfo, {\n        data: destinationAirlineInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 60\n        }\n      })) : __jsx(\"p\", {\n        className: \"text-red-700 mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, \"Seems like we don't information about this country yet. \\uD83D\\uDE15\")))), __jsx(_components_index_Footer__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HomePage;\n}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HomePage);\nvar countryNames = Object.values(_data_countries__WEBPACK_IMPORTED_MODULE_10__[\"default\"]).map(function (country) {\n  return country.name;\n});\n\nvar boldNameMapper = function boldNameMapper(word) {\n  var name = word.replace(/[\\W\\d_]/g, \"\");\n  return countryNames.includes(name) ? __jsx(\"b\", {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 40\n    }\n  }, word, \" \") : \"\".concat(word, \" \");\n};\n\nvar Description = function Description(_ref3) {\n  var data = _ref3.data;\n\n  var prepareText = function prepareText(input) {\n    return input ? input.split(\" \").map(boldNameMapper) : \"\";\n  };\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, __jsx(\"p\", {\n    className: \"text-xl mt-5 tracking-tighter\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Latest news\"), data.info ? __jsx(\"p\", {\n    className: \"text-justify\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, prepareText(data.info)) : __jsx(\"p\", {\n    className: \"text-red-700 mb-5\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Sorry, we don't have any news about this country yet. \\uD83D\\uDE15\"), __jsx(\"p\", {\n    className: \"text-xl mt-5 tracking-tighter\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Certification status\"), __jsx(\"p\", {\n    className: \"text mb-5\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, data.certification_status), __jsx(\"p\", {\n    className: \"text-xl mt-5 tracking-tighter\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Travel restrictions\"), __jsx(\"p\", {\n    className: \"text-justify\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, prepareText(data.restrictions)));\n};\n\n_c = Description;\n\nvar AirlineInfo = function AirlineInfo(_ref4) {\n  var data = _ref4.data;\n  return data ? __jsx(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, __jsx(\"h4\", {\n    className: \"text-2xl mt-5 font-black tracking-tighter\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Latest airline news\"), data.map(function (item) {\n    return __jsx(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, __jsx(\"p\", {\n      className: \"text-xl mt-5 tracking-tighter\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, item.airline), __jsx(\"p\", {\n      className: \"text-gray-500 mb-5\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, item.updated_at), __jsx(\"p\", {\n      className: \"text-justify\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, item.info), __jsx(\"a\", {\n      className: \"no-underline\",\n      href: item.source,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Source\"));\n  })) : \"\";\n};\n\n_c2 = AirlineInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Description\");\n$RefreshReg$(_c2, \"AirlineInfo\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ 1:
/*!*******************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F&absolutePagePath=%2FUsers%2Fjoseribeiro%2FProjects%2Fcanifly%2Fpages%2Findex.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! next-client-pages-loader?page=%2F&absolutePagePath=%2FUsers%2Fjoseribeiro%2FProjects%2Fcanifly%2Fpages%2Findex.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fjoseribeiro%2FProjects%2Fcanifly%2Fpages%2Findex.js!./");


/***/ }),

/***/ "dll-reference dll_2adc2403d89adc16ead0":
/*!*******************************************!*\
  !*** external "dll_2adc2403d89adc16ead0" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = dll_2adc2403d89adc16ead0;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDBcIj84ZGU3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImRsbC1yZWZlcmVuY2UgZGxsXzJhZGMyNDAzZDg5YWRjMTZlYWQwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBkbGxfMmFkYzI0MDNkODlhZGMxNmVhZDA7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///dll-reference dll_2adc2403d89adc16ead0\n");

/***/ })

},[[1,"static/runtime/webpack.js"]]]);