webpackHotUpdate("static/development/pages/index.js",{

/***/ "./data/countries.js":
/*!***************************!*\
  !*** ./data/countries.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  \"*\": {\n    friendlyName: \"Anywhere\",\n    flag: \"🏳\"\n  },\n  AC: {\n    code: \"AC\",\n    name: \"Ascension Island\",\n    flag: \"🇦🇨\"\n  },\n  AD: {\n    code: \"AD\",\n    name: \"Andorra\",\n    flag: \"🇦🇩\"\n  },\n  AE: {\n    code: \"AE\",\n    name: \"United Arab Emirates\",\n    flag: \"🇦🇪\"\n  },\n  AF: {\n    code: \"AF\",\n    name: \"Afghanistan\",\n    flag: \"🇦🇫\"\n  },\n  AG: {\n    code: \"AG\",\n    name: \"Antigua & Barbuda\",\n    flag: \"🇦🇬\"\n  },\n  AI: {\n    code: \"AI\",\n    name: \"Anguilla\",\n    flag: \"🇦🇮\"\n  },\n  AL: {\n    code: \"AL\",\n    name: \"Albania\",\n    flag: \"🇦🇱\"\n  },\n  AM: {\n    code: \"AM\",\n    name: \"Armenia\",\n    flag: \"🇦🇲\"\n  },\n  AO: {\n    code: \"AO\",\n    name: \"Angola\",\n    flag: \"🇦🇴\"\n  },\n  AQ: {\n    code: \"AQ\",\n    name: \"Antarctica\",\n    flag: \"🇦🇶\"\n  },\n  AR: {\n    code: \"AR\",\n    name: \"Argentina\",\n    flag: \"🇦🇷\"\n  },\n  AS: {\n    code: \"AS\",\n    name: \"American Samoa\",\n    flag: \"🇦🇸\"\n  },\n  AT: {\n    code: \"AT\",\n    name: \"Austria\",\n    flag: \"🇦🇹\"\n  },\n  AU: {\n    code: \"AU\",\n    name: \"Australia\",\n    flag: \"🇦🇺\"\n  },\n  AW: {\n    code: \"AW\",\n    name: \"Aruba\",\n    flag: \"🇦🇼\"\n  },\n  AX: {\n    code: \"AX\",\n    name: \"Åland Islands\",\n    flag: \"🇦🇽\"\n  },\n  AZ: {\n    code: \"AZ\",\n    name: \"Azerbaijan\",\n    flag: \"🇦🇿\"\n  },\n  BA: {\n    code: \"BA\",\n    name: \"Bosnia & Herzegovina\",\n    flag: \"🇧🇦\"\n  },\n  BB: {\n    code: \"BB\",\n    name: \"Barbados\",\n    flag: \"🇧🇧\"\n  },\n  BD: {\n    code: \"BD\",\n    name: \"Bangladesh\",\n    flag: \"🇧🇩\"\n  },\n  BE: {\n    code: \"BE\",\n    name: \"Belgium\",\n    flag: \"🇧🇪\"\n  },\n  BF: {\n    code: \"BF\",\n    name: \"Burkina Faso\",\n    flag: \"🇧🇫\"\n  },\n  BG: {\n    code: \"BG\",\n    name: \"Bulgaria\",\n    flag: \"🇧🇬\"\n  },\n  BH: {\n    code: \"BH\",\n    name: \"Bahrain\",\n    flag: \"🇧🇭\"\n  },\n  BI: {\n    code: \"BI\",\n    name: \"Burundi\",\n    flag: \"🇧🇮\"\n  },\n  BJ: {\n    code: \"BJ\",\n    name: \"Benin\",\n    flag: \"🇧🇯\"\n  },\n  BL: {\n    code: \"BL\",\n    name: \"St. Barthélemy\",\n    flag: \"🇧🇱\"\n  },\n  BM: {\n    code: \"BM\",\n    name: \"Bermuda\",\n    flag: \"🇧🇲\"\n  },\n  BN: {\n    code: \"BN\",\n    name: \"Brunei\",\n    flag: \"🇧🇳\"\n  },\n  BO: {\n    code: \"BO\",\n    name: \"Bolivia\",\n    flag: \"🇧🇴\"\n  },\n  BQ: {\n    code: \"BQ\",\n    name: \"Caribbean Netherlands\",\n    flag: \"🇧🇶\"\n  },\n  BR: {\n    code: \"BR\",\n    name: \"Brazil\",\n    flag: \"🇧🇷\"\n  },\n  BS: {\n    code: \"BS\",\n    name: \"Bahamas\",\n    flag: \"🇧🇸\"\n  },\n  BT: {\n    code: \"BT\",\n    name: \"Bhutan\",\n    flag: \"🇧🇹\"\n  },\n  BV: {\n    code: \"BV\",\n    name: \"Bouvet Island\",\n    flag: \"🇧🇻\"\n  },\n  BW: {\n    code: \"BW\",\n    name: \"Botswana\",\n    flag: \"🇧🇼\"\n  },\n  BY: {\n    code: \"BY\",\n    name: \"Belarus\",\n    flag: \"🇧🇾\"\n  },\n  BZ: {\n    code: \"BZ\",\n    name: \"Belize\",\n    flag: \"🇧🇿\"\n  },\n  CA: {\n    code: \"CA\",\n    name: \"Canada\",\n    flag: \"🇨🇦\"\n  },\n  CC: {\n    code: \"CC\",\n    name: \"Cocos (Keeling) Islands\",\n    flag: \"🇨🇨\"\n  },\n  CD: {\n    code: \"CD\",\n    name: \"Congo - Kinshasa\",\n    flag: \"🇨🇩\"\n  },\n  CF: {\n    code: \"CF\",\n    name: \"Central African Republic\",\n    flag: \"🇨🇫\"\n  },\n  CG: {\n    code: \"CG\",\n    name: \"Congo - Brazzaville\",\n    flag: \"🇨🇬\"\n  },\n  CH: {\n    code: \"CH\",\n    name: \"Switzerland\",\n    flag: \"🇨🇭\"\n  },\n  CI: {\n    code: \"CI\",\n    name: \"Côte d’Ivoire\",\n    flag: \"🇨🇮\"\n  },\n  CK: {\n    code: \"CK\",\n    name: \"Cook Islands\",\n    flag: \"🇨🇰\"\n  },\n  CL: {\n    code: \"CL\",\n    name: \"Chile\",\n    flag: \"🇨🇱\"\n  },\n  CM: {\n    code: \"CM\",\n    name: \"Cameroon\",\n    flag: \"🇨🇲\"\n  },\n  CN: {\n    code: \"CN\",\n    name: \"China\",\n    flag: \"🇨🇳\"\n  },\n  CO: {\n    code: \"CO\",\n    name: \"Colombia\",\n    flag: \"🇨🇴\"\n  },\n  CP: {\n    code: \"CP\",\n    name: \"Clipperton Island\",\n    flag: \"🇨🇵\"\n  },\n  CR: {\n    code: \"CR\",\n    name: \"Costa Rica\",\n    flag: \"🇨🇷\"\n  },\n  CU: {\n    code: \"CU\",\n    name: \"Cuba\",\n    flag: \"🇨🇺\"\n  },\n  CV: {\n    code: \"CV\",\n    name: \"Cape Verde\",\n    flag: \"🇨🇻\"\n  },\n  CW: {\n    code: \"CW\",\n    name: \"Curaçao\",\n    flag: \"🇨🇼\"\n  },\n  CX: {\n    code: \"CX\",\n    name: \"Christmas Island\",\n    flag: \"🇨🇽\"\n  },\n  CY: {\n    code: \"CY\",\n    name: \"Cyprus\",\n    flag: \"🇨🇾\"\n  },\n  CZ: {\n    code: \"CZ\",\n    name: \"Czechia\",\n    flag: \"🇨🇿\"\n  },\n  DE: {\n    code: \"DE\",\n    name: \"Germany\",\n    flag: \"🇩🇪\"\n  },\n  DG: {\n    code: \"DG\",\n    name: \"Diego Garcia\",\n    flag: \"🇩🇬\"\n  },\n  DJ: {\n    code: \"DJ\",\n    name: \"Djibouti\",\n    flag: \"🇩🇯\"\n  },\n  DK: {\n    code: \"DK\",\n    name: \"Denmark\",\n    flag: \"🇩🇰\"\n  },\n  DM: {\n    code: \"DM\",\n    name: \"Dominica\",\n    flag: \"🇩🇲\"\n  },\n  DO: {\n    code: \"DO\",\n    name: \"Dominican Republic\",\n    flag: \"🇩🇴\"\n  },\n  DZ: {\n    code: \"DZ\",\n    name: \"Algeria\",\n    flag: \"🇩🇿\"\n  },\n  EA: {\n    code: \"EA\",\n    name: \"Ceuta & Melilla\",\n    flag: \"🇪🇦\"\n  },\n  EC: {\n    code: \"EC\",\n    name: \"Ecuador\",\n    flag: \"🇪🇨\"\n  },\n  EE: {\n    code: \"EE\",\n    name: \"Estonia\",\n    flag: \"🇪🇪\"\n  },\n  EG: {\n    code: \"EG\",\n    name: \"Egypt\",\n    flag: \"🇪🇬\"\n  },\n  EH: {\n    code: \"EH\",\n    name: \"Western Sahara\",\n    flag: \"🇪🇭\"\n  },\n  ER: {\n    code: \"ER\",\n    name: \"Eritrea\",\n    flag: \"🇪🇷\"\n  },\n  ES: {\n    code: \"ES\",\n    name: \"Spain\",\n    flag: \"🇪🇸\"\n  },\n  ET: {\n    code: \"ET\",\n    name: \"Ethiopia\",\n    flag: \"🇪🇹\"\n  },\n  EU: {\n    code: \"EU\",\n    name: \"European Union\",\n    flag: \"🇪🇺\"\n  },\n  FI: {\n    code: \"FI\",\n    name: \"Finland\",\n    flag: \"🇫🇮\"\n  },\n  FJ: {\n    code: \"FJ\",\n    name: \"Fiji\",\n    flag: \"🇫🇯\"\n  },\n  FK: {\n    code: \"FK\",\n    name: \"Falkland Islands\",\n    flag: \"🇫🇰\"\n  },\n  FM: {\n    code: \"FM\",\n    name: \"Micronesia\",\n    flag: \"🇫🇲\"\n  },\n  FO: {\n    code: \"FO\",\n    name: \"Faroe Islands\",\n    flag: \"🇫🇴\"\n  },\n  FR: {\n    code: \"FR\",\n    name: \"France\",\n    flag: \"🇫🇷\"\n  },\n  GA: {\n    code: \"GA\",\n    name: \"Gabon\",\n    flag: \"🇬🇦\"\n  },\n  GB: {\n    code: \"GB\",\n    name: \"United Kingdom\",\n    flag: \"🇬🇧\"\n  },\n  GD: {\n    code: \"GD\",\n    name: \"Grenada\",\n    flag: \"🇬🇩\"\n  },\n  GE: {\n    code: \"GE\",\n    name: \"Georgia\",\n    flag: \"🇬🇪\"\n  },\n  GF: {\n    code: \"GF\",\n    name: \"French Guiana\",\n    flag: \"🇬🇫\"\n  },\n  GG: {\n    code: \"GG\",\n    name: \"Guernsey\",\n    flag: \"🇬🇬\"\n  },\n  GH: {\n    code: \"GH\",\n    name: \"Ghana\",\n    flag: \"🇬🇭\"\n  },\n  GI: {\n    code: \"GI\",\n    name: \"Gibraltar\",\n    flag: \"🇬🇮\"\n  },\n  GL: {\n    code: \"GL\",\n    name: \"Greenland\",\n    flag: \"🇬🇱\"\n  },\n  GM: {\n    code: \"GM\",\n    name: \"Gambia\",\n    flag: \"🇬🇲\"\n  },\n  GN: {\n    code: \"GN\",\n    name: \"Guinea\",\n    flag: \"🇬🇳\"\n  },\n  GP: {\n    code: \"GP\",\n    name: \"Guadeloupe\",\n    flag: \"🇬🇵\"\n  },\n  GQ: {\n    code: \"GQ\",\n    name: \"Equatorial Guinea\",\n    flag: \"🇬🇶\"\n  },\n  GR: {\n    code: \"GR\",\n    name: \"Greece\",\n    flag: \"🇬🇷\"\n  },\n  GS: {\n    code: \"GS\",\n    name: \"South Georgia & South Sandwich Islands\",\n    flag: \"🇬🇸\"\n  },\n  GT: {\n    code: \"GT\",\n    name: \"Guatemala\",\n    flag: \"🇬🇹\"\n  },\n  GU: {\n    code: \"GU\",\n    name: \"Guam\",\n    flag: \"🇬🇺\"\n  },\n  GW: {\n    code: \"GW\",\n    name: \"Guinea-Bissau\",\n    flag: \"🇬🇼\"\n  },\n  GY: {\n    code: \"GY\",\n    name: \"Guyana\",\n    flag: \"🇬🇾\"\n  },\n  HK: {\n    code: \"HK\",\n    name: \"Hong Kong SAR China\",\n    flag: \"🇭🇰\"\n  },\n  HM: {\n    code: \"HM\",\n    name: \"Heard & McDonald Islands\",\n    flag: \"🇭🇲\"\n  },\n  HN: {\n    code: \"HN\",\n    name: \"Honduras\",\n    flag: \"🇭🇳\"\n  },\n  HR: {\n    code: \"HR\",\n    name: \"Croatia\",\n    flag: \"🇭🇷\"\n  },\n  HT: {\n    code: \"HT\",\n    name: \"Haiti\",\n    flag: \"🇭🇹\"\n  },\n  HU: {\n    code: \"HU\",\n    name: \"Hungary\",\n    flag: \"🇭🇺\"\n  },\n  IC: {\n    code: \"IC\",\n    name: \"Canary Islands\",\n    flag: \"🇮🇨\"\n  },\n  ID: {\n    code: \"ID\",\n    name: \"Indonesia\",\n    flag: \"🇮🇩\"\n  },\n  IE: {\n    code: \"IE\",\n    name: \"Ireland\",\n    flag: \"🇮🇪\"\n  },\n  IL: {\n    code: \"IL\",\n    name: \"Israel\",\n    flag: \"🇮🇱\"\n  },\n  IM: {\n    code: \"IM\",\n    name: \"Isle of Man\",\n    flag: \"🇮🇲\"\n  },\n  IN: {\n    code: \"IN\",\n    name: \"India\",\n    flag: \"🇮🇳\"\n  },\n  IO: {\n    code: \"IO\",\n    name: \"British Indian Ocean Territory\",\n    flag: \"🇮🇴\"\n  },\n  IQ: {\n    code: \"IQ\",\n    name: \"Iraq\",\n    flag: \"🇮🇶\"\n  },\n  IR: {\n    code: \"IR\",\n    name: \"Iran\",\n    flag: \"🇮🇷\"\n  },\n  IS: {\n    code: \"IS\",\n    name: \"Iceland\",\n    flag: \"🇮🇸\"\n  },\n  IT: {\n    code: \"IT\",\n    name: \"Italy\",\n    flag: \"🇮🇹\"\n  },\n  JE: {\n    code: \"JE\",\n    name: \"Jersey\",\n    flag: \"🇯🇪\"\n  },\n  JM: {\n    code: \"JM\",\n    name: \"Jamaica\",\n    flag: \"🇯🇲\"\n  },\n  JO: {\n    code: \"JO\",\n    name: \"Jordan\",\n    flag: \"🇯🇴\"\n  },\n  JP: {\n    code: \"JP\",\n    name: \"Japan\",\n    flag: \"🇯🇵\"\n  },\n  KE: {\n    code: \"KE\",\n    name: \"Kenya\",\n    flag: \"🇰🇪\"\n  },\n  KG: {\n    code: \"KG\",\n    name: \"Kyrgyzstan\",\n    flag: \"🇰🇬\"\n  },\n  KH: {\n    code: \"KH\",\n    name: \"Cambodia\",\n    flag: \"🇰🇭\"\n  },\n  KI: {\n    code: \"KI\",\n    name: \"Kiribati\",\n    flag: \"🇰🇮\"\n  },\n  KM: {\n    code: \"KM\",\n    name: \"Comoros\",\n    flag: \"🇰🇲\"\n  },\n  KN: {\n    code: \"KN\",\n    name: \"St. Kitts & Nevis\",\n    flag: \"🇰🇳\"\n  },\n  KP: {\n    code: \"KP\",\n    name: \"North Korea\",\n    flag: \"🇰🇵\"\n  },\n  KR: {\n    code: \"KR\",\n    name: \"South Korea\",\n    flag: \"🇰🇷\"\n  },\n  KW: {\n    code: \"KW\",\n    name: \"Kuwait\",\n    flag: \"🇰🇼\"\n  },\n  KY: {\n    code: \"KY\",\n    name: \"Cayman Islands\",\n    flag: \"🇰🇾\"\n  },\n  KZ: {\n    code: \"KZ\",\n    name: \"Kazakhstan\",\n    flag: \"🇰🇿\"\n  },\n  LA: {\n    code: \"LA\",\n    name: \"Laos\",\n    flag: \"🇱🇦\"\n  },\n  LB: {\n    code: \"LB\",\n    name: \"Lebanon\",\n    flag: \"🇱🇧\"\n  },\n  LC: {\n    code: \"LC\",\n    name: \"St. Lucia\",\n    flag: \"🇱🇨\"\n  },\n  LI: {\n    code: \"LI\",\n    name: \"Liechtenstein\",\n    flag: \"🇱🇮\"\n  },\n  LK: {\n    code: \"LK\",\n    name: \"Sri Lanka\",\n    flag: \"🇱🇰\"\n  },\n  LR: {\n    code: \"LR\",\n    name: \"Liberia\",\n    flag: \"🇱🇷\"\n  },\n  LS: {\n    code: \"LS\",\n    name: \"Lesotho\",\n    flag: \"🇱🇸\"\n  },\n  LT: {\n    code: \"LT\",\n    name: \"Lithuania\",\n    flag: \"🇱🇹\"\n  },\n  LU: {\n    code: \"LU\",\n    name: \"Luxembourg\",\n    flag: \"🇱🇺\"\n  },\n  LV: {\n    code: \"LV\",\n    name: \"Latvia\",\n    flag: \"🇱🇻\"\n  },\n  LY: {\n    code: \"LY\",\n    name: \"Libya\",\n    flag: \"🇱🇾\"\n  },\n  MA: {\n    code: \"MA\",\n    name: \"Morocco\",\n    flag: \"🇲🇦\"\n  },\n  MC: {\n    code: \"MC\",\n    name: \"Monaco\",\n    flag: \"🇲🇨\"\n  },\n  MD: {\n    code: \"MD\",\n    name: \"Moldova\",\n    flag: \"🇲🇩\"\n  },\n  ME: {\n    code: \"ME\",\n    name: \"Montenegro\",\n    flag: \"🇲🇪\"\n  },\n  MF: {\n    code: \"MF\",\n    name: \"St. Martin\",\n    flag: \"🇲🇫\"\n  },\n  MG: {\n    code: \"MG\",\n    name: \"Madagascar\",\n    flag: \"🇲🇬\"\n  },\n  MH: {\n    code: \"MH\",\n    name: \"Marshall Islands\",\n    flag: \"🇲🇭\"\n  },\n  MK: {\n    code: \"MK\",\n    name: \"Macedonia\",\n    flag: \"🇲🇰\"\n  },\n  ML: {\n    code: \"ML\",\n    name: \"Mali\",\n    flag: \"🇲🇱\"\n  },\n  MM: {\n    code: \"MM\",\n    name: \"Myanmar (Burma)\",\n    flag: \"🇲🇲\"\n  },\n  MN: {\n    code: \"MN\",\n    name: \"Mongolia\",\n    flag: \"🇲🇳\"\n  },\n  MO: {\n    code: \"MO\",\n    name: \"Macau SAR China\",\n    flag: \"🇲🇴\"\n  },\n  MP: {\n    code: \"MP\",\n    name: \"Northern Mariana Islands\",\n    flag: \"🇲🇵\"\n  },\n  MQ: {\n    code: \"MQ\",\n    name: \"Martinique\",\n    flag: \"🇲🇶\"\n  },\n  MR: {\n    code: \"MR\",\n    name: \"Mauritania\",\n    flag: \"🇲🇷\"\n  },\n  MS: {\n    code: \"MS\",\n    name: \"Montserrat\",\n    flag: \"🇲🇸\"\n  },\n  MT: {\n    code: \"MT\",\n    name: \"Malta\",\n    flag: \"🇲🇹\"\n  },\n  MU: {\n    code: \"MU\",\n    name: \"Mauritius\",\n    flag: \"🇲🇺\"\n  },\n  MV: {\n    code: \"MV\",\n    name: \"Maldives\",\n    flag: \"🇲🇻\"\n  },\n  MW: {\n    code: \"MW\",\n    name: \"Malawi\",\n    flag: \"🇲🇼\"\n  },\n  MX: {\n    code: \"MX\",\n    name: \"Mexico\",\n    flag: \"🇲🇽\"\n  },\n  MY: {\n    code: \"MY\",\n    name: \"Malaysia\",\n    flag: \"🇲🇾\"\n  },\n  MZ: {\n    code: \"MZ\",\n    name: \"Mozambique\",\n    flag: \"🇲🇿\"\n  },\n  NA: {\n    code: \"NA\",\n    name: \"Namibia\",\n    flag: \"🇳🇦\"\n  },\n  NC: {\n    code: \"NC\",\n    name: \"New Caledonia\",\n    flag: \"🇳🇨\"\n  },\n  NE: {\n    code: \"NE\",\n    name: \"Niger\",\n    flag: \"🇳🇪\"\n  },\n  NF: {\n    code: \"NF\",\n    name: \"Norfolk Island\",\n    flag: \"🇳🇫\"\n  },\n  NG: {\n    code: \"NG\",\n    name: \"Nigeria\",\n    flag: \"🇳🇬\"\n  },\n  NI: {\n    code: \"NI\",\n    name: \"Nicaragua\",\n    flag: \"🇳🇮\"\n  },\n  NL: {\n    code: \"NL\",\n    name: \"Netherlands\",\n    flag: \"🇳🇱\"\n  },\n  NO: {\n    code: \"NO\",\n    name: \"Norway\",\n    flag: \"🇳🇴\"\n  },\n  NP: {\n    code: \"NP\",\n    name: \"Nepal\",\n    flag: \"🇳🇵\"\n  },\n  NR: {\n    code: \"NR\",\n    name: \"Nauru\",\n    flag: \"🇳🇷\"\n  },\n  NU: {\n    code: \"NU\",\n    name: \"Niue\",\n    flag: \"🇳🇺\"\n  },\n  NZ: {\n    code: \"NZ\",\n    name: \"New Zealand\",\n    flag: \"🇳🇿\"\n  },\n  OM: {\n    code: \"OM\",\n    name: \"Oman\",\n    flag: \"🇴🇲\"\n  },\n  PA: {\n    code: \"PA\",\n    name: \"Panama\",\n    flag: \"🇵🇦\"\n  },\n  PE: {\n    code: \"PE\",\n    name: \"Peru\",\n    flag: \"🇵🇪\"\n  },\n  PF: {\n    code: \"PF\",\n    name: \"French Polynesia\",\n    flag: \"🇵🇫\"\n  },\n  PG: {\n    code: \"PG\",\n    name: \"Papua New Guinea\",\n    flag: \"🇵🇬\"\n  },\n  PH: {\n    code: \"PH\",\n    name: \"Philippines\",\n    flag: \"🇵🇭\"\n  },\n  PK: {\n    code: \"PK\",\n    name: \"Pakistan\",\n    flag: \"🇵🇰\"\n  },\n  PL: {\n    code: \"PL\",\n    name: \"Poland\",\n    flag: \"🇵🇱\"\n  },\n  PM: {\n    code: \"PM\",\n    name: \"St. Pierre & Miquelon\",\n    flag: \"🇵🇲\"\n  },\n  PN: {\n    code: \"PN\",\n    name: \"Pitcairn Islands\",\n    flag: \"🇵🇳\"\n  },\n  PR: {\n    code: \"PR\",\n    name: \"Puerto Rico\",\n    flag: \"🇵🇷\"\n  },\n  PS: {\n    code: \"PS\",\n    name: \"Palestinian Territories\",\n    flag: \"🇵🇸\"\n  },\n  PT: {\n    code: \"PT\",\n    name: \"Portugal\",\n    flag: \"🇵🇹\"\n  },\n  PW: {\n    code: \"PW\",\n    name: \"Palau\",\n    flag: \"🇵🇼\"\n  },\n  PY: {\n    code: \"PY\",\n    name: \"Paraguay\",\n    flag: \"🇵🇾\"\n  },\n  QA: {\n    code: \"QA\",\n    name: \"Qatar\",\n    flag: \"🇶🇦\"\n  },\n  RE: {\n    code: \"RE\",\n    name: \"Réunion\",\n    flag: \"🇷🇪\"\n  },\n  RO: {\n    code: \"RO\",\n    name: \"Romania\",\n    flag: \"🇷🇴\"\n  },\n  RS: {\n    code: \"RS\",\n    name: \"Serbia\",\n    flag: \"🇷🇸\"\n  },\n  RU: {\n    code: \"RU\",\n    name: \"Russia\",\n    flag: \"🇷🇺\"\n  },\n  RW: {\n    code: \"RW\",\n    name: \"Rwanda\",\n    flag: \"🇷🇼\"\n  },\n  SA: {\n    code: \"SA\",\n    name: \"Saudi Arabia\",\n    flag: \"🇸🇦\"\n  },\n  SB: {\n    code: \"SB\",\n    name: \"Solomon Islands\",\n    flag: \"🇸🇧\"\n  },\n  SC: {\n    code: \"SC\",\n    name: \"Seychelles\",\n    flag: \"🇸🇨\"\n  },\n  SD: {\n    code: \"SD\",\n    name: \"Sudan\",\n    flag: \"🇸🇩\"\n  },\n  SE: {\n    code: \"SE\",\n    name: \"Sweden\",\n    flag: \"🇸🇪\"\n  },\n  SG: {\n    code: \"SG\",\n    name: \"Singapore\",\n    flag: \"🇸🇬\"\n  },\n  SH: {\n    code: \"SH\",\n    name: \"St. Helena\",\n    flag: \"🇸🇭\"\n  },\n  SI: {\n    code: \"SI\",\n    name: \"Slovenia\",\n    flag: \"🇸🇮\"\n  },\n  SJ: {\n    code: \"SJ\",\n    name: \"Svalbard & Jan Mayen\",\n    flag: \"🇸🇯\"\n  },\n  SK: {\n    code: \"SK\",\n    name: \"Slovakia\",\n    flag: \"🇸🇰\"\n  },\n  SL: {\n    code: \"SL\",\n    name: \"Sierra Leone\",\n    flag: \"🇸🇱\"\n  },\n  SM: {\n    code: \"SM\",\n    name: \"San Marino\",\n    flag: \"🇸🇲\"\n  },\n  SN: {\n    code: \"SN\",\n    name: \"Senegal\",\n    flag: \"🇸🇳\"\n  },\n  SO: {\n    code: \"SO\",\n    name: \"Somalia\",\n    flag: \"🇸🇴\"\n  },\n  SR: {\n    code: \"SR\",\n    name: \"Suriname\",\n    flag: \"🇸🇷\"\n  },\n  SS: {\n    code: \"SS\",\n    name: \"South Sudan\",\n    flag: \"🇸🇸\"\n  },\n  ST: {\n    code: \"ST\",\n    name: \"São Tomé & Príncipe\",\n    flag: \"🇸🇹\"\n  },\n  SV: {\n    code: \"SV\",\n    name: \"El Salvador\",\n    flag: \"🇸🇻\"\n  },\n  SX: {\n    code: \"SX\",\n    name: \"Sint Maarten\",\n    flag: \"🇸🇽\"\n  },\n  SY: {\n    code: \"SY\",\n    name: \"Syria\",\n    flag: \"🇸🇾\"\n  },\n  SZ: {\n    code: \"SZ\",\n    name: \"Swaziland\",\n    flag: \"🇸🇿\"\n  },\n  TA: {\n    code: \"TA\",\n    name: \"Tristan da Cunha\",\n    flag: \"🇹🇦\"\n  },\n  TC: {\n    code: \"TC\",\n    name: \"Turks & Caicos Islands\",\n    flag: \"🇹🇨\"\n  },\n  TD: {\n    code: \"TD\",\n    name: \"Chad\",\n    flag: \"🇹🇩\"\n  },\n  TF: {\n    code: \"TF\",\n    name: \"French Southern Territories\",\n    flag: \"🇹🇫\"\n  },\n  TG: {\n    code: \"TG\",\n    name: \"Togo\",\n    flag: \"🇹🇬\"\n  },\n  TH: {\n    code: \"TH\",\n    name: \"Thailand\",\n    flag: \"🇹🇭\"\n  },\n  TJ: {\n    code: \"TJ\",\n    name: \"Tajikistan\",\n    flag: \"🇹🇯\"\n  },\n  TK: {\n    code: \"TK\",\n    name: \"Tokelau\",\n    flag: \"🇹🇰\"\n  },\n  TL: {\n    code: \"TL\",\n    name: \"Timor-Leste\",\n    flag: \"🇹🇱\"\n  },\n  TM: {\n    code: \"TM\",\n    name: \"Turkmenistan\",\n    flag: \"🇹🇲\"\n  },\n  TN: {\n    code: \"TN\",\n    name: \"Tunisia\",\n    flag: \"🇹🇳\"\n  },\n  TO: {\n    code: \"TO\",\n    name: \"Tonga\",\n    flag: \"🇹🇴\"\n  },\n  TR: {\n    code: \"TR\",\n    name: \"Turkey\",\n    flag: \"🇹🇷\"\n  },\n  TT: {\n    code: \"TT\",\n    name: \"Trinidad & Tobago\",\n    flag: \"🇹🇹\"\n  },\n  TV: {\n    code: \"TV\",\n    name: \"Tuvalu\",\n    flag: \"🇹🇻\"\n  },\n  TW: {\n    code: \"TW\",\n    name: \"Taiwan\",\n    flag: \"🇹🇼\"\n  },\n  TZ: {\n    code: \"TZ\",\n    name: \"Tanzania\",\n    flag: \"🇹🇿\"\n  },\n  UA: {\n    code: \"UA\",\n    name: \"Ukraine\",\n    flag: \"🇺🇦\"\n  },\n  UG: {\n    code: \"UG\",\n    name: \"Uganda\",\n    flag: \"🇺🇬\"\n  },\n  UM: {\n    code: \"UM\",\n    name: \"U.S. Outlying Islands\",\n    flag: \"🇺🇲\"\n  },\n  UN: {\n    code: \"UN\",\n    name: \"United Nations\",\n    flag: \"🇺🇳\"\n  },\n  US: {\n    code: \"US\",\n    name: \"United States\",\n    flag: \"🇺🇸\"\n  },\n  UY: {\n    code: \"UY\",\n    name: \"Uruguay\",\n    flag: \"🇺🇾\"\n  },\n  UZ: {\n    code: \"UZ\",\n    name: \"Uzbekistan\",\n    flag: \"🇺🇿\"\n  },\n  VA: {\n    code: \"VA\",\n    name: \"Vatican City\",\n    flag: \"🇻🇦\"\n  },\n  VC: {\n    code: \"VC\",\n    name: \"St. Vincent & Grenadines\",\n    flag: \"🇻🇨\"\n  },\n  VE: {\n    code: \"VE\",\n    name: \"Venezuela\",\n    flag: \"🇻🇪\"\n  },\n  VG: {\n    code: \"VG\",\n    name: \"British Virgin Islands\",\n    flag: \"🇻🇬\"\n  },\n  VI: {\n    code: \"VI\",\n    name: \"U.S. Virgin Islands\",\n    flag: \"🇻🇮\"\n  },\n  VN: {\n    code: \"VN\",\n    name: \"Vietnam\",\n    flag: \"🇻🇳\"\n  },\n  VU: {\n    code: \"VU\",\n    name: \"Vanuatu\",\n    flag: \"🇻🇺\"\n  },\n  WF: {\n    code: \"WF\",\n    name: \"Wallis & Futuna\",\n    flag: \"🇼🇫\"\n  },\n  WS: {\n    code: \"WS\",\n    name: \"Samoa\",\n    flag: \"🇼🇸\"\n  },\n  XK: {\n    code: \"XK\",\n    name: \"Kosovo\",\n    flag: \"🇽🇰\"\n  },\n  YE: {\n    code: \"YE\",\n    name: \"Yemen\",\n    flag: \"🇾🇪\"\n  },\n  YT: {\n    code: \"YT\",\n    name: \"Mayotte\",\n    flag: \"🇾🇹\"\n  },\n  ZA: {\n    code: \"ZA\",\n    name: \"South Africa\",\n    flag: \"🇿🇦\"\n  },\n  ZM: {\n    code: \"ZM\",\n    name: \"Zambia\",\n    flag: \"🇿🇲\"\n  },\n  ZW: {\n    code: \"ZW\",\n    name: \"Zimbabwe\",\n    flag: \"🇿🇼\"\n  }\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/countries.js\n");

/***/ })

})